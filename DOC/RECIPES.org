* kube
** outputs
*** show available fields
#+BEGIN_SRC go
	ctx.Export("testIngress.URL:", testIng.Spec) //// retrievable with `p stack output tesIngress.URL`
#+END_SRC
** timeout
[[https://www.pulumi.com/docs/intro/concepts/resources/options/customtimeouts/][CustomTimeouts | Pulumi]]
#+BEGIN_SRC go
  ingress, err := networkingv1.NewIngress(ctx, ing.Name, &networkingv1.IngressArgs{//...
  //////////////////////////////////////////////////////////////////////////////// XOR 
  ////////////////////////////////////////////////////////////////////// w/o timeout
  // })
  ////////////////////////////////////////////////////////////////////// w/timeout
  },
  // pulumi.Timeouts(&pulumi.CustomTimeouts{Create: "1m"}))
  pulumi.Timeouts(&pulumi.CustomTimeouts{Create: "30s"}))
  //////////////////////////////////////////////////////////////////////
#+END_SRC
** dependencies
[[https://www.pulumi.com/docs/intro/concepts/resources/options/dependson/][DependsOn | Pulumi]]
** yaml-definitions
pulumi can use definitions from yaml-files
[[https://www.pulumi.com/registry/packages/kubernetes/api-docs/yaml/configfile/#local-file][kubernetes.yaml.ConfigFile | Pulumi Registry]]
#+BEGIN_SRC go
  _, err = yaml.NewConfigFile(ctx, "NAME", &yaml.ConfigFileArgs{
          File: "definition/.....yaml",
  // NOT: File: "./.....yaml",
  //             ^^^^^^^^^^^
  })
#+END_SRC
*** path
**** !!! must be specified starting from moduleRoot.
#+BEGIN_EXAMPLE
    ├─ kubernetes:yaml:ConfigFile                                                     certmanager-certificate-definition
    │  └─ kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition                 certificates.cert-manager.io
#+END_EXAMPLE
**** if yamls are specified relative, only the config files will be created
#+begin_example shell
pulumi stack
#+end_example
#+BEGIN_EXAMPLE
    ├─ kubernetes:yaml:ConfigFile                                                     certmanager-certificate-definition
#+END_EXAMPLE

