// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AuthService is the Schema for the authservices API
type AuthServiceType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// AuthServiceSpec defines the desired state of AuthService
	Spec *AuthServiceSpec `pulumi:"spec"`
}

// AuthServiceTypeInput is an input type that accepts AuthServiceTypeArgs and AuthServiceTypeOutput values.
// You can construct a concrete instance of `AuthServiceTypeInput` via:
//
//          AuthServiceTypeArgs{...}
type AuthServiceTypeInput interface {
	pulumi.Input

	ToAuthServiceTypeOutput() AuthServiceTypeOutput
	ToAuthServiceTypeOutputWithContext(context.Context) AuthServiceTypeOutput
}

// AuthService is the Schema for the authservices API
type AuthServiceTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// AuthServiceSpec defines the desired state of AuthService
	Spec AuthServiceSpecPtrInput `pulumi:"spec"`
}

func (AuthServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceType)(nil)).Elem()
}

func (i AuthServiceTypeArgs) ToAuthServiceTypeOutput() AuthServiceTypeOutput {
	return i.ToAuthServiceTypeOutputWithContext(context.Background())
}

func (i AuthServiceTypeArgs) ToAuthServiceTypeOutputWithContext(ctx context.Context) AuthServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceTypeOutput)
}

// AuthService is the Schema for the authservices API
type AuthServiceTypeOutput struct{ *pulumi.OutputState }

func (AuthServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceType)(nil)).Elem()
}

func (o AuthServiceTypeOutput) ToAuthServiceTypeOutput() AuthServiceTypeOutput {
	return o
}

func (o AuthServiceTypeOutput) ToAuthServiceTypeOutputWithContext(ctx context.Context) AuthServiceTypeOutput {
	return o
}

func (o AuthServiceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthServiceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o AuthServiceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthServiceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o AuthServiceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v AuthServiceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// AuthServiceSpec defines the desired state of AuthService
func (o AuthServiceTypeOutput) Spec() AuthServiceSpecPtrOutput {
	return o.ApplyT(func(v AuthServiceType) *AuthServiceSpec { return v.Spec }).(AuthServiceSpecPtrOutput)
}

type AuthServiceMetadata struct {
}

// AuthServiceMetadataInput is an input type that accepts AuthServiceMetadataArgs and AuthServiceMetadataOutput values.
// You can construct a concrete instance of `AuthServiceMetadataInput` via:
//
//          AuthServiceMetadataArgs{...}
type AuthServiceMetadataInput interface {
	pulumi.Input

	ToAuthServiceMetadataOutput() AuthServiceMetadataOutput
	ToAuthServiceMetadataOutputWithContext(context.Context) AuthServiceMetadataOutput
}

type AuthServiceMetadataArgs struct {
}

func (AuthServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceMetadata)(nil)).Elem()
}

func (i AuthServiceMetadataArgs) ToAuthServiceMetadataOutput() AuthServiceMetadataOutput {
	return i.ToAuthServiceMetadataOutputWithContext(context.Background())
}

func (i AuthServiceMetadataArgs) ToAuthServiceMetadataOutputWithContext(ctx context.Context) AuthServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceMetadataOutput)
}

type AuthServiceMetadataOutput struct{ *pulumi.OutputState }

func (AuthServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceMetadata)(nil)).Elem()
}

func (o AuthServiceMetadataOutput) ToAuthServiceMetadataOutput() AuthServiceMetadataOutput {
	return o
}

func (o AuthServiceMetadataOutput) ToAuthServiceMetadataOutputWithContext(ctx context.Context) AuthServiceMetadataOutput {
	return o
}

// AuthServiceSpec defines the desired state of AuthService
type AuthServiceSpec struct {
	Add_auth_headers              map[string]interface{} `pulumi:"add_auth_headers"`
	Add_linkerd_headers           *bool                  `pulumi:"add_linkerd_headers"`
	Allow_request_body            *bool                  `pulumi:"allow_request_body"`
	Allowed_authorization_headers []string               `pulumi:"allowed_authorization_headers"`
	Allowed_request_headers       []string               `pulumi:"allowed_request_headers"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id      interface{}                  `pulumi:"ambassador_id"`
	Auth_service       string                       `pulumi:"auth_service"`
	Failure_mode_allow *bool                        `pulumi:"failure_mode_allow"`
	Include_body       *AuthServiceSpecInclude_body `pulumi:"include_body"`
	Path_prefix        *string                      `pulumi:"path_prefix"`
	Proto              *string                      `pulumi:"proto"`
	Protocol_version   *string                      `pulumi:"protocol_version"`
	// Why isn't this just an int??
	Status_on_error *AuthServiceSpecStatus_on_error `pulumi:"status_on_error"`
	Timeout_ms      *int                            `pulumi:"timeout_ms"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls interface{} `pulumi:"tls"`
}

// AuthServiceSpecInput is an input type that accepts AuthServiceSpecArgs and AuthServiceSpecOutput values.
// You can construct a concrete instance of `AuthServiceSpecInput` via:
//
//          AuthServiceSpecArgs{...}
type AuthServiceSpecInput interface {
	pulumi.Input

	ToAuthServiceSpecOutput() AuthServiceSpecOutput
	ToAuthServiceSpecOutputWithContext(context.Context) AuthServiceSpecOutput
}

// AuthServiceSpec defines the desired state of AuthService
type AuthServiceSpecArgs struct {
	Add_auth_headers              pulumi.MapInput         `pulumi:"add_auth_headers"`
	Add_linkerd_headers           pulumi.BoolPtrInput     `pulumi:"add_linkerd_headers"`
	Allow_request_body            pulumi.BoolPtrInput     `pulumi:"allow_request_body"`
	Allowed_authorization_headers pulumi.StringArrayInput `pulumi:"allowed_authorization_headers"`
	Allowed_request_headers       pulumi.StringArrayInput `pulumi:"allowed_request_headers"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id      pulumi.Input                        `pulumi:"ambassador_id"`
	Auth_service       pulumi.StringInput                  `pulumi:"auth_service"`
	Failure_mode_allow pulumi.BoolPtrInput                 `pulumi:"failure_mode_allow"`
	Include_body       AuthServiceSpecInclude_bodyPtrInput `pulumi:"include_body"`
	Path_prefix        pulumi.StringPtrInput               `pulumi:"path_prefix"`
	Proto              pulumi.StringPtrInput               `pulumi:"proto"`
	Protocol_version   pulumi.StringPtrInput               `pulumi:"protocol_version"`
	// Why isn't this just an int??
	Status_on_error AuthServiceSpecStatus_on_errorPtrInput `pulumi:"status_on_error"`
	Timeout_ms      pulumi.IntPtrInput                     `pulumi:"timeout_ms"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls pulumi.Input `pulumi:"tls"`
}

func (AuthServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpec)(nil)).Elem()
}

func (i AuthServiceSpecArgs) ToAuthServiceSpecOutput() AuthServiceSpecOutput {
	return i.ToAuthServiceSpecOutputWithContext(context.Background())
}

func (i AuthServiceSpecArgs) ToAuthServiceSpecOutputWithContext(ctx context.Context) AuthServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecOutput)
}

func (i AuthServiceSpecArgs) ToAuthServiceSpecPtrOutput() AuthServiceSpecPtrOutput {
	return i.ToAuthServiceSpecPtrOutputWithContext(context.Background())
}

func (i AuthServiceSpecArgs) ToAuthServiceSpecPtrOutputWithContext(ctx context.Context) AuthServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecOutput).ToAuthServiceSpecPtrOutputWithContext(ctx)
}

// AuthServiceSpecPtrInput is an input type that accepts AuthServiceSpecArgs, AuthServiceSpecPtr and AuthServiceSpecPtrOutput values.
// You can construct a concrete instance of `AuthServiceSpecPtrInput` via:
//
//          AuthServiceSpecArgs{...}
//
//  or:
//
//          nil
type AuthServiceSpecPtrInput interface {
	pulumi.Input

	ToAuthServiceSpecPtrOutput() AuthServiceSpecPtrOutput
	ToAuthServiceSpecPtrOutputWithContext(context.Context) AuthServiceSpecPtrOutput
}

type authServiceSpecPtrType AuthServiceSpecArgs

func AuthServiceSpecPtr(v *AuthServiceSpecArgs) AuthServiceSpecPtrInput {
	return (*authServiceSpecPtrType)(v)
}

func (*authServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServiceSpec)(nil)).Elem()
}

func (i *authServiceSpecPtrType) ToAuthServiceSpecPtrOutput() AuthServiceSpecPtrOutput {
	return i.ToAuthServiceSpecPtrOutputWithContext(context.Background())
}

func (i *authServiceSpecPtrType) ToAuthServiceSpecPtrOutputWithContext(ctx context.Context) AuthServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecPtrOutput)
}

// AuthServiceSpec defines the desired state of AuthService
type AuthServiceSpecOutput struct{ *pulumi.OutputState }

func (AuthServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpec)(nil)).Elem()
}

func (o AuthServiceSpecOutput) ToAuthServiceSpecOutput() AuthServiceSpecOutput {
	return o
}

func (o AuthServiceSpecOutput) ToAuthServiceSpecOutputWithContext(ctx context.Context) AuthServiceSpecOutput {
	return o
}

func (o AuthServiceSpecOutput) ToAuthServiceSpecPtrOutput() AuthServiceSpecPtrOutput {
	return o.ToAuthServiceSpecPtrOutputWithContext(context.Background())
}

func (o AuthServiceSpecOutput) ToAuthServiceSpecPtrOutputWithContext(ctx context.Context) AuthServiceSpecPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *AuthServiceSpec {
		return &v
	}).(AuthServiceSpecPtrOutput)
}
func (o AuthServiceSpecOutput) Add_auth_headers() pulumi.MapOutput {
	return o.ApplyT(func(v AuthServiceSpec) map[string]interface{} { return v.Add_auth_headers }).(pulumi.MapOutput)
}

func (o AuthServiceSpecOutput) Add_linkerd_headers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *bool { return v.Add_linkerd_headers }).(pulumi.BoolPtrOutput)
}

func (o AuthServiceSpecOutput) Allow_request_body() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *bool { return v.Allow_request_body }).(pulumi.BoolPtrOutput)
}

func (o AuthServiceSpecOutput) Allowed_authorization_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthServiceSpec) []string { return v.Allowed_authorization_headers }).(pulumi.StringArrayOutput)
}

func (o AuthServiceSpecOutput) Allowed_request_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthServiceSpec) []string { return v.Allowed_request_headers }).(pulumi.StringArrayOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o AuthServiceSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v AuthServiceSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o AuthServiceSpecOutput) Auth_service() pulumi.StringOutput {
	return o.ApplyT(func(v AuthServiceSpec) string { return v.Auth_service }).(pulumi.StringOutput)
}

func (o AuthServiceSpecOutput) Failure_mode_allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *bool { return v.Failure_mode_allow }).(pulumi.BoolPtrOutput)
}

func (o AuthServiceSpecOutput) Include_body() AuthServiceSpecInclude_bodyPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *AuthServiceSpecInclude_body { return v.Include_body }).(AuthServiceSpecInclude_bodyPtrOutput)
}

func (o AuthServiceSpecOutput) Path_prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *string { return v.Path_prefix }).(pulumi.StringPtrOutput)
}

func (o AuthServiceSpecOutput) Proto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *string { return v.Proto }).(pulumi.StringPtrOutput)
}

func (o AuthServiceSpecOutput) Protocol_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *string { return v.Protocol_version }).(pulumi.StringPtrOutput)
}

// Why isn't this just an int??
func (o AuthServiceSpecOutput) Status_on_error() AuthServiceSpecStatus_on_errorPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *AuthServiceSpecStatus_on_error { return v.Status_on_error }).(AuthServiceSpecStatus_on_errorPtrOutput)
}

func (o AuthServiceSpecOutput) Timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthServiceSpec) *int { return v.Timeout_ms }).(pulumi.IntPtrOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o AuthServiceSpecOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v AuthServiceSpec) interface{} { return v.Tls }).(pulumi.AnyOutput)
}

type AuthServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (AuthServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServiceSpec)(nil)).Elem()
}

func (o AuthServiceSpecPtrOutput) ToAuthServiceSpecPtrOutput() AuthServiceSpecPtrOutput {
	return o
}

func (o AuthServiceSpecPtrOutput) ToAuthServiceSpecPtrOutputWithContext(ctx context.Context) AuthServiceSpecPtrOutput {
	return o
}

func (o AuthServiceSpecPtrOutput) Elem() AuthServiceSpecOutput {
	return o.ApplyT(func(v *AuthServiceSpec) AuthServiceSpec { return *v }).(AuthServiceSpecOutput)
}

func (o AuthServiceSpecPtrOutput) Add_auth_headers() pulumi.MapOutput {
	return o.ApplyT(func(v *AuthServiceSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Add_auth_headers
	}).(pulumi.MapOutput)
}

func (o AuthServiceSpecPtrOutput) Add_linkerd_headers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Add_linkerd_headers
	}).(pulumi.BoolPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Allow_request_body() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Allow_request_body
	}).(pulumi.BoolPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Allowed_authorization_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.Allowed_authorization_headers
	}).(pulumi.StringArrayOutput)
}

func (o AuthServiceSpecPtrOutput) Allowed_request_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.Allowed_request_headers
	}).(pulumi.StringArrayOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o AuthServiceSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *AuthServiceSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o AuthServiceSpecPtrOutput) Auth_service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Auth_service
	}).(pulumi.StringPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Failure_mode_allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Failure_mode_allow
	}).(pulumi.BoolPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Include_body() AuthServiceSpecInclude_bodyPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *AuthServiceSpecInclude_body {
		if v == nil {
			return nil
		}
		return v.Include_body
	}).(AuthServiceSpecInclude_bodyPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Path_prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Path_prefix
	}).(pulumi.StringPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Proto() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Proto
	}).(pulumi.StringPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Protocol_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Protocol_version
	}).(pulumi.StringPtrOutput)
}

// Why isn't this just an int??
func (o AuthServiceSpecPtrOutput) Status_on_error() AuthServiceSpecStatus_on_errorPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *AuthServiceSpecStatus_on_error {
		if v == nil {
			return nil
		}
		return v.Status_on_error
	}).(AuthServiceSpecStatus_on_errorPtrOutput)
}

func (o AuthServiceSpecPtrOutput) Timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Timeout_ms
	}).(pulumi.IntPtrOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o AuthServiceSpecPtrOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v *AuthServiceSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(pulumi.AnyOutput)
}

type AuthServiceSpecAdd_auth_headers struct {
}

// AuthServiceSpecAdd_auth_headersInput is an input type that accepts AuthServiceSpecAdd_auth_headersArgs and AuthServiceSpecAdd_auth_headersOutput values.
// You can construct a concrete instance of `AuthServiceSpecAdd_auth_headersInput` via:
//
//          AuthServiceSpecAdd_auth_headersArgs{...}
type AuthServiceSpecAdd_auth_headersInput interface {
	pulumi.Input

	ToAuthServiceSpecAdd_auth_headersOutput() AuthServiceSpecAdd_auth_headersOutput
	ToAuthServiceSpecAdd_auth_headersOutputWithContext(context.Context) AuthServiceSpecAdd_auth_headersOutput
}

type AuthServiceSpecAdd_auth_headersArgs struct {
}

func (AuthServiceSpecAdd_auth_headersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpecAdd_auth_headers)(nil)).Elem()
}

func (i AuthServiceSpecAdd_auth_headersArgs) ToAuthServiceSpecAdd_auth_headersOutput() AuthServiceSpecAdd_auth_headersOutput {
	return i.ToAuthServiceSpecAdd_auth_headersOutputWithContext(context.Background())
}

func (i AuthServiceSpecAdd_auth_headersArgs) ToAuthServiceSpecAdd_auth_headersOutputWithContext(ctx context.Context) AuthServiceSpecAdd_auth_headersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecAdd_auth_headersOutput)
}

type AuthServiceSpecAdd_auth_headersOutput struct{ *pulumi.OutputState }

func (AuthServiceSpecAdd_auth_headersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpecAdd_auth_headers)(nil)).Elem()
}

func (o AuthServiceSpecAdd_auth_headersOutput) ToAuthServiceSpecAdd_auth_headersOutput() AuthServiceSpecAdd_auth_headersOutput {
	return o
}

func (o AuthServiceSpecAdd_auth_headersOutput) ToAuthServiceSpecAdd_auth_headersOutputWithContext(ctx context.Context) AuthServiceSpecAdd_auth_headersOutput {
	return o
}

type AuthServiceSpecInclude_body struct {
	Allow_partial bool `pulumi:"allow_partial"`
	// These aren't pointer types because they are required.
	Max_bytes int `pulumi:"max_bytes"`
}

// AuthServiceSpecInclude_bodyInput is an input type that accepts AuthServiceSpecInclude_bodyArgs and AuthServiceSpecInclude_bodyOutput values.
// You can construct a concrete instance of `AuthServiceSpecInclude_bodyInput` via:
//
//          AuthServiceSpecInclude_bodyArgs{...}
type AuthServiceSpecInclude_bodyInput interface {
	pulumi.Input

	ToAuthServiceSpecInclude_bodyOutput() AuthServiceSpecInclude_bodyOutput
	ToAuthServiceSpecInclude_bodyOutputWithContext(context.Context) AuthServiceSpecInclude_bodyOutput
}

type AuthServiceSpecInclude_bodyArgs struct {
	Allow_partial pulumi.BoolInput `pulumi:"allow_partial"`
	// These aren't pointer types because they are required.
	Max_bytes pulumi.IntInput `pulumi:"max_bytes"`
}

func (AuthServiceSpecInclude_bodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpecInclude_body)(nil)).Elem()
}

func (i AuthServiceSpecInclude_bodyArgs) ToAuthServiceSpecInclude_bodyOutput() AuthServiceSpecInclude_bodyOutput {
	return i.ToAuthServiceSpecInclude_bodyOutputWithContext(context.Background())
}

func (i AuthServiceSpecInclude_bodyArgs) ToAuthServiceSpecInclude_bodyOutputWithContext(ctx context.Context) AuthServiceSpecInclude_bodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecInclude_bodyOutput)
}

func (i AuthServiceSpecInclude_bodyArgs) ToAuthServiceSpecInclude_bodyPtrOutput() AuthServiceSpecInclude_bodyPtrOutput {
	return i.ToAuthServiceSpecInclude_bodyPtrOutputWithContext(context.Background())
}

func (i AuthServiceSpecInclude_bodyArgs) ToAuthServiceSpecInclude_bodyPtrOutputWithContext(ctx context.Context) AuthServiceSpecInclude_bodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecInclude_bodyOutput).ToAuthServiceSpecInclude_bodyPtrOutputWithContext(ctx)
}

// AuthServiceSpecInclude_bodyPtrInput is an input type that accepts AuthServiceSpecInclude_bodyArgs, AuthServiceSpecInclude_bodyPtr and AuthServiceSpecInclude_bodyPtrOutput values.
// You can construct a concrete instance of `AuthServiceSpecInclude_bodyPtrInput` via:
//
//          AuthServiceSpecInclude_bodyArgs{...}
//
//  or:
//
//          nil
type AuthServiceSpecInclude_bodyPtrInput interface {
	pulumi.Input

	ToAuthServiceSpecInclude_bodyPtrOutput() AuthServiceSpecInclude_bodyPtrOutput
	ToAuthServiceSpecInclude_bodyPtrOutputWithContext(context.Context) AuthServiceSpecInclude_bodyPtrOutput
}

type authServiceSpecInclude_bodyPtrType AuthServiceSpecInclude_bodyArgs

func AuthServiceSpecInclude_bodyPtr(v *AuthServiceSpecInclude_bodyArgs) AuthServiceSpecInclude_bodyPtrInput {
	return (*authServiceSpecInclude_bodyPtrType)(v)
}

func (*authServiceSpecInclude_bodyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServiceSpecInclude_body)(nil)).Elem()
}

func (i *authServiceSpecInclude_bodyPtrType) ToAuthServiceSpecInclude_bodyPtrOutput() AuthServiceSpecInclude_bodyPtrOutput {
	return i.ToAuthServiceSpecInclude_bodyPtrOutputWithContext(context.Background())
}

func (i *authServiceSpecInclude_bodyPtrType) ToAuthServiceSpecInclude_bodyPtrOutputWithContext(ctx context.Context) AuthServiceSpecInclude_bodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecInclude_bodyPtrOutput)
}

type AuthServiceSpecInclude_bodyOutput struct{ *pulumi.OutputState }

func (AuthServiceSpecInclude_bodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpecInclude_body)(nil)).Elem()
}

func (o AuthServiceSpecInclude_bodyOutput) ToAuthServiceSpecInclude_bodyOutput() AuthServiceSpecInclude_bodyOutput {
	return o
}

func (o AuthServiceSpecInclude_bodyOutput) ToAuthServiceSpecInclude_bodyOutputWithContext(ctx context.Context) AuthServiceSpecInclude_bodyOutput {
	return o
}

func (o AuthServiceSpecInclude_bodyOutput) ToAuthServiceSpecInclude_bodyPtrOutput() AuthServiceSpecInclude_bodyPtrOutput {
	return o.ToAuthServiceSpecInclude_bodyPtrOutputWithContext(context.Background())
}

func (o AuthServiceSpecInclude_bodyOutput) ToAuthServiceSpecInclude_bodyPtrOutputWithContext(ctx context.Context) AuthServiceSpecInclude_bodyPtrOutput {
	return o.ApplyT(func(v AuthServiceSpecInclude_body) *AuthServiceSpecInclude_body {
		return &v
	}).(AuthServiceSpecInclude_bodyPtrOutput)
}
func (o AuthServiceSpecInclude_bodyOutput) Allow_partial() pulumi.BoolOutput {
	return o.ApplyT(func(v AuthServiceSpecInclude_body) bool { return v.Allow_partial }).(pulumi.BoolOutput)
}

// These aren't pointer types because they are required.
func (o AuthServiceSpecInclude_bodyOutput) Max_bytes() pulumi.IntOutput {
	return o.ApplyT(func(v AuthServiceSpecInclude_body) int { return v.Max_bytes }).(pulumi.IntOutput)
}

type AuthServiceSpecInclude_bodyPtrOutput struct{ *pulumi.OutputState }

func (AuthServiceSpecInclude_bodyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServiceSpecInclude_body)(nil)).Elem()
}

func (o AuthServiceSpecInclude_bodyPtrOutput) ToAuthServiceSpecInclude_bodyPtrOutput() AuthServiceSpecInclude_bodyPtrOutput {
	return o
}

func (o AuthServiceSpecInclude_bodyPtrOutput) ToAuthServiceSpecInclude_bodyPtrOutputWithContext(ctx context.Context) AuthServiceSpecInclude_bodyPtrOutput {
	return o
}

func (o AuthServiceSpecInclude_bodyPtrOutput) Elem() AuthServiceSpecInclude_bodyOutput {
	return o.ApplyT(func(v *AuthServiceSpecInclude_body) AuthServiceSpecInclude_body { return *v }).(AuthServiceSpecInclude_bodyOutput)
}

func (o AuthServiceSpecInclude_bodyPtrOutput) Allow_partial() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpecInclude_body) *bool {
		if v == nil {
			return nil
		}
		return &v.Allow_partial
	}).(pulumi.BoolPtrOutput)
}

// These aren't pointer types because they are required.
func (o AuthServiceSpecInclude_bodyPtrOutput) Max_bytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpecInclude_body) *int {
		if v == nil {
			return nil
		}
		return &v.Max_bytes
	}).(pulumi.IntPtrOutput)
}

// Why isn't this just an int??
type AuthServiceSpecStatus_on_error struct {
	Code *int `pulumi:"code"`
}

// AuthServiceSpecStatus_on_errorInput is an input type that accepts AuthServiceSpecStatus_on_errorArgs and AuthServiceSpecStatus_on_errorOutput values.
// You can construct a concrete instance of `AuthServiceSpecStatus_on_errorInput` via:
//
//          AuthServiceSpecStatus_on_errorArgs{...}
type AuthServiceSpecStatus_on_errorInput interface {
	pulumi.Input

	ToAuthServiceSpecStatus_on_errorOutput() AuthServiceSpecStatus_on_errorOutput
	ToAuthServiceSpecStatus_on_errorOutputWithContext(context.Context) AuthServiceSpecStatus_on_errorOutput
}

// Why isn't this just an int??
type AuthServiceSpecStatus_on_errorArgs struct {
	Code pulumi.IntPtrInput `pulumi:"code"`
}

func (AuthServiceSpecStatus_on_errorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpecStatus_on_error)(nil)).Elem()
}

func (i AuthServiceSpecStatus_on_errorArgs) ToAuthServiceSpecStatus_on_errorOutput() AuthServiceSpecStatus_on_errorOutput {
	return i.ToAuthServiceSpecStatus_on_errorOutputWithContext(context.Background())
}

func (i AuthServiceSpecStatus_on_errorArgs) ToAuthServiceSpecStatus_on_errorOutputWithContext(ctx context.Context) AuthServiceSpecStatus_on_errorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecStatus_on_errorOutput)
}

func (i AuthServiceSpecStatus_on_errorArgs) ToAuthServiceSpecStatus_on_errorPtrOutput() AuthServiceSpecStatus_on_errorPtrOutput {
	return i.ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(context.Background())
}

func (i AuthServiceSpecStatus_on_errorArgs) ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(ctx context.Context) AuthServiceSpecStatus_on_errorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecStatus_on_errorOutput).ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(ctx)
}

// AuthServiceSpecStatus_on_errorPtrInput is an input type that accepts AuthServiceSpecStatus_on_errorArgs, AuthServiceSpecStatus_on_errorPtr and AuthServiceSpecStatus_on_errorPtrOutput values.
// You can construct a concrete instance of `AuthServiceSpecStatus_on_errorPtrInput` via:
//
//          AuthServiceSpecStatus_on_errorArgs{...}
//
//  or:
//
//          nil
type AuthServiceSpecStatus_on_errorPtrInput interface {
	pulumi.Input

	ToAuthServiceSpecStatus_on_errorPtrOutput() AuthServiceSpecStatus_on_errorPtrOutput
	ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(context.Context) AuthServiceSpecStatus_on_errorPtrOutput
}

type authServiceSpecStatus_on_errorPtrType AuthServiceSpecStatus_on_errorArgs

func AuthServiceSpecStatus_on_errorPtr(v *AuthServiceSpecStatus_on_errorArgs) AuthServiceSpecStatus_on_errorPtrInput {
	return (*authServiceSpecStatus_on_errorPtrType)(v)
}

func (*authServiceSpecStatus_on_errorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServiceSpecStatus_on_error)(nil)).Elem()
}

func (i *authServiceSpecStatus_on_errorPtrType) ToAuthServiceSpecStatus_on_errorPtrOutput() AuthServiceSpecStatus_on_errorPtrOutput {
	return i.ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(context.Background())
}

func (i *authServiceSpecStatus_on_errorPtrType) ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(ctx context.Context) AuthServiceSpecStatus_on_errorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthServiceSpecStatus_on_errorPtrOutput)
}

// Why isn't this just an int??
type AuthServiceSpecStatus_on_errorOutput struct{ *pulumi.OutputState }

func (AuthServiceSpecStatus_on_errorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthServiceSpecStatus_on_error)(nil)).Elem()
}

func (o AuthServiceSpecStatus_on_errorOutput) ToAuthServiceSpecStatus_on_errorOutput() AuthServiceSpecStatus_on_errorOutput {
	return o
}

func (o AuthServiceSpecStatus_on_errorOutput) ToAuthServiceSpecStatus_on_errorOutputWithContext(ctx context.Context) AuthServiceSpecStatus_on_errorOutput {
	return o
}

func (o AuthServiceSpecStatus_on_errorOutput) ToAuthServiceSpecStatus_on_errorPtrOutput() AuthServiceSpecStatus_on_errorPtrOutput {
	return o.ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(context.Background())
}

func (o AuthServiceSpecStatus_on_errorOutput) ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(ctx context.Context) AuthServiceSpecStatus_on_errorPtrOutput {
	return o.ApplyT(func(v AuthServiceSpecStatus_on_error) *AuthServiceSpecStatus_on_error {
		return &v
	}).(AuthServiceSpecStatus_on_errorPtrOutput)
}
func (o AuthServiceSpecStatus_on_errorOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AuthServiceSpecStatus_on_error) *int { return v.Code }).(pulumi.IntPtrOutput)
}

type AuthServiceSpecStatus_on_errorPtrOutput struct{ *pulumi.OutputState }

func (AuthServiceSpecStatus_on_errorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthServiceSpecStatus_on_error)(nil)).Elem()
}

func (o AuthServiceSpecStatus_on_errorPtrOutput) ToAuthServiceSpecStatus_on_errorPtrOutput() AuthServiceSpecStatus_on_errorPtrOutput {
	return o
}

func (o AuthServiceSpecStatus_on_errorPtrOutput) ToAuthServiceSpecStatus_on_errorPtrOutputWithContext(ctx context.Context) AuthServiceSpecStatus_on_errorPtrOutput {
	return o
}

func (o AuthServiceSpecStatus_on_errorPtrOutput) Elem() AuthServiceSpecStatus_on_errorOutput {
	return o.ApplyT(func(v *AuthServiceSpecStatus_on_error) AuthServiceSpecStatus_on_error { return *v }).(AuthServiceSpecStatus_on_errorOutput)
}

func (o AuthServiceSpecStatus_on_errorPtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AuthServiceSpecStatus_on_error) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// ConsulResolver is the Schema for the ConsulResolver API
type ConsulResolverType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.
	Spec *ConsulResolverSpec `pulumi:"spec"`
}

// ConsulResolverTypeInput is an input type that accepts ConsulResolverTypeArgs and ConsulResolverTypeOutput values.
// You can construct a concrete instance of `ConsulResolverTypeInput` via:
//
//          ConsulResolverTypeArgs{...}
type ConsulResolverTypeInput interface {
	pulumi.Input

	ToConsulResolverTypeOutput() ConsulResolverTypeOutput
	ToConsulResolverTypeOutputWithContext(context.Context) ConsulResolverTypeOutput
}

// ConsulResolver is the Schema for the ConsulResolver API
type ConsulResolverTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.
	Spec ConsulResolverSpecPtrInput `pulumi:"spec"`
}

func (ConsulResolverTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsulResolverType)(nil)).Elem()
}

func (i ConsulResolverTypeArgs) ToConsulResolverTypeOutput() ConsulResolverTypeOutput {
	return i.ToConsulResolverTypeOutputWithContext(context.Background())
}

func (i ConsulResolverTypeArgs) ToConsulResolverTypeOutputWithContext(ctx context.Context) ConsulResolverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsulResolverTypeOutput)
}

// ConsulResolver is the Schema for the ConsulResolver API
type ConsulResolverTypeOutput struct{ *pulumi.OutputState }

func (ConsulResolverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsulResolverType)(nil)).Elem()
}

func (o ConsulResolverTypeOutput) ToConsulResolverTypeOutput() ConsulResolverTypeOutput {
	return o
}

func (o ConsulResolverTypeOutput) ToConsulResolverTypeOutputWithContext(ctx context.Context) ConsulResolverTypeOutput {
	return o
}

func (o ConsulResolverTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsulResolverType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ConsulResolverTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsulResolverType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ConsulResolverTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ConsulResolverType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.
func (o ConsulResolverTypeOutput) Spec() ConsulResolverSpecPtrOutput {
	return o.ApplyT(func(v ConsulResolverType) *ConsulResolverSpec { return v.Spec }).(ConsulResolverSpecPtrOutput)
}

type ConsulResolverMetadata struct {
}

// ConsulResolverMetadataInput is an input type that accepts ConsulResolverMetadataArgs and ConsulResolverMetadataOutput values.
// You can construct a concrete instance of `ConsulResolverMetadataInput` via:
//
//          ConsulResolverMetadataArgs{...}
type ConsulResolverMetadataInput interface {
	pulumi.Input

	ToConsulResolverMetadataOutput() ConsulResolverMetadataOutput
	ToConsulResolverMetadataOutputWithContext(context.Context) ConsulResolverMetadataOutput
}

type ConsulResolverMetadataArgs struct {
}

func (ConsulResolverMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsulResolverMetadata)(nil)).Elem()
}

func (i ConsulResolverMetadataArgs) ToConsulResolverMetadataOutput() ConsulResolverMetadataOutput {
	return i.ToConsulResolverMetadataOutputWithContext(context.Background())
}

func (i ConsulResolverMetadataArgs) ToConsulResolverMetadataOutputWithContext(ctx context.Context) ConsulResolverMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsulResolverMetadataOutput)
}

type ConsulResolverMetadataOutput struct{ *pulumi.OutputState }

func (ConsulResolverMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsulResolverMetadata)(nil)).Elem()
}

func (o ConsulResolverMetadataOutput) ToConsulResolverMetadataOutput() ConsulResolverMetadataOutput {
	return o
}

func (o ConsulResolverMetadataOutput) ToConsulResolverMetadataOutputWithContext(ctx context.Context) ConsulResolverMetadataOutput {
	return o
}

// ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.
type ConsulResolverSpec struct {
	Address *string `pulumi:"address"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id interface{} `pulumi:"ambassador_id"`
	Datacenter    *string     `pulumi:"datacenter"`
}

// ConsulResolverSpecInput is an input type that accepts ConsulResolverSpecArgs and ConsulResolverSpecOutput values.
// You can construct a concrete instance of `ConsulResolverSpecInput` via:
//
//          ConsulResolverSpecArgs{...}
type ConsulResolverSpecInput interface {
	pulumi.Input

	ToConsulResolverSpecOutput() ConsulResolverSpecOutput
	ToConsulResolverSpecOutputWithContext(context.Context) ConsulResolverSpecOutput
}

// ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.
type ConsulResolverSpecArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id pulumi.Input          `pulumi:"ambassador_id"`
	Datacenter    pulumi.StringPtrInput `pulumi:"datacenter"`
}

func (ConsulResolverSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsulResolverSpec)(nil)).Elem()
}

func (i ConsulResolverSpecArgs) ToConsulResolverSpecOutput() ConsulResolverSpecOutput {
	return i.ToConsulResolverSpecOutputWithContext(context.Background())
}

func (i ConsulResolverSpecArgs) ToConsulResolverSpecOutputWithContext(ctx context.Context) ConsulResolverSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsulResolverSpecOutput)
}

func (i ConsulResolverSpecArgs) ToConsulResolverSpecPtrOutput() ConsulResolverSpecPtrOutput {
	return i.ToConsulResolverSpecPtrOutputWithContext(context.Background())
}

func (i ConsulResolverSpecArgs) ToConsulResolverSpecPtrOutputWithContext(ctx context.Context) ConsulResolverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsulResolverSpecOutput).ToConsulResolverSpecPtrOutputWithContext(ctx)
}

// ConsulResolverSpecPtrInput is an input type that accepts ConsulResolverSpecArgs, ConsulResolverSpecPtr and ConsulResolverSpecPtrOutput values.
// You can construct a concrete instance of `ConsulResolverSpecPtrInput` via:
//
//          ConsulResolverSpecArgs{...}
//
//  or:
//
//          nil
type ConsulResolverSpecPtrInput interface {
	pulumi.Input

	ToConsulResolverSpecPtrOutput() ConsulResolverSpecPtrOutput
	ToConsulResolverSpecPtrOutputWithContext(context.Context) ConsulResolverSpecPtrOutput
}

type consulResolverSpecPtrType ConsulResolverSpecArgs

func ConsulResolverSpecPtr(v *ConsulResolverSpecArgs) ConsulResolverSpecPtrInput {
	return (*consulResolverSpecPtrType)(v)
}

func (*consulResolverSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsulResolverSpec)(nil)).Elem()
}

func (i *consulResolverSpecPtrType) ToConsulResolverSpecPtrOutput() ConsulResolverSpecPtrOutput {
	return i.ToConsulResolverSpecPtrOutputWithContext(context.Background())
}

func (i *consulResolverSpecPtrType) ToConsulResolverSpecPtrOutputWithContext(ctx context.Context) ConsulResolverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConsulResolverSpecPtrOutput)
}

// ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.
type ConsulResolverSpecOutput struct{ *pulumi.OutputState }

func (ConsulResolverSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConsulResolverSpec)(nil)).Elem()
}

func (o ConsulResolverSpecOutput) ToConsulResolverSpecOutput() ConsulResolverSpecOutput {
	return o
}

func (o ConsulResolverSpecOutput) ToConsulResolverSpecOutputWithContext(ctx context.Context) ConsulResolverSpecOutput {
	return o
}

func (o ConsulResolverSpecOutput) ToConsulResolverSpecPtrOutput() ConsulResolverSpecPtrOutput {
	return o.ToConsulResolverSpecPtrOutputWithContext(context.Background())
}

func (o ConsulResolverSpecOutput) ToConsulResolverSpecPtrOutputWithContext(ctx context.Context) ConsulResolverSpecPtrOutput {
	return o.ApplyT(func(v ConsulResolverSpec) *ConsulResolverSpec {
		return &v
	}).(ConsulResolverSpecPtrOutput)
}
func (o ConsulResolverSpecOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsulResolverSpec) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o ConsulResolverSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v ConsulResolverSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o ConsulResolverSpecOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConsulResolverSpec) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

type ConsulResolverSpecPtrOutput struct{ *pulumi.OutputState }

func (ConsulResolverSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConsulResolverSpec)(nil)).Elem()
}

func (o ConsulResolverSpecPtrOutput) ToConsulResolverSpecPtrOutput() ConsulResolverSpecPtrOutput {
	return o
}

func (o ConsulResolverSpecPtrOutput) ToConsulResolverSpecPtrOutputWithContext(ctx context.Context) ConsulResolverSpecPtrOutput {
	return o
}

func (o ConsulResolverSpecPtrOutput) Elem() ConsulResolverSpecOutput {
	return o.ApplyT(func(v *ConsulResolverSpec) ConsulResolverSpec { return *v }).(ConsulResolverSpecOutput)
}

func (o ConsulResolverSpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsulResolverSpec) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o ConsulResolverSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *ConsulResolverSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o ConsulResolverSpecPtrOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConsulResolverSpec) *string {
		if v == nil {
			return nil
		}
		return v.Datacenter
	}).(pulumi.StringPtrOutput)
}

// KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API
type KubernetesEndpointResolverType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.
	Spec *KubernetesEndpointResolverSpec `pulumi:"spec"`
}

// KubernetesEndpointResolverTypeInput is an input type that accepts KubernetesEndpointResolverTypeArgs and KubernetesEndpointResolverTypeOutput values.
// You can construct a concrete instance of `KubernetesEndpointResolverTypeInput` via:
//
//          KubernetesEndpointResolverTypeArgs{...}
type KubernetesEndpointResolverTypeInput interface {
	pulumi.Input

	ToKubernetesEndpointResolverTypeOutput() KubernetesEndpointResolverTypeOutput
	ToKubernetesEndpointResolverTypeOutputWithContext(context.Context) KubernetesEndpointResolverTypeOutput
}

// KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API
type KubernetesEndpointResolverTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.
	Spec KubernetesEndpointResolverSpecPtrInput `pulumi:"spec"`
}

func (KubernetesEndpointResolverTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesEndpointResolverType)(nil)).Elem()
}

func (i KubernetesEndpointResolverTypeArgs) ToKubernetesEndpointResolverTypeOutput() KubernetesEndpointResolverTypeOutput {
	return i.ToKubernetesEndpointResolverTypeOutputWithContext(context.Background())
}

func (i KubernetesEndpointResolverTypeArgs) ToKubernetesEndpointResolverTypeOutputWithContext(ctx context.Context) KubernetesEndpointResolverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesEndpointResolverTypeOutput)
}

// KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API
type KubernetesEndpointResolverTypeOutput struct{ *pulumi.OutputState }

func (KubernetesEndpointResolverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesEndpointResolverType)(nil)).Elem()
}

func (o KubernetesEndpointResolverTypeOutput) ToKubernetesEndpointResolverTypeOutput() KubernetesEndpointResolverTypeOutput {
	return o
}

func (o KubernetesEndpointResolverTypeOutput) ToKubernetesEndpointResolverTypeOutputWithContext(ctx context.Context) KubernetesEndpointResolverTypeOutput {
	return o
}

func (o KubernetesEndpointResolverTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesEndpointResolverType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KubernetesEndpointResolverTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesEndpointResolverType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KubernetesEndpointResolverTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KubernetesEndpointResolverType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.
func (o KubernetesEndpointResolverTypeOutput) Spec() KubernetesEndpointResolverSpecPtrOutput {
	return o.ApplyT(func(v KubernetesEndpointResolverType) *KubernetesEndpointResolverSpec { return v.Spec }).(KubernetesEndpointResolverSpecPtrOutput)
}

type KubernetesEndpointResolverMetadata struct {
}

// KubernetesEndpointResolverMetadataInput is an input type that accepts KubernetesEndpointResolverMetadataArgs and KubernetesEndpointResolverMetadataOutput values.
// You can construct a concrete instance of `KubernetesEndpointResolverMetadataInput` via:
//
//          KubernetesEndpointResolverMetadataArgs{...}
type KubernetesEndpointResolverMetadataInput interface {
	pulumi.Input

	ToKubernetesEndpointResolverMetadataOutput() KubernetesEndpointResolverMetadataOutput
	ToKubernetesEndpointResolverMetadataOutputWithContext(context.Context) KubernetesEndpointResolverMetadataOutput
}

type KubernetesEndpointResolverMetadataArgs struct {
}

func (KubernetesEndpointResolverMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesEndpointResolverMetadata)(nil)).Elem()
}

func (i KubernetesEndpointResolverMetadataArgs) ToKubernetesEndpointResolverMetadataOutput() KubernetesEndpointResolverMetadataOutput {
	return i.ToKubernetesEndpointResolverMetadataOutputWithContext(context.Background())
}

func (i KubernetesEndpointResolverMetadataArgs) ToKubernetesEndpointResolverMetadataOutputWithContext(ctx context.Context) KubernetesEndpointResolverMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesEndpointResolverMetadataOutput)
}

type KubernetesEndpointResolverMetadataOutput struct{ *pulumi.OutputState }

func (KubernetesEndpointResolverMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesEndpointResolverMetadata)(nil)).Elem()
}

func (o KubernetesEndpointResolverMetadataOutput) ToKubernetesEndpointResolverMetadataOutput() KubernetesEndpointResolverMetadataOutput {
	return o
}

func (o KubernetesEndpointResolverMetadataOutput) ToKubernetesEndpointResolverMetadataOutputWithContext(ctx context.Context) KubernetesEndpointResolverMetadataOutput {
	return o
}

// KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.
type KubernetesEndpointResolverSpec struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id interface{} `pulumi:"ambassador_id"`
}

// KubernetesEndpointResolverSpecInput is an input type that accepts KubernetesEndpointResolverSpecArgs and KubernetesEndpointResolverSpecOutput values.
// You can construct a concrete instance of `KubernetesEndpointResolverSpecInput` via:
//
//          KubernetesEndpointResolverSpecArgs{...}
type KubernetesEndpointResolverSpecInput interface {
	pulumi.Input

	ToKubernetesEndpointResolverSpecOutput() KubernetesEndpointResolverSpecOutput
	ToKubernetesEndpointResolverSpecOutputWithContext(context.Context) KubernetesEndpointResolverSpecOutput
}

// KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.
type KubernetesEndpointResolverSpecArgs struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id pulumi.Input `pulumi:"ambassador_id"`
}

func (KubernetesEndpointResolverSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesEndpointResolverSpec)(nil)).Elem()
}

func (i KubernetesEndpointResolverSpecArgs) ToKubernetesEndpointResolverSpecOutput() KubernetesEndpointResolverSpecOutput {
	return i.ToKubernetesEndpointResolverSpecOutputWithContext(context.Background())
}

func (i KubernetesEndpointResolverSpecArgs) ToKubernetesEndpointResolverSpecOutputWithContext(ctx context.Context) KubernetesEndpointResolverSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesEndpointResolverSpecOutput)
}

func (i KubernetesEndpointResolverSpecArgs) ToKubernetesEndpointResolverSpecPtrOutput() KubernetesEndpointResolverSpecPtrOutput {
	return i.ToKubernetesEndpointResolverSpecPtrOutputWithContext(context.Background())
}

func (i KubernetesEndpointResolverSpecArgs) ToKubernetesEndpointResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesEndpointResolverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesEndpointResolverSpecOutput).ToKubernetesEndpointResolverSpecPtrOutputWithContext(ctx)
}

// KubernetesEndpointResolverSpecPtrInput is an input type that accepts KubernetesEndpointResolverSpecArgs, KubernetesEndpointResolverSpecPtr and KubernetesEndpointResolverSpecPtrOutput values.
// You can construct a concrete instance of `KubernetesEndpointResolverSpecPtrInput` via:
//
//          KubernetesEndpointResolverSpecArgs{...}
//
//  or:
//
//          nil
type KubernetesEndpointResolverSpecPtrInput interface {
	pulumi.Input

	ToKubernetesEndpointResolverSpecPtrOutput() KubernetesEndpointResolverSpecPtrOutput
	ToKubernetesEndpointResolverSpecPtrOutputWithContext(context.Context) KubernetesEndpointResolverSpecPtrOutput
}

type kubernetesEndpointResolverSpecPtrType KubernetesEndpointResolverSpecArgs

func KubernetesEndpointResolverSpecPtr(v *KubernetesEndpointResolverSpecArgs) KubernetesEndpointResolverSpecPtrInput {
	return (*kubernetesEndpointResolverSpecPtrType)(v)
}

func (*kubernetesEndpointResolverSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesEndpointResolverSpec)(nil)).Elem()
}

func (i *kubernetesEndpointResolverSpecPtrType) ToKubernetesEndpointResolverSpecPtrOutput() KubernetesEndpointResolverSpecPtrOutput {
	return i.ToKubernetesEndpointResolverSpecPtrOutputWithContext(context.Background())
}

func (i *kubernetesEndpointResolverSpecPtrType) ToKubernetesEndpointResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesEndpointResolverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesEndpointResolverSpecPtrOutput)
}

// KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.
type KubernetesEndpointResolverSpecOutput struct{ *pulumi.OutputState }

func (KubernetesEndpointResolverSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesEndpointResolverSpec)(nil)).Elem()
}

func (o KubernetesEndpointResolverSpecOutput) ToKubernetesEndpointResolverSpecOutput() KubernetesEndpointResolverSpecOutput {
	return o
}

func (o KubernetesEndpointResolverSpecOutput) ToKubernetesEndpointResolverSpecOutputWithContext(ctx context.Context) KubernetesEndpointResolverSpecOutput {
	return o
}

func (o KubernetesEndpointResolverSpecOutput) ToKubernetesEndpointResolverSpecPtrOutput() KubernetesEndpointResolverSpecPtrOutput {
	return o.ToKubernetesEndpointResolverSpecPtrOutputWithContext(context.Background())
}

func (o KubernetesEndpointResolverSpecOutput) ToKubernetesEndpointResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesEndpointResolverSpecPtrOutput {
	return o.ApplyT(func(v KubernetesEndpointResolverSpec) *KubernetesEndpointResolverSpec {
		return &v
	}).(KubernetesEndpointResolverSpecPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o KubernetesEndpointResolverSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v KubernetesEndpointResolverSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

type KubernetesEndpointResolverSpecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesEndpointResolverSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesEndpointResolverSpec)(nil)).Elem()
}

func (o KubernetesEndpointResolverSpecPtrOutput) ToKubernetesEndpointResolverSpecPtrOutput() KubernetesEndpointResolverSpecPtrOutput {
	return o
}

func (o KubernetesEndpointResolverSpecPtrOutput) ToKubernetesEndpointResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesEndpointResolverSpecPtrOutput {
	return o
}

func (o KubernetesEndpointResolverSpecPtrOutput) Elem() KubernetesEndpointResolverSpecOutput {
	return o.ApplyT(func(v *KubernetesEndpointResolverSpec) KubernetesEndpointResolverSpec { return *v }).(KubernetesEndpointResolverSpecOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o KubernetesEndpointResolverSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *KubernetesEndpointResolverSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

// KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API
type KubernetesServiceResolverType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.
	Spec *KubernetesServiceResolverSpec `pulumi:"spec"`
}

// KubernetesServiceResolverTypeInput is an input type that accepts KubernetesServiceResolverTypeArgs and KubernetesServiceResolverTypeOutput values.
// You can construct a concrete instance of `KubernetesServiceResolverTypeInput` via:
//
//          KubernetesServiceResolverTypeArgs{...}
type KubernetesServiceResolverTypeInput interface {
	pulumi.Input

	ToKubernetesServiceResolverTypeOutput() KubernetesServiceResolverTypeOutput
	ToKubernetesServiceResolverTypeOutputWithContext(context.Context) KubernetesServiceResolverTypeOutput
}

// KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API
type KubernetesServiceResolverTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.
	Spec KubernetesServiceResolverSpecPtrInput `pulumi:"spec"`
}

func (KubernetesServiceResolverTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceResolverType)(nil)).Elem()
}

func (i KubernetesServiceResolverTypeArgs) ToKubernetesServiceResolverTypeOutput() KubernetesServiceResolverTypeOutput {
	return i.ToKubernetesServiceResolverTypeOutputWithContext(context.Background())
}

func (i KubernetesServiceResolverTypeArgs) ToKubernetesServiceResolverTypeOutputWithContext(ctx context.Context) KubernetesServiceResolverTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceResolverTypeOutput)
}

// KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API
type KubernetesServiceResolverTypeOutput struct{ *pulumi.OutputState }

func (KubernetesServiceResolverTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceResolverType)(nil)).Elem()
}

func (o KubernetesServiceResolverTypeOutput) ToKubernetesServiceResolverTypeOutput() KubernetesServiceResolverTypeOutput {
	return o
}

func (o KubernetesServiceResolverTypeOutput) ToKubernetesServiceResolverTypeOutputWithContext(ctx context.Context) KubernetesServiceResolverTypeOutput {
	return o
}

func (o KubernetesServiceResolverTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesServiceResolverType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o KubernetesServiceResolverTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesServiceResolverType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o KubernetesServiceResolverTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v KubernetesServiceResolverType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.
func (o KubernetesServiceResolverTypeOutput) Spec() KubernetesServiceResolverSpecPtrOutput {
	return o.ApplyT(func(v KubernetesServiceResolverType) *KubernetesServiceResolverSpec { return v.Spec }).(KubernetesServiceResolverSpecPtrOutput)
}

type KubernetesServiceResolverMetadata struct {
}

// KubernetesServiceResolverMetadataInput is an input type that accepts KubernetesServiceResolverMetadataArgs and KubernetesServiceResolverMetadataOutput values.
// You can construct a concrete instance of `KubernetesServiceResolverMetadataInput` via:
//
//          KubernetesServiceResolverMetadataArgs{...}
type KubernetesServiceResolverMetadataInput interface {
	pulumi.Input

	ToKubernetesServiceResolverMetadataOutput() KubernetesServiceResolverMetadataOutput
	ToKubernetesServiceResolverMetadataOutputWithContext(context.Context) KubernetesServiceResolverMetadataOutput
}

type KubernetesServiceResolverMetadataArgs struct {
}

func (KubernetesServiceResolverMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceResolverMetadata)(nil)).Elem()
}

func (i KubernetesServiceResolverMetadataArgs) ToKubernetesServiceResolverMetadataOutput() KubernetesServiceResolverMetadataOutput {
	return i.ToKubernetesServiceResolverMetadataOutputWithContext(context.Background())
}

func (i KubernetesServiceResolverMetadataArgs) ToKubernetesServiceResolverMetadataOutputWithContext(ctx context.Context) KubernetesServiceResolverMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceResolverMetadataOutput)
}

type KubernetesServiceResolverMetadataOutput struct{ *pulumi.OutputState }

func (KubernetesServiceResolverMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceResolverMetadata)(nil)).Elem()
}

func (o KubernetesServiceResolverMetadataOutput) ToKubernetesServiceResolverMetadataOutput() KubernetesServiceResolverMetadataOutput {
	return o
}

func (o KubernetesServiceResolverMetadataOutput) ToKubernetesServiceResolverMetadataOutputWithContext(ctx context.Context) KubernetesServiceResolverMetadataOutput {
	return o
}

// KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.
type KubernetesServiceResolverSpec struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id interface{} `pulumi:"ambassador_id"`
}

// KubernetesServiceResolverSpecInput is an input type that accepts KubernetesServiceResolverSpecArgs and KubernetesServiceResolverSpecOutput values.
// You can construct a concrete instance of `KubernetesServiceResolverSpecInput` via:
//
//          KubernetesServiceResolverSpecArgs{...}
type KubernetesServiceResolverSpecInput interface {
	pulumi.Input

	ToKubernetesServiceResolverSpecOutput() KubernetesServiceResolverSpecOutput
	ToKubernetesServiceResolverSpecOutputWithContext(context.Context) KubernetesServiceResolverSpecOutput
}

// KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.
type KubernetesServiceResolverSpecArgs struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id pulumi.Input `pulumi:"ambassador_id"`
}

func (KubernetesServiceResolverSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceResolverSpec)(nil)).Elem()
}

func (i KubernetesServiceResolverSpecArgs) ToKubernetesServiceResolverSpecOutput() KubernetesServiceResolverSpecOutput {
	return i.ToKubernetesServiceResolverSpecOutputWithContext(context.Background())
}

func (i KubernetesServiceResolverSpecArgs) ToKubernetesServiceResolverSpecOutputWithContext(ctx context.Context) KubernetesServiceResolverSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceResolverSpecOutput)
}

func (i KubernetesServiceResolverSpecArgs) ToKubernetesServiceResolverSpecPtrOutput() KubernetesServiceResolverSpecPtrOutput {
	return i.ToKubernetesServiceResolverSpecPtrOutputWithContext(context.Background())
}

func (i KubernetesServiceResolverSpecArgs) ToKubernetesServiceResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesServiceResolverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceResolverSpecOutput).ToKubernetesServiceResolverSpecPtrOutputWithContext(ctx)
}

// KubernetesServiceResolverSpecPtrInput is an input type that accepts KubernetesServiceResolverSpecArgs, KubernetesServiceResolverSpecPtr and KubernetesServiceResolverSpecPtrOutput values.
// You can construct a concrete instance of `KubernetesServiceResolverSpecPtrInput` via:
//
//          KubernetesServiceResolverSpecArgs{...}
//
//  or:
//
//          nil
type KubernetesServiceResolverSpecPtrInput interface {
	pulumi.Input

	ToKubernetesServiceResolverSpecPtrOutput() KubernetesServiceResolverSpecPtrOutput
	ToKubernetesServiceResolverSpecPtrOutputWithContext(context.Context) KubernetesServiceResolverSpecPtrOutput
}

type kubernetesServiceResolverSpecPtrType KubernetesServiceResolverSpecArgs

func KubernetesServiceResolverSpecPtr(v *KubernetesServiceResolverSpecArgs) KubernetesServiceResolverSpecPtrInput {
	return (*kubernetesServiceResolverSpecPtrType)(v)
}

func (*kubernetesServiceResolverSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesServiceResolverSpec)(nil)).Elem()
}

func (i *kubernetesServiceResolverSpecPtrType) ToKubernetesServiceResolverSpecPtrOutput() KubernetesServiceResolverSpecPtrOutput {
	return i.ToKubernetesServiceResolverSpecPtrOutputWithContext(context.Background())
}

func (i *kubernetesServiceResolverSpecPtrType) ToKubernetesServiceResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesServiceResolverSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesServiceResolverSpecPtrOutput)
}

// KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.
type KubernetesServiceResolverSpecOutput struct{ *pulumi.OutputState }

func (KubernetesServiceResolverSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesServiceResolverSpec)(nil)).Elem()
}

func (o KubernetesServiceResolverSpecOutput) ToKubernetesServiceResolverSpecOutput() KubernetesServiceResolverSpecOutput {
	return o
}

func (o KubernetesServiceResolverSpecOutput) ToKubernetesServiceResolverSpecOutputWithContext(ctx context.Context) KubernetesServiceResolverSpecOutput {
	return o
}

func (o KubernetesServiceResolverSpecOutput) ToKubernetesServiceResolverSpecPtrOutput() KubernetesServiceResolverSpecPtrOutput {
	return o.ToKubernetesServiceResolverSpecPtrOutputWithContext(context.Background())
}

func (o KubernetesServiceResolverSpecOutput) ToKubernetesServiceResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesServiceResolverSpecPtrOutput {
	return o.ApplyT(func(v KubernetesServiceResolverSpec) *KubernetesServiceResolverSpec {
		return &v
	}).(KubernetesServiceResolverSpecPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o KubernetesServiceResolverSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v KubernetesServiceResolverSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

type KubernetesServiceResolverSpecPtrOutput struct{ *pulumi.OutputState }

func (KubernetesServiceResolverSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesServiceResolverSpec)(nil)).Elem()
}

func (o KubernetesServiceResolverSpecPtrOutput) ToKubernetesServiceResolverSpecPtrOutput() KubernetesServiceResolverSpecPtrOutput {
	return o
}

func (o KubernetesServiceResolverSpecPtrOutput) ToKubernetesServiceResolverSpecPtrOutputWithContext(ctx context.Context) KubernetesServiceResolverSpecPtrOutput {
	return o
}

func (o KubernetesServiceResolverSpecPtrOutput) Elem() KubernetesServiceResolverSpecOutput {
	return o.ApplyT(func(v *KubernetesServiceResolverSpec) KubernetesServiceResolverSpec { return *v }).(KubernetesServiceResolverSpecOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o KubernetesServiceResolverSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *KubernetesServiceResolverSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

// LogService is the Schema for the logservices API
type LogServiceType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// LogServiceSpec defines the desired state of LogService
	Spec *LogServiceSpec `pulumi:"spec"`
}

// LogServiceTypeInput is an input type that accepts LogServiceTypeArgs and LogServiceTypeOutput values.
// You can construct a concrete instance of `LogServiceTypeInput` via:
//
//          LogServiceTypeArgs{...}
type LogServiceTypeInput interface {
	pulumi.Input

	ToLogServiceTypeOutput() LogServiceTypeOutput
	ToLogServiceTypeOutputWithContext(context.Context) LogServiceTypeOutput
}

// LogService is the Schema for the logservices API
type LogServiceTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// LogServiceSpec defines the desired state of LogService
	Spec LogServiceSpecPtrInput `pulumi:"spec"`
}

func (LogServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceType)(nil)).Elem()
}

func (i LogServiceTypeArgs) ToLogServiceTypeOutput() LogServiceTypeOutput {
	return i.ToLogServiceTypeOutputWithContext(context.Background())
}

func (i LogServiceTypeArgs) ToLogServiceTypeOutputWithContext(ctx context.Context) LogServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceTypeOutput)
}

// LogService is the Schema for the logservices API
type LogServiceTypeOutput struct{ *pulumi.OutputState }

func (LogServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceType)(nil)).Elem()
}

func (o LogServiceTypeOutput) ToLogServiceTypeOutput() LogServiceTypeOutput {
	return o
}

func (o LogServiceTypeOutput) ToLogServiceTypeOutputWithContext(ctx context.Context) LogServiceTypeOutput {
	return o
}

func (o LogServiceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogServiceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o LogServiceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogServiceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o LogServiceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v LogServiceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// LogServiceSpec defines the desired state of LogService
func (o LogServiceTypeOutput) Spec() LogServiceSpecPtrOutput {
	return o.ApplyT(func(v LogServiceType) *LogServiceSpec { return v.Spec }).(LogServiceSpecPtrOutput)
}

type LogServiceMetadata struct {
}

// LogServiceMetadataInput is an input type that accepts LogServiceMetadataArgs and LogServiceMetadataOutput values.
// You can construct a concrete instance of `LogServiceMetadataInput` via:
//
//          LogServiceMetadataArgs{...}
type LogServiceMetadataInput interface {
	pulumi.Input

	ToLogServiceMetadataOutput() LogServiceMetadataOutput
	ToLogServiceMetadataOutputWithContext(context.Context) LogServiceMetadataOutput
}

type LogServiceMetadataArgs struct {
}

func (LogServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceMetadata)(nil)).Elem()
}

func (i LogServiceMetadataArgs) ToLogServiceMetadataOutput() LogServiceMetadataOutput {
	return i.ToLogServiceMetadataOutputWithContext(context.Background())
}

func (i LogServiceMetadataArgs) ToLogServiceMetadataOutputWithContext(ctx context.Context) LogServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceMetadataOutput)
}

type LogServiceMetadataOutput struct{ *pulumi.OutputState }

func (LogServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceMetadata)(nil)).Elem()
}

func (o LogServiceMetadataOutput) ToLogServiceMetadataOutput() LogServiceMetadataOutput {
	return o
}

func (o LogServiceMetadataOutput) ToLogServiceMetadataOutputWithContext(ctx context.Context) LogServiceMetadataOutput {
	return o
}

// LogServiceSpec defines the desired state of LogService
type LogServiceSpec struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id            interface{}                  `pulumi:"ambassador_id"`
	Driver                   *string                      `pulumi:"driver"`
	Driver_config            *LogServiceSpecDriver_config `pulumi:"driver_config"`
	Flush_interval_byte_size *int                         `pulumi:"flush_interval_byte_size"`
	Flush_interval_time      *int                         `pulumi:"flush_interval_time"`
	Grpc                     *bool                        `pulumi:"grpc"`
	Service                  *string                      `pulumi:"service"`
}

// LogServiceSpecInput is an input type that accepts LogServiceSpecArgs and LogServiceSpecOutput values.
// You can construct a concrete instance of `LogServiceSpecInput` via:
//
//          LogServiceSpecArgs{...}
type LogServiceSpecInput interface {
	pulumi.Input

	ToLogServiceSpecOutput() LogServiceSpecOutput
	ToLogServiceSpecOutputWithContext(context.Context) LogServiceSpecOutput
}

// LogServiceSpec defines the desired state of LogService
type LogServiceSpecArgs struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id            pulumi.Input                        `pulumi:"ambassador_id"`
	Driver                   pulumi.StringPtrInput               `pulumi:"driver"`
	Driver_config            LogServiceSpecDriver_configPtrInput `pulumi:"driver_config"`
	Flush_interval_byte_size pulumi.IntPtrInput                  `pulumi:"flush_interval_byte_size"`
	Flush_interval_time      pulumi.IntPtrInput                  `pulumi:"flush_interval_time"`
	Grpc                     pulumi.BoolPtrInput                 `pulumi:"grpc"`
	Service                  pulumi.StringPtrInput               `pulumi:"service"`
}

func (LogServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceSpec)(nil)).Elem()
}

func (i LogServiceSpecArgs) ToLogServiceSpecOutput() LogServiceSpecOutput {
	return i.ToLogServiceSpecOutputWithContext(context.Background())
}

func (i LogServiceSpecArgs) ToLogServiceSpecOutputWithContext(ctx context.Context) LogServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecOutput)
}

func (i LogServiceSpecArgs) ToLogServiceSpecPtrOutput() LogServiceSpecPtrOutput {
	return i.ToLogServiceSpecPtrOutputWithContext(context.Background())
}

func (i LogServiceSpecArgs) ToLogServiceSpecPtrOutputWithContext(ctx context.Context) LogServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecOutput).ToLogServiceSpecPtrOutputWithContext(ctx)
}

// LogServiceSpecPtrInput is an input type that accepts LogServiceSpecArgs, LogServiceSpecPtr and LogServiceSpecPtrOutput values.
// You can construct a concrete instance of `LogServiceSpecPtrInput` via:
//
//          LogServiceSpecArgs{...}
//
//  or:
//
//          nil
type LogServiceSpecPtrInput interface {
	pulumi.Input

	ToLogServiceSpecPtrOutput() LogServiceSpecPtrOutput
	ToLogServiceSpecPtrOutputWithContext(context.Context) LogServiceSpecPtrOutput
}

type logServiceSpecPtrType LogServiceSpecArgs

func LogServiceSpecPtr(v *LogServiceSpecArgs) LogServiceSpecPtrInput {
	return (*logServiceSpecPtrType)(v)
}

func (*logServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogServiceSpec)(nil)).Elem()
}

func (i *logServiceSpecPtrType) ToLogServiceSpecPtrOutput() LogServiceSpecPtrOutput {
	return i.ToLogServiceSpecPtrOutputWithContext(context.Background())
}

func (i *logServiceSpecPtrType) ToLogServiceSpecPtrOutputWithContext(ctx context.Context) LogServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecPtrOutput)
}

// LogServiceSpec defines the desired state of LogService
type LogServiceSpecOutput struct{ *pulumi.OutputState }

func (LogServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceSpec)(nil)).Elem()
}

func (o LogServiceSpecOutput) ToLogServiceSpecOutput() LogServiceSpecOutput {
	return o
}

func (o LogServiceSpecOutput) ToLogServiceSpecOutputWithContext(ctx context.Context) LogServiceSpecOutput {
	return o
}

func (o LogServiceSpecOutput) ToLogServiceSpecPtrOutput() LogServiceSpecPtrOutput {
	return o.ToLogServiceSpecPtrOutputWithContext(context.Background())
}

func (o LogServiceSpecOutput) ToLogServiceSpecPtrOutputWithContext(ctx context.Context) LogServiceSpecPtrOutput {
	return o.ApplyT(func(v LogServiceSpec) *LogServiceSpec {
		return &v
	}).(LogServiceSpecPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o LogServiceSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v LogServiceSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o LogServiceSpecOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogServiceSpec) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

func (o LogServiceSpecOutput) Driver_config() LogServiceSpecDriver_configPtrOutput {
	return o.ApplyT(func(v LogServiceSpec) *LogServiceSpecDriver_config { return v.Driver_config }).(LogServiceSpecDriver_configPtrOutput)
}

func (o LogServiceSpecOutput) Flush_interval_byte_size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogServiceSpec) *int { return v.Flush_interval_byte_size }).(pulumi.IntPtrOutput)
}

func (o LogServiceSpecOutput) Flush_interval_time() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LogServiceSpec) *int { return v.Flush_interval_time }).(pulumi.IntPtrOutput)
}

func (o LogServiceSpecOutput) Grpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogServiceSpec) *bool { return v.Grpc }).(pulumi.BoolPtrOutput)
}

func (o LogServiceSpecOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogServiceSpec) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type LogServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (LogServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogServiceSpec)(nil)).Elem()
}

func (o LogServiceSpecPtrOutput) ToLogServiceSpecPtrOutput() LogServiceSpecPtrOutput {
	return o
}

func (o LogServiceSpecPtrOutput) ToLogServiceSpecPtrOutputWithContext(ctx context.Context) LogServiceSpecPtrOutput {
	return o
}

func (o LogServiceSpecPtrOutput) Elem() LogServiceSpecOutput {
	return o.ApplyT(func(v *LogServiceSpec) LogServiceSpec { return *v }).(LogServiceSpecOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o LogServiceSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *LogServiceSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o LogServiceSpecPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o LogServiceSpecPtrOutput) Driver_config() LogServiceSpecDriver_configPtrOutput {
	return o.ApplyT(func(v *LogServiceSpec) *LogServiceSpecDriver_config {
		if v == nil {
			return nil
		}
		return v.Driver_config
	}).(LogServiceSpecDriver_configPtrOutput)
}

func (o LogServiceSpecPtrOutput) Flush_interval_byte_size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Flush_interval_byte_size
	}).(pulumi.IntPtrOutput)
}

func (o LogServiceSpecPtrOutput) Flush_interval_time() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LogServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Flush_interval_time
	}).(pulumi.IntPtrOutput)
}

func (o LogServiceSpecPtrOutput) Grpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogServiceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(pulumi.BoolPtrOutput)
}

func (o LogServiceSpecPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

type LogServiceSpecDriver_config struct {
	Additional_log_headers []LogServiceSpecDriver_configAdditional_log_headers `pulumi:"additional_log_headers"`
}

// LogServiceSpecDriver_configInput is an input type that accepts LogServiceSpecDriver_configArgs and LogServiceSpecDriver_configOutput values.
// You can construct a concrete instance of `LogServiceSpecDriver_configInput` via:
//
//          LogServiceSpecDriver_configArgs{...}
type LogServiceSpecDriver_configInput interface {
	pulumi.Input

	ToLogServiceSpecDriver_configOutput() LogServiceSpecDriver_configOutput
	ToLogServiceSpecDriver_configOutputWithContext(context.Context) LogServiceSpecDriver_configOutput
}

type LogServiceSpecDriver_configArgs struct {
	Additional_log_headers LogServiceSpecDriver_configAdditional_log_headersArrayInput `pulumi:"additional_log_headers"`
}

func (LogServiceSpecDriver_configArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceSpecDriver_config)(nil)).Elem()
}

func (i LogServiceSpecDriver_configArgs) ToLogServiceSpecDriver_configOutput() LogServiceSpecDriver_configOutput {
	return i.ToLogServiceSpecDriver_configOutputWithContext(context.Background())
}

func (i LogServiceSpecDriver_configArgs) ToLogServiceSpecDriver_configOutputWithContext(ctx context.Context) LogServiceSpecDriver_configOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecDriver_configOutput)
}

func (i LogServiceSpecDriver_configArgs) ToLogServiceSpecDriver_configPtrOutput() LogServiceSpecDriver_configPtrOutput {
	return i.ToLogServiceSpecDriver_configPtrOutputWithContext(context.Background())
}

func (i LogServiceSpecDriver_configArgs) ToLogServiceSpecDriver_configPtrOutputWithContext(ctx context.Context) LogServiceSpecDriver_configPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecDriver_configOutput).ToLogServiceSpecDriver_configPtrOutputWithContext(ctx)
}

// LogServiceSpecDriver_configPtrInput is an input type that accepts LogServiceSpecDriver_configArgs, LogServiceSpecDriver_configPtr and LogServiceSpecDriver_configPtrOutput values.
// You can construct a concrete instance of `LogServiceSpecDriver_configPtrInput` via:
//
//          LogServiceSpecDriver_configArgs{...}
//
//  or:
//
//          nil
type LogServiceSpecDriver_configPtrInput interface {
	pulumi.Input

	ToLogServiceSpecDriver_configPtrOutput() LogServiceSpecDriver_configPtrOutput
	ToLogServiceSpecDriver_configPtrOutputWithContext(context.Context) LogServiceSpecDriver_configPtrOutput
}

type logServiceSpecDriver_configPtrType LogServiceSpecDriver_configArgs

func LogServiceSpecDriver_configPtr(v *LogServiceSpecDriver_configArgs) LogServiceSpecDriver_configPtrInput {
	return (*logServiceSpecDriver_configPtrType)(v)
}

func (*logServiceSpecDriver_configPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogServiceSpecDriver_config)(nil)).Elem()
}

func (i *logServiceSpecDriver_configPtrType) ToLogServiceSpecDriver_configPtrOutput() LogServiceSpecDriver_configPtrOutput {
	return i.ToLogServiceSpecDriver_configPtrOutputWithContext(context.Background())
}

func (i *logServiceSpecDriver_configPtrType) ToLogServiceSpecDriver_configPtrOutputWithContext(ctx context.Context) LogServiceSpecDriver_configPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecDriver_configPtrOutput)
}

type LogServiceSpecDriver_configOutput struct{ *pulumi.OutputState }

func (LogServiceSpecDriver_configOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceSpecDriver_config)(nil)).Elem()
}

func (o LogServiceSpecDriver_configOutput) ToLogServiceSpecDriver_configOutput() LogServiceSpecDriver_configOutput {
	return o
}

func (o LogServiceSpecDriver_configOutput) ToLogServiceSpecDriver_configOutputWithContext(ctx context.Context) LogServiceSpecDriver_configOutput {
	return o
}

func (o LogServiceSpecDriver_configOutput) ToLogServiceSpecDriver_configPtrOutput() LogServiceSpecDriver_configPtrOutput {
	return o.ToLogServiceSpecDriver_configPtrOutputWithContext(context.Background())
}

func (o LogServiceSpecDriver_configOutput) ToLogServiceSpecDriver_configPtrOutputWithContext(ctx context.Context) LogServiceSpecDriver_configPtrOutput {
	return o.ApplyT(func(v LogServiceSpecDriver_config) *LogServiceSpecDriver_config {
		return &v
	}).(LogServiceSpecDriver_configPtrOutput)
}
func (o LogServiceSpecDriver_configOutput) Additional_log_headers() LogServiceSpecDriver_configAdditional_log_headersArrayOutput {
	return o.ApplyT(func(v LogServiceSpecDriver_config) []LogServiceSpecDriver_configAdditional_log_headers {
		return v.Additional_log_headers
	}).(LogServiceSpecDriver_configAdditional_log_headersArrayOutput)
}

type LogServiceSpecDriver_configPtrOutput struct{ *pulumi.OutputState }

func (LogServiceSpecDriver_configPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogServiceSpecDriver_config)(nil)).Elem()
}

func (o LogServiceSpecDriver_configPtrOutput) ToLogServiceSpecDriver_configPtrOutput() LogServiceSpecDriver_configPtrOutput {
	return o
}

func (o LogServiceSpecDriver_configPtrOutput) ToLogServiceSpecDriver_configPtrOutputWithContext(ctx context.Context) LogServiceSpecDriver_configPtrOutput {
	return o
}

func (o LogServiceSpecDriver_configPtrOutput) Elem() LogServiceSpecDriver_configOutput {
	return o.ApplyT(func(v *LogServiceSpecDriver_config) LogServiceSpecDriver_config { return *v }).(LogServiceSpecDriver_configOutput)
}

func (o LogServiceSpecDriver_configPtrOutput) Additional_log_headers() LogServiceSpecDriver_configAdditional_log_headersArrayOutput {
	return o.ApplyT(func(v *LogServiceSpecDriver_config) []LogServiceSpecDriver_configAdditional_log_headers {
		if v == nil {
			return nil
		}
		return v.Additional_log_headers
	}).(LogServiceSpecDriver_configAdditional_log_headersArrayOutput)
}

type LogServiceSpecDriver_configAdditional_log_headers struct {
	During_request  *bool   `pulumi:"during_request"`
	During_response *bool   `pulumi:"during_response"`
	During_trailer  *bool   `pulumi:"during_trailer"`
	Header_name     *string `pulumi:"header_name"`
}

// LogServiceSpecDriver_configAdditional_log_headersInput is an input type that accepts LogServiceSpecDriver_configAdditional_log_headersArgs and LogServiceSpecDriver_configAdditional_log_headersOutput values.
// You can construct a concrete instance of `LogServiceSpecDriver_configAdditional_log_headersInput` via:
//
//          LogServiceSpecDriver_configAdditional_log_headersArgs{...}
type LogServiceSpecDriver_configAdditional_log_headersInput interface {
	pulumi.Input

	ToLogServiceSpecDriver_configAdditional_log_headersOutput() LogServiceSpecDriver_configAdditional_log_headersOutput
	ToLogServiceSpecDriver_configAdditional_log_headersOutputWithContext(context.Context) LogServiceSpecDriver_configAdditional_log_headersOutput
}

type LogServiceSpecDriver_configAdditional_log_headersArgs struct {
	During_request  pulumi.BoolPtrInput   `pulumi:"during_request"`
	During_response pulumi.BoolPtrInput   `pulumi:"during_response"`
	During_trailer  pulumi.BoolPtrInput   `pulumi:"during_trailer"`
	Header_name     pulumi.StringPtrInput `pulumi:"header_name"`
}

func (LogServiceSpecDriver_configAdditional_log_headersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceSpecDriver_configAdditional_log_headers)(nil)).Elem()
}

func (i LogServiceSpecDriver_configAdditional_log_headersArgs) ToLogServiceSpecDriver_configAdditional_log_headersOutput() LogServiceSpecDriver_configAdditional_log_headersOutput {
	return i.ToLogServiceSpecDriver_configAdditional_log_headersOutputWithContext(context.Background())
}

func (i LogServiceSpecDriver_configAdditional_log_headersArgs) ToLogServiceSpecDriver_configAdditional_log_headersOutputWithContext(ctx context.Context) LogServiceSpecDriver_configAdditional_log_headersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecDriver_configAdditional_log_headersOutput)
}

// LogServiceSpecDriver_configAdditional_log_headersArrayInput is an input type that accepts LogServiceSpecDriver_configAdditional_log_headersArray and LogServiceSpecDriver_configAdditional_log_headersArrayOutput values.
// You can construct a concrete instance of `LogServiceSpecDriver_configAdditional_log_headersArrayInput` via:
//
//          LogServiceSpecDriver_configAdditional_log_headersArray{ LogServiceSpecDriver_configAdditional_log_headersArgs{...} }
type LogServiceSpecDriver_configAdditional_log_headersArrayInput interface {
	pulumi.Input

	ToLogServiceSpecDriver_configAdditional_log_headersArrayOutput() LogServiceSpecDriver_configAdditional_log_headersArrayOutput
	ToLogServiceSpecDriver_configAdditional_log_headersArrayOutputWithContext(context.Context) LogServiceSpecDriver_configAdditional_log_headersArrayOutput
}

type LogServiceSpecDriver_configAdditional_log_headersArray []LogServiceSpecDriver_configAdditional_log_headersInput

func (LogServiceSpecDriver_configAdditional_log_headersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogServiceSpecDriver_configAdditional_log_headers)(nil)).Elem()
}

func (i LogServiceSpecDriver_configAdditional_log_headersArray) ToLogServiceSpecDriver_configAdditional_log_headersArrayOutput() LogServiceSpecDriver_configAdditional_log_headersArrayOutput {
	return i.ToLogServiceSpecDriver_configAdditional_log_headersArrayOutputWithContext(context.Background())
}

func (i LogServiceSpecDriver_configAdditional_log_headersArray) ToLogServiceSpecDriver_configAdditional_log_headersArrayOutputWithContext(ctx context.Context) LogServiceSpecDriver_configAdditional_log_headersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogServiceSpecDriver_configAdditional_log_headersArrayOutput)
}

type LogServiceSpecDriver_configAdditional_log_headersOutput struct{ *pulumi.OutputState }

func (LogServiceSpecDriver_configAdditional_log_headersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogServiceSpecDriver_configAdditional_log_headers)(nil)).Elem()
}

func (o LogServiceSpecDriver_configAdditional_log_headersOutput) ToLogServiceSpecDriver_configAdditional_log_headersOutput() LogServiceSpecDriver_configAdditional_log_headersOutput {
	return o
}

func (o LogServiceSpecDriver_configAdditional_log_headersOutput) ToLogServiceSpecDriver_configAdditional_log_headersOutputWithContext(ctx context.Context) LogServiceSpecDriver_configAdditional_log_headersOutput {
	return o
}

func (o LogServiceSpecDriver_configAdditional_log_headersOutput) During_request() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogServiceSpecDriver_configAdditional_log_headers) *bool { return v.During_request }).(pulumi.BoolPtrOutput)
}

func (o LogServiceSpecDriver_configAdditional_log_headersOutput) During_response() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogServiceSpecDriver_configAdditional_log_headers) *bool { return v.During_response }).(pulumi.BoolPtrOutput)
}

func (o LogServiceSpecDriver_configAdditional_log_headersOutput) During_trailer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogServiceSpecDriver_configAdditional_log_headers) *bool { return v.During_trailer }).(pulumi.BoolPtrOutput)
}

func (o LogServiceSpecDriver_configAdditional_log_headersOutput) Header_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogServiceSpecDriver_configAdditional_log_headers) *string { return v.Header_name }).(pulumi.StringPtrOutput)
}

type LogServiceSpecDriver_configAdditional_log_headersArrayOutput struct{ *pulumi.OutputState }

func (LogServiceSpecDriver_configAdditional_log_headersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LogServiceSpecDriver_configAdditional_log_headers)(nil)).Elem()
}

func (o LogServiceSpecDriver_configAdditional_log_headersArrayOutput) ToLogServiceSpecDriver_configAdditional_log_headersArrayOutput() LogServiceSpecDriver_configAdditional_log_headersArrayOutput {
	return o
}

func (o LogServiceSpecDriver_configAdditional_log_headersArrayOutput) ToLogServiceSpecDriver_configAdditional_log_headersArrayOutputWithContext(ctx context.Context) LogServiceSpecDriver_configAdditional_log_headersArrayOutput {
	return o
}

func (o LogServiceSpecDriver_configAdditional_log_headersArrayOutput) Index(i pulumi.IntInput) LogServiceSpecDriver_configAdditional_log_headersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LogServiceSpecDriver_configAdditional_log_headers {
		return vs[0].([]LogServiceSpecDriver_configAdditional_log_headers)[vs[1].(int)]
	}).(LogServiceSpecDriver_configAdditional_log_headersOutput)
}

// Mapping is the Schema for the mappings API
type MappingType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// MappingSpec defines the desired state of Mapping
	Spec *MappingSpec `pulumi:"spec"`
	// MappingStatus defines the observed state of Mapping
	Status *MappingStatus `pulumi:"status"`
}

// MappingTypeInput is an input type that accepts MappingTypeArgs and MappingTypeOutput values.
// You can construct a concrete instance of `MappingTypeInput` via:
//
//          MappingTypeArgs{...}
type MappingTypeInput interface {
	pulumi.Input

	ToMappingTypeOutput() MappingTypeOutput
	ToMappingTypeOutputWithContext(context.Context) MappingTypeOutput
}

// Mapping is the Schema for the mappings API
type MappingTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// MappingSpec defines the desired state of Mapping
	Spec MappingSpecPtrInput `pulumi:"spec"`
	// MappingStatus defines the observed state of Mapping
	Status MappingStatusPtrInput `pulumi:"status"`
}

func (MappingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingType)(nil)).Elem()
}

func (i MappingTypeArgs) ToMappingTypeOutput() MappingTypeOutput {
	return i.ToMappingTypeOutputWithContext(context.Background())
}

func (i MappingTypeArgs) ToMappingTypeOutputWithContext(ctx context.Context) MappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingTypeOutput)
}

// Mapping is the Schema for the mappings API
type MappingTypeOutput struct{ *pulumi.OutputState }

func (MappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingType)(nil)).Elem()
}

func (o MappingTypeOutput) ToMappingTypeOutput() MappingTypeOutput {
	return o
}

func (o MappingTypeOutput) ToMappingTypeOutputWithContext(ctx context.Context) MappingTypeOutput {
	return o
}

func (o MappingTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o MappingTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o MappingTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v MappingType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// MappingSpec defines the desired state of Mapping
func (o MappingTypeOutput) Spec() MappingSpecPtrOutput {
	return o.ApplyT(func(v MappingType) *MappingSpec { return v.Spec }).(MappingSpecPtrOutput)
}

// MappingStatus defines the observed state of Mapping
func (o MappingTypeOutput) Status() MappingStatusPtrOutput {
	return o.ApplyT(func(v MappingType) *MappingStatus { return v.Status }).(MappingStatusPtrOutput)
}

type MappingMetadata struct {
}

// MappingMetadataInput is an input type that accepts MappingMetadataArgs and MappingMetadataOutput values.
// You can construct a concrete instance of `MappingMetadataInput` via:
//
//          MappingMetadataArgs{...}
type MappingMetadataInput interface {
	pulumi.Input

	ToMappingMetadataOutput() MappingMetadataOutput
	ToMappingMetadataOutputWithContext(context.Context) MappingMetadataOutput
}

type MappingMetadataArgs struct {
}

func (MappingMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingMetadata)(nil)).Elem()
}

func (i MappingMetadataArgs) ToMappingMetadataOutput() MappingMetadataOutput {
	return i.ToMappingMetadataOutputWithContext(context.Background())
}

func (i MappingMetadataArgs) ToMappingMetadataOutputWithContext(ctx context.Context) MappingMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingMetadataOutput)
}

type MappingMetadataOutput struct{ *pulumi.OutputState }

func (MappingMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingMetadata)(nil)).Elem()
}

func (o MappingMetadataOutput) ToMappingMetadataOutput() MappingMetadataOutput {
	return o
}

func (o MappingMetadataOutput) ToMappingMetadataOutputWithContext(ctx context.Context) MappingMetadataOutput {
	return o
}

// MappingSpec defines the desired state of Mapping
type MappingSpec struct {
	Add_linkerd_headers  *bool                  `pulumi:"add_linkerd_headers"`
	Add_request_headers  map[string]interface{} `pulumi:"add_request_headers"`
	Add_response_headers map[string]interface{} `pulumi:"add_response_headers"`
	// A case-insensitive list of the non-HTTP protocols to allow "upgrading" to from HTTP via the "Connection: upgrade" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings.
	//  [1]: https://tools.ietf.org/html/rfc7230#section-6.7
	//  For example, if your upstream service supports WebSockets, you would write
	//     allow_upgrade:    - websocket
	//  Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write
	//     allow_upgrade:    - spdy/3.1
	Allow_upgrade []string `pulumi:"allow_upgrade"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id           interface{}       `pulumi:"ambassador_id"`
	Auth_context_extensions map[string]string `pulumi:"auth_context_extensions"`
	Auto_host_rewrite       *bool             `pulumi:"auto_host_rewrite"`
	Bypass_auth             *bool             `pulumi:"bypass_auth"`
	// If true, bypasses any `error_response_overrides` set on the Ambassador module.
	Bypass_error_response_overrides    *bool                         `pulumi:"bypass_error_response_overrides"`
	Case_sensitive                     *bool                         `pulumi:"case_sensitive"`
	Circuit_breakers                   []MappingSpecCircuit_breakers `pulumi:"circuit_breakers"`
	Cluster_idle_timeout_ms            *int                          `pulumi:"cluster_idle_timeout_ms"`
	Cluster_max_connection_lifetime_ms *int                          `pulumi:"cluster_max_connection_lifetime_ms"`
	Cluster_tag                        *string                       `pulumi:"cluster_tag"`
	Connect_timeout_ms                 *int                          `pulumi:"connect_timeout_ms"`
	Cors                               *MappingSpecCors              `pulumi:"cors"`
	// DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)
	Docs        *MappingSpecDocs `pulumi:"docs"`
	Enable_ipv4 *bool            `pulumi:"enable_ipv4"`
	Enable_ipv6 *bool            `pulumi:"enable_ipv6"`
	// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
	Envoy_override map[string]interface{} `pulumi:"envoy_override"`
	// Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.
	Error_response_overrides []MappingSpecError_response_overrides `pulumi:"error_response_overrides"`
	Grpc                     *bool                                 `pulumi:"grpc"`
	Headers                  map[string]interface{}                `pulumi:"headers"`
	Host                     *string                               `pulumi:"host"`
	Host_redirect            *bool                                 `pulumi:"host_redirect"`
	Host_regex               *bool                                 `pulumi:"host_regex"`
	Host_rewrite             *string                               `pulumi:"host_rewrite"`
	Idle_timeout_ms          *int                                  `pulumi:"idle_timeout_ms"`
	Keepalive                *MappingSpecKeepalive                 `pulumi:"keepalive"`
	// A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.
	Labels            map[string][]map[string][]interface{} `pulumi:"labels"`
	Load_balancer     *MappingSpecLoad_balancer             `pulumi:"load_balancer"`
	Method            *string                               `pulumi:"method"`
	Method_regex      *bool                                 `pulumi:"method_regex"`
	Modules           []map[string]interface{}              `pulumi:"modules"`
	Outlier_detection *string                               `pulumi:"outlier_detection"`
	// Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.
	Path_redirect *string `pulumi:"path_redirect"`
	Precedence    *int    `pulumi:"precedence"`
	Prefix        string  `pulumi:"prefix"`
	Prefix_exact  *bool   `pulumi:"prefix_exact"`
	// Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
	Prefix_redirect  *string                `pulumi:"prefix_redirect"`
	Prefix_regex     *bool                  `pulumi:"prefix_regex"`
	Priority         *string                `pulumi:"priority"`
	Query_parameters map[string]interface{} `pulumi:"query_parameters"`
	// The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.
	Redirect_response_code *int                   `pulumi:"redirect_response_code"`
	Regex_headers          map[string]interface{} `pulumi:"regex_headers"`
	Regex_query_parameters map[string]interface{} `pulumi:"regex_query_parameters"`
	// Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
	Regex_redirect map[string]interface{} `pulumi:"regex_redirect"`
	Regex_rewrite  map[string]interface{} `pulumi:"regex_rewrite"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Remove_request_headers interface{} `pulumi:"remove_request_headers"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Remove_response_headers interface{}              `pulumi:"remove_response_headers"`
	Resolver                *string                  `pulumi:"resolver"`
	Retry_policy            *MappingSpecRetry_policy `pulumi:"retry_policy"`
	Rewrite                 *string                  `pulumi:"rewrite"`
	Service                 string                   `pulumi:"service"`
	Shadow                  *bool                    `pulumi:"shadow"`
	// The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.
	Timeout_ms *int `pulumi:"timeout_ms"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls interface{} `pulumi:"tls"`
	// use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: ["websocket"]`
	Use_websocket *bool `pulumi:"use_websocket"`
	Weight        *int  `pulumi:"weight"`
}

// MappingSpecInput is an input type that accepts MappingSpecArgs and MappingSpecOutput values.
// You can construct a concrete instance of `MappingSpecInput` via:
//
//          MappingSpecArgs{...}
type MappingSpecInput interface {
	pulumi.Input

	ToMappingSpecOutput() MappingSpecOutput
	ToMappingSpecOutputWithContext(context.Context) MappingSpecOutput
}

// MappingSpec defines the desired state of Mapping
type MappingSpecArgs struct {
	Add_linkerd_headers  pulumi.BoolPtrInput `pulumi:"add_linkerd_headers"`
	Add_request_headers  pulumi.MapInput     `pulumi:"add_request_headers"`
	Add_response_headers pulumi.MapInput     `pulumi:"add_response_headers"`
	// A case-insensitive list of the non-HTTP protocols to allow "upgrading" to from HTTP via the "Connection: upgrade" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings.
	//  [1]: https://tools.ietf.org/html/rfc7230#section-6.7
	//  For example, if your upstream service supports WebSockets, you would write
	//     allow_upgrade:    - websocket
	//  Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write
	//     allow_upgrade:    - spdy/3.1
	Allow_upgrade pulumi.StringArrayInput `pulumi:"allow_upgrade"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id           pulumi.Input          `pulumi:"ambassador_id"`
	Auth_context_extensions pulumi.StringMapInput `pulumi:"auth_context_extensions"`
	Auto_host_rewrite       pulumi.BoolPtrInput   `pulumi:"auto_host_rewrite"`
	Bypass_auth             pulumi.BoolPtrInput   `pulumi:"bypass_auth"`
	// If true, bypasses any `error_response_overrides` set on the Ambassador module.
	Bypass_error_response_overrides    pulumi.BoolPtrInput                   `pulumi:"bypass_error_response_overrides"`
	Case_sensitive                     pulumi.BoolPtrInput                   `pulumi:"case_sensitive"`
	Circuit_breakers                   MappingSpecCircuit_breakersArrayInput `pulumi:"circuit_breakers"`
	Cluster_idle_timeout_ms            pulumi.IntPtrInput                    `pulumi:"cluster_idle_timeout_ms"`
	Cluster_max_connection_lifetime_ms pulumi.IntPtrInput                    `pulumi:"cluster_max_connection_lifetime_ms"`
	Cluster_tag                        pulumi.StringPtrInput                 `pulumi:"cluster_tag"`
	Connect_timeout_ms                 pulumi.IntPtrInput                    `pulumi:"connect_timeout_ms"`
	Cors                               MappingSpecCorsPtrInput               `pulumi:"cors"`
	// DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)
	Docs        MappingSpecDocsPtrInput `pulumi:"docs"`
	Enable_ipv4 pulumi.BoolPtrInput     `pulumi:"enable_ipv4"`
	Enable_ipv6 pulumi.BoolPtrInput     `pulumi:"enable_ipv6"`
	// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
	Envoy_override pulumi.MapInput `pulumi:"envoy_override"`
	// Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.
	Error_response_overrides MappingSpecError_response_overridesArrayInput `pulumi:"error_response_overrides"`
	Grpc                     pulumi.BoolPtrInput                           `pulumi:"grpc"`
	Headers                  pulumi.MapInput                               `pulumi:"headers"`
	Host                     pulumi.StringPtrInput                         `pulumi:"host"`
	Host_redirect            pulumi.BoolPtrInput                           `pulumi:"host_redirect"`
	Host_regex               pulumi.BoolPtrInput                           `pulumi:"host_regex"`
	Host_rewrite             pulumi.StringPtrInput                         `pulumi:"host_rewrite"`
	Idle_timeout_ms          pulumi.IntPtrInput                            `pulumi:"idle_timeout_ms"`
	Keepalive                MappingSpecKeepalivePtrInput                  `pulumi:"keepalive"`
	// A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.
	Labels            pulumi.ArrayMapArrayMapInput     `pulumi:"labels"`
	Load_balancer     MappingSpecLoad_balancerPtrInput `pulumi:"load_balancer"`
	Method            pulumi.StringPtrInput            `pulumi:"method"`
	Method_regex      pulumi.BoolPtrInput              `pulumi:"method_regex"`
	Modules           pulumi.MapArrayInput             `pulumi:"modules"`
	Outlier_detection pulumi.StringPtrInput            `pulumi:"outlier_detection"`
	// Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.
	Path_redirect pulumi.StringPtrInput `pulumi:"path_redirect"`
	Precedence    pulumi.IntPtrInput    `pulumi:"precedence"`
	Prefix        pulumi.StringInput    `pulumi:"prefix"`
	Prefix_exact  pulumi.BoolPtrInput   `pulumi:"prefix_exact"`
	// Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
	Prefix_redirect  pulumi.StringPtrInput `pulumi:"prefix_redirect"`
	Prefix_regex     pulumi.BoolPtrInput   `pulumi:"prefix_regex"`
	Priority         pulumi.StringPtrInput `pulumi:"priority"`
	Query_parameters pulumi.MapInput       `pulumi:"query_parameters"`
	// The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.
	Redirect_response_code pulumi.IntPtrInput `pulumi:"redirect_response_code"`
	Regex_headers          pulumi.MapInput    `pulumi:"regex_headers"`
	Regex_query_parameters pulumi.MapInput    `pulumi:"regex_query_parameters"`
	// Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
	Regex_redirect pulumi.MapInput `pulumi:"regex_redirect"`
	Regex_rewrite  pulumi.MapInput `pulumi:"regex_rewrite"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Remove_request_headers pulumi.Input `pulumi:"remove_request_headers"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Remove_response_headers pulumi.Input                    `pulumi:"remove_response_headers"`
	Resolver                pulumi.StringPtrInput           `pulumi:"resolver"`
	Retry_policy            MappingSpecRetry_policyPtrInput `pulumi:"retry_policy"`
	Rewrite                 pulumi.StringPtrInput           `pulumi:"rewrite"`
	Service                 pulumi.StringInput              `pulumi:"service"`
	Shadow                  pulumi.BoolPtrInput             `pulumi:"shadow"`
	// The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.
	Timeout_ms pulumi.IntPtrInput `pulumi:"timeout_ms"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls pulumi.Input `pulumi:"tls"`
	// use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: ["websocket"]`
	Use_websocket pulumi.BoolPtrInput `pulumi:"use_websocket"`
	Weight        pulumi.IntPtrInput  `pulumi:"weight"`
}

func (MappingSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpec)(nil)).Elem()
}

func (i MappingSpecArgs) ToMappingSpecOutput() MappingSpecOutput {
	return i.ToMappingSpecOutputWithContext(context.Background())
}

func (i MappingSpecArgs) ToMappingSpecOutputWithContext(ctx context.Context) MappingSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecOutput)
}

func (i MappingSpecArgs) ToMappingSpecPtrOutput() MappingSpecPtrOutput {
	return i.ToMappingSpecPtrOutputWithContext(context.Background())
}

func (i MappingSpecArgs) ToMappingSpecPtrOutputWithContext(ctx context.Context) MappingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecOutput).ToMappingSpecPtrOutputWithContext(ctx)
}

// MappingSpecPtrInput is an input type that accepts MappingSpecArgs, MappingSpecPtr and MappingSpecPtrOutput values.
// You can construct a concrete instance of `MappingSpecPtrInput` via:
//
//          MappingSpecArgs{...}
//
//  or:
//
//          nil
type MappingSpecPtrInput interface {
	pulumi.Input

	ToMappingSpecPtrOutput() MappingSpecPtrOutput
	ToMappingSpecPtrOutputWithContext(context.Context) MappingSpecPtrOutput
}

type mappingSpecPtrType MappingSpecArgs

func MappingSpecPtr(v *MappingSpecArgs) MappingSpecPtrInput {
	return (*mappingSpecPtrType)(v)
}

func (*mappingSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpec)(nil)).Elem()
}

func (i *mappingSpecPtrType) ToMappingSpecPtrOutput() MappingSpecPtrOutput {
	return i.ToMappingSpecPtrOutputWithContext(context.Background())
}

func (i *mappingSpecPtrType) ToMappingSpecPtrOutputWithContext(ctx context.Context) MappingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecPtrOutput)
}

// MappingSpec defines the desired state of Mapping
type MappingSpecOutput struct{ *pulumi.OutputState }

func (MappingSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpec)(nil)).Elem()
}

func (o MappingSpecOutput) ToMappingSpecOutput() MappingSpecOutput {
	return o
}

func (o MappingSpecOutput) ToMappingSpecOutputWithContext(ctx context.Context) MappingSpecOutput {
	return o
}

func (o MappingSpecOutput) ToMappingSpecPtrOutput() MappingSpecPtrOutput {
	return o.ToMappingSpecPtrOutputWithContext(context.Background())
}

func (o MappingSpecOutput) ToMappingSpecPtrOutputWithContext(ctx context.Context) MappingSpecPtrOutput {
	return o.ApplyT(func(v MappingSpec) *MappingSpec {
		return &v
	}).(MappingSpecPtrOutput)
}
func (o MappingSpecOutput) Add_linkerd_headers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Add_linkerd_headers }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Add_request_headers() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Add_request_headers }).(pulumi.MapOutput)
}

func (o MappingSpecOutput) Add_response_headers() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Add_response_headers }).(pulumi.MapOutput)
}

// A case-insensitive list of the non-HTTP protocols to allow "upgrading" to from HTTP via the "Connection: upgrade" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings.
//  [1]: https://tools.ietf.org/html/rfc7230#section-6.7
//  For example, if your upstream service supports WebSockets, you would write
//     allow_upgrade:    - websocket
//  Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write
//     allow_upgrade:    - spdy/3.1
func (o MappingSpecOutput) Allow_upgrade() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MappingSpec) []string { return v.Allow_upgrade }).(pulumi.StringArrayOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o MappingSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o MappingSpecOutput) Auth_context_extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]string { return v.Auth_context_extensions }).(pulumi.StringMapOutput)
}

func (o MappingSpecOutput) Auto_host_rewrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Auto_host_rewrite }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Bypass_auth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Bypass_auth }).(pulumi.BoolPtrOutput)
}

// If true, bypasses any `error_response_overrides` set on the Ambassador module.
func (o MappingSpecOutput) Bypass_error_response_overrides() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Bypass_error_response_overrides }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Case_sensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Case_sensitive }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Circuit_breakers() MappingSpecCircuit_breakersArrayOutput {
	return o.ApplyT(func(v MappingSpec) []MappingSpecCircuit_breakers { return v.Circuit_breakers }).(MappingSpecCircuit_breakersArrayOutput)
}

func (o MappingSpecOutput) Cluster_idle_timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Cluster_idle_timeout_ms }).(pulumi.IntPtrOutput)
}

func (o MappingSpecOutput) Cluster_max_connection_lifetime_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Cluster_max_connection_lifetime_ms }).(pulumi.IntPtrOutput)
}

func (o MappingSpecOutput) Cluster_tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Cluster_tag }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Connect_timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Connect_timeout_ms }).(pulumi.IntPtrOutput)
}

func (o MappingSpecOutput) Cors() MappingSpecCorsPtrOutput {
	return o.ApplyT(func(v MappingSpec) *MappingSpecCors { return v.Cors }).(MappingSpecCorsPtrOutput)
}

// DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)
func (o MappingSpecOutput) Docs() MappingSpecDocsPtrOutput {
	return o.ApplyT(func(v MappingSpec) *MappingSpecDocs { return v.Docs }).(MappingSpecDocsPtrOutput)
}

func (o MappingSpecOutput) Enable_ipv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Enable_ipv4 }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Enable_ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Enable_ipv6 }).(pulumi.BoolPtrOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
func (o MappingSpecOutput) Envoy_override() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Envoy_override }).(pulumi.MapOutput)
}

// Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.
func (o MappingSpecOutput) Error_response_overrides() MappingSpecError_response_overridesArrayOutput {
	return o.ApplyT(func(v MappingSpec) []MappingSpecError_response_overrides { return v.Error_response_overrides }).(MappingSpecError_response_overridesArrayOutput)
}

func (o MappingSpecOutput) Grpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Grpc }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Headers() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Headers }).(pulumi.MapOutput)
}

func (o MappingSpecOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Host_redirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Host_redirect }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Host_regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Host_regex }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Host_rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Host_rewrite }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Idle_timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Idle_timeout_ms }).(pulumi.IntPtrOutput)
}

func (o MappingSpecOutput) Keepalive() MappingSpecKeepalivePtrOutput {
	return o.ApplyT(func(v MappingSpec) *MappingSpecKeepalive { return v.Keepalive }).(MappingSpecKeepalivePtrOutput)
}

// A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.
func (o MappingSpecOutput) Labels() pulumi.ArrayMapArrayMapOutput {
	return o.ApplyT(func(v MappingSpec) map[string][]map[string][]interface{} { return v.Labels }).(pulumi.ArrayMapArrayMapOutput)
}

func (o MappingSpecOutput) Load_balancer() MappingSpecLoad_balancerPtrOutput {
	return o.ApplyT(func(v MappingSpec) *MappingSpecLoad_balancer { return v.Load_balancer }).(MappingSpecLoad_balancerPtrOutput)
}

func (o MappingSpecOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Method_regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Method_regex }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Modules() pulumi.MapArrayOutput {
	return o.ApplyT(func(v MappingSpec) []map[string]interface{} { return v.Modules }).(pulumi.MapArrayOutput)
}

func (o MappingSpecOutput) Outlier_detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Outlier_detection }).(pulumi.StringPtrOutput)
}

// Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.
func (o MappingSpecOutput) Path_redirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Path_redirect }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Precedence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Precedence }).(pulumi.IntPtrOutput)
}

func (o MappingSpecOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v MappingSpec) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o MappingSpecOutput) Prefix_exact() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Prefix_exact }).(pulumi.BoolPtrOutput)
}

// Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
func (o MappingSpecOutput) Prefix_redirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Prefix_redirect }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Prefix_regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Prefix_regex }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Query_parameters() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Query_parameters }).(pulumi.MapOutput)
}

// The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.
func (o MappingSpecOutput) Redirect_response_code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Redirect_response_code }).(pulumi.IntPtrOutput)
}

func (o MappingSpecOutput) Regex_headers() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Regex_headers }).(pulumi.MapOutput)
}

func (o MappingSpecOutput) Regex_query_parameters() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Regex_query_parameters }).(pulumi.MapOutput)
}

// Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
func (o MappingSpecOutput) Regex_redirect() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Regex_redirect }).(pulumi.MapOutput)
}

func (o MappingSpecOutput) Regex_rewrite() pulumi.MapOutput {
	return o.ApplyT(func(v MappingSpec) map[string]interface{} { return v.Regex_rewrite }).(pulumi.MapOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecOutput) Remove_request_headers() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpec) interface{} { return v.Remove_request_headers }).(pulumi.AnyOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecOutput) Remove_response_headers() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpec) interface{} { return v.Remove_response_headers }).(pulumi.AnyOutput)
}

func (o MappingSpecOutput) Resolver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Resolver }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Retry_policy() MappingSpecRetry_policyPtrOutput {
	return o.ApplyT(func(v MappingSpec) *MappingSpecRetry_policy { return v.Retry_policy }).(MappingSpecRetry_policyPtrOutput)
}

func (o MappingSpecOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpec) *string { return v.Rewrite }).(pulumi.StringPtrOutput)
}

func (o MappingSpecOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v MappingSpec) string { return v.Service }).(pulumi.StringOutput)
}

func (o MappingSpecOutput) Shadow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Shadow }).(pulumi.BoolPtrOutput)
}

// The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.
func (o MappingSpecOutput) Timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Timeout_ms }).(pulumi.IntPtrOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o MappingSpecOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpec) interface{} { return v.Tls }).(pulumi.AnyOutput)
}

// use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: ["websocket"]`
func (o MappingSpecOutput) Use_websocket() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpec) *bool { return v.Use_websocket }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpec) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type MappingSpecPtrOutput struct{ *pulumi.OutputState }

func (MappingSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpec)(nil)).Elem()
}

func (o MappingSpecPtrOutput) ToMappingSpecPtrOutput() MappingSpecPtrOutput {
	return o
}

func (o MappingSpecPtrOutput) ToMappingSpecPtrOutputWithContext(ctx context.Context) MappingSpecPtrOutput {
	return o
}

func (o MappingSpecPtrOutput) Elem() MappingSpecOutput {
	return o.ApplyT(func(v *MappingSpec) MappingSpec { return *v }).(MappingSpecOutput)
}

func (o MappingSpecPtrOutput) Add_linkerd_headers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Add_linkerd_headers
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Add_request_headers() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Add_request_headers
	}).(pulumi.MapOutput)
}

func (o MappingSpecPtrOutput) Add_response_headers() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Add_response_headers
	}).(pulumi.MapOutput)
}

// A case-insensitive list of the non-HTTP protocols to allow "upgrading" to from HTTP via the "Connection: upgrade" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings.
//  [1]: https://tools.ietf.org/html/rfc7230#section-6.7
//  For example, if your upstream service supports WebSockets, you would write
//     allow_upgrade:    - websocket
//  Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write
//     allow_upgrade:    - spdy/3.1
func (o MappingSpecPtrOutput) Allow_upgrade() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MappingSpec) []string {
		if v == nil {
			return nil
		}
		return v.Allow_upgrade
	}).(pulumi.StringArrayOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o MappingSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o MappingSpecPtrOutput) Auth_context_extensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]string {
		if v == nil {
			return nil
		}
		return v.Auth_context_extensions
	}).(pulumi.StringMapOutput)
}

func (o MappingSpecPtrOutput) Auto_host_rewrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Auto_host_rewrite
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Bypass_auth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Bypass_auth
	}).(pulumi.BoolPtrOutput)
}

// If true, bypasses any `error_response_overrides` set on the Ambassador module.
func (o MappingSpecPtrOutput) Bypass_error_response_overrides() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Bypass_error_response_overrides
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Case_sensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Case_sensitive
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Circuit_breakers() MappingSpecCircuit_breakersArrayOutput {
	return o.ApplyT(func(v *MappingSpec) []MappingSpecCircuit_breakers {
		if v == nil {
			return nil
		}
		return v.Circuit_breakers
	}).(MappingSpecCircuit_breakersArrayOutput)
}

func (o MappingSpecPtrOutput) Cluster_idle_timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cluster_idle_timeout_ms
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecPtrOutput) Cluster_max_connection_lifetime_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cluster_max_connection_lifetime_ms
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecPtrOutput) Cluster_tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Cluster_tag
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Connect_timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Connect_timeout_ms
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecPtrOutput) Cors() MappingSpecCorsPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *MappingSpecCors {
		if v == nil {
			return nil
		}
		return v.Cors
	}).(MappingSpecCorsPtrOutput)
}

// DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)
func (o MappingSpecPtrOutput) Docs() MappingSpecDocsPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *MappingSpecDocs {
		if v == nil {
			return nil
		}
		return v.Docs
	}).(MappingSpecDocsPtrOutput)
}

func (o MappingSpecPtrOutput) Enable_ipv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Enable_ipv4
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Enable_ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Enable_ipv6
	}).(pulumi.BoolPtrOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
func (o MappingSpecPtrOutput) Envoy_override() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Envoy_override
	}).(pulumi.MapOutput)
}

// Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.
func (o MappingSpecPtrOutput) Error_response_overrides() MappingSpecError_response_overridesArrayOutput {
	return o.ApplyT(func(v *MappingSpec) []MappingSpecError_response_overrides {
		if v == nil {
			return nil
		}
		return v.Error_response_overrides
	}).(MappingSpecError_response_overridesArrayOutput)
}

func (o MappingSpecPtrOutput) Grpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Headers() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.MapOutput)
}

func (o MappingSpecPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Host_redirect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Host_redirect
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Host_regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Host_regex
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Host_rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Host_rewrite
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Idle_timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Idle_timeout_ms
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecPtrOutput) Keepalive() MappingSpecKeepalivePtrOutput {
	return o.ApplyT(func(v *MappingSpec) *MappingSpecKeepalive {
		if v == nil {
			return nil
		}
		return v.Keepalive
	}).(MappingSpecKeepalivePtrOutput)
}

// A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.
func (o MappingSpecPtrOutput) Labels() pulumi.ArrayMapArrayMapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string][]map[string][]interface{} {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.ArrayMapArrayMapOutput)
}

func (o MappingSpecPtrOutput) Load_balancer() MappingSpecLoad_balancerPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *MappingSpecLoad_balancer {
		if v == nil {
			return nil
		}
		return v.Load_balancer
	}).(MappingSpecLoad_balancerPtrOutput)
}

func (o MappingSpecPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Method_regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Method_regex
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Modules() pulumi.MapArrayOutput {
	return o.ApplyT(func(v *MappingSpec) []map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Modules
	}).(pulumi.MapArrayOutput)
}

func (o MappingSpecPtrOutput) Outlier_detection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Outlier_detection
	}).(pulumi.StringPtrOutput)
}

// Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.
func (o MappingSpecPtrOutput) Path_redirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Path_redirect
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Precedence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Precedence
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Prefix_exact() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Prefix_exact
	}).(pulumi.BoolPtrOutput)
}

// Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
func (o MappingSpecPtrOutput) Prefix_redirect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Prefix_redirect
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Prefix_regex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Prefix_regex
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Query_parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Query_parameters
	}).(pulumi.MapOutput)
}

// The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.
func (o MappingSpecPtrOutput) Redirect_response_code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Redirect_response_code
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecPtrOutput) Regex_headers() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Regex_headers
	}).(pulumi.MapOutput)
}

func (o MappingSpecPtrOutput) Regex_query_parameters() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Regex_query_parameters
	}).(pulumi.MapOutput)
}

// Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
func (o MappingSpecPtrOutput) Regex_redirect() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Regex_redirect
	}).(pulumi.MapOutput)
}

func (o MappingSpecPtrOutput) Regex_rewrite() pulumi.MapOutput {
	return o.ApplyT(func(v *MappingSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Regex_rewrite
	}).(pulumi.MapOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecPtrOutput) Remove_request_headers() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Remove_request_headers
	}).(pulumi.AnyOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecPtrOutput) Remove_response_headers() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Remove_response_headers
	}).(pulumi.AnyOutput)
}

func (o MappingSpecPtrOutput) Resolver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Resolver
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Retry_policy() MappingSpecRetry_policyPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *MappingSpecRetry_policy {
		if v == nil {
			return nil
		}
		return v.Retry_policy
	}).(MappingSpecRetry_policyPtrOutput)
}

func (o MappingSpecPtrOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecPtrOutput) Shadow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Shadow
	}).(pulumi.BoolPtrOutput)
}

// The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.
func (o MappingSpecPtrOutput) Timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Timeout_ms
	}).(pulumi.IntPtrOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o MappingSpecPtrOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(pulumi.AnyOutput)
}

// use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: ["websocket"]`
func (o MappingSpecPtrOutput) Use_websocket() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Use_websocket
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type MappingSpecAdd_request_headers struct {
}

// MappingSpecAdd_request_headersInput is an input type that accepts MappingSpecAdd_request_headersArgs and MappingSpecAdd_request_headersOutput values.
// You can construct a concrete instance of `MappingSpecAdd_request_headersInput` via:
//
//          MappingSpecAdd_request_headersArgs{...}
type MappingSpecAdd_request_headersInput interface {
	pulumi.Input

	ToMappingSpecAdd_request_headersOutput() MappingSpecAdd_request_headersOutput
	ToMappingSpecAdd_request_headersOutputWithContext(context.Context) MappingSpecAdd_request_headersOutput
}

type MappingSpecAdd_request_headersArgs struct {
}

func (MappingSpecAdd_request_headersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_request_headers)(nil)).Elem()
}

func (i MappingSpecAdd_request_headersArgs) ToMappingSpecAdd_request_headersOutput() MappingSpecAdd_request_headersOutput {
	return i.ToMappingSpecAdd_request_headersOutputWithContext(context.Background())
}

func (i MappingSpecAdd_request_headersArgs) ToMappingSpecAdd_request_headersOutputWithContext(ctx context.Context) MappingSpecAdd_request_headersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecAdd_request_headersOutput)
}

type MappingSpecAdd_request_headersOutput struct{ *pulumi.OutputState }

func (MappingSpecAdd_request_headersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_request_headers)(nil)).Elem()
}

func (o MappingSpecAdd_request_headersOutput) ToMappingSpecAdd_request_headersOutput() MappingSpecAdd_request_headersOutput {
	return o
}

func (o MappingSpecAdd_request_headersOutput) ToMappingSpecAdd_request_headersOutputWithContext(ctx context.Context) MappingSpecAdd_request_headersOutput {
	return o
}

type MappingSpecAdd_request_headersOneOf2 struct {
}

// MappingSpecAdd_request_headersOneOf2Input is an input type that accepts MappingSpecAdd_request_headersOneOf2Args and MappingSpecAdd_request_headersOneOf2Output values.
// You can construct a concrete instance of `MappingSpecAdd_request_headersOneOf2Input` via:
//
//          MappingSpecAdd_request_headersOneOf2Args{...}
type MappingSpecAdd_request_headersOneOf2Input interface {
	pulumi.Input

	ToMappingSpecAdd_request_headersOneOf2Output() MappingSpecAdd_request_headersOneOf2Output
	ToMappingSpecAdd_request_headersOneOf2OutputWithContext(context.Context) MappingSpecAdd_request_headersOneOf2Output
}

type MappingSpecAdd_request_headersOneOf2Args struct {
}

func (MappingSpecAdd_request_headersOneOf2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_request_headersOneOf2)(nil)).Elem()
}

func (i MappingSpecAdd_request_headersOneOf2Args) ToMappingSpecAdd_request_headersOneOf2Output() MappingSpecAdd_request_headersOneOf2Output {
	return i.ToMappingSpecAdd_request_headersOneOf2OutputWithContext(context.Background())
}

func (i MappingSpecAdd_request_headersOneOf2Args) ToMappingSpecAdd_request_headersOneOf2OutputWithContext(ctx context.Context) MappingSpecAdd_request_headersOneOf2Output {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecAdd_request_headersOneOf2Output)
}

type MappingSpecAdd_request_headersOneOf2Output struct{ *pulumi.OutputState }

func (MappingSpecAdd_request_headersOneOf2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_request_headersOneOf2)(nil)).Elem()
}

func (o MappingSpecAdd_request_headersOneOf2Output) ToMappingSpecAdd_request_headersOneOf2Output() MappingSpecAdd_request_headersOneOf2Output {
	return o
}

func (o MappingSpecAdd_request_headersOneOf2Output) ToMappingSpecAdd_request_headersOneOf2OutputWithContext(ctx context.Context) MappingSpecAdd_request_headersOneOf2Output {
	return o
}

type MappingSpecAdd_response_headers struct {
}

// MappingSpecAdd_response_headersInput is an input type that accepts MappingSpecAdd_response_headersArgs and MappingSpecAdd_response_headersOutput values.
// You can construct a concrete instance of `MappingSpecAdd_response_headersInput` via:
//
//          MappingSpecAdd_response_headersArgs{...}
type MappingSpecAdd_response_headersInput interface {
	pulumi.Input

	ToMappingSpecAdd_response_headersOutput() MappingSpecAdd_response_headersOutput
	ToMappingSpecAdd_response_headersOutputWithContext(context.Context) MappingSpecAdd_response_headersOutput
}

type MappingSpecAdd_response_headersArgs struct {
}

func (MappingSpecAdd_response_headersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_response_headers)(nil)).Elem()
}

func (i MappingSpecAdd_response_headersArgs) ToMappingSpecAdd_response_headersOutput() MappingSpecAdd_response_headersOutput {
	return i.ToMappingSpecAdd_response_headersOutputWithContext(context.Background())
}

func (i MappingSpecAdd_response_headersArgs) ToMappingSpecAdd_response_headersOutputWithContext(ctx context.Context) MappingSpecAdd_response_headersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecAdd_response_headersOutput)
}

type MappingSpecAdd_response_headersOutput struct{ *pulumi.OutputState }

func (MappingSpecAdd_response_headersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_response_headers)(nil)).Elem()
}

func (o MappingSpecAdd_response_headersOutput) ToMappingSpecAdd_response_headersOutput() MappingSpecAdd_response_headersOutput {
	return o
}

func (o MappingSpecAdd_response_headersOutput) ToMappingSpecAdd_response_headersOutputWithContext(ctx context.Context) MappingSpecAdd_response_headersOutput {
	return o
}

type MappingSpecAdd_response_headersOneOf2 struct {
}

// MappingSpecAdd_response_headersOneOf2Input is an input type that accepts MappingSpecAdd_response_headersOneOf2Args and MappingSpecAdd_response_headersOneOf2Output values.
// You can construct a concrete instance of `MappingSpecAdd_response_headersOneOf2Input` via:
//
//          MappingSpecAdd_response_headersOneOf2Args{...}
type MappingSpecAdd_response_headersOneOf2Input interface {
	pulumi.Input

	ToMappingSpecAdd_response_headersOneOf2Output() MappingSpecAdd_response_headersOneOf2Output
	ToMappingSpecAdd_response_headersOneOf2OutputWithContext(context.Context) MappingSpecAdd_response_headersOneOf2Output
}

type MappingSpecAdd_response_headersOneOf2Args struct {
}

func (MappingSpecAdd_response_headersOneOf2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_response_headersOneOf2)(nil)).Elem()
}

func (i MappingSpecAdd_response_headersOneOf2Args) ToMappingSpecAdd_response_headersOneOf2Output() MappingSpecAdd_response_headersOneOf2Output {
	return i.ToMappingSpecAdd_response_headersOneOf2OutputWithContext(context.Background())
}

func (i MappingSpecAdd_response_headersOneOf2Args) ToMappingSpecAdd_response_headersOneOf2OutputWithContext(ctx context.Context) MappingSpecAdd_response_headersOneOf2Output {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecAdd_response_headersOneOf2Output)
}

type MappingSpecAdd_response_headersOneOf2Output struct{ *pulumi.OutputState }

func (MappingSpecAdd_response_headersOneOf2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAdd_response_headersOneOf2)(nil)).Elem()
}

func (o MappingSpecAdd_response_headersOneOf2Output) ToMappingSpecAdd_response_headersOneOf2Output() MappingSpecAdd_response_headersOneOf2Output {
	return o
}

func (o MappingSpecAdd_response_headersOneOf2Output) ToMappingSpecAdd_response_headersOneOf2OutputWithContext(ctx context.Context) MappingSpecAdd_response_headersOneOf2Output {
	return o
}

type MappingSpecAuth_context_extensions struct {
}

// MappingSpecAuth_context_extensionsInput is an input type that accepts MappingSpecAuth_context_extensionsArgs and MappingSpecAuth_context_extensionsOutput values.
// You can construct a concrete instance of `MappingSpecAuth_context_extensionsInput` via:
//
//          MappingSpecAuth_context_extensionsArgs{...}
type MappingSpecAuth_context_extensionsInput interface {
	pulumi.Input

	ToMappingSpecAuth_context_extensionsOutput() MappingSpecAuth_context_extensionsOutput
	ToMappingSpecAuth_context_extensionsOutputWithContext(context.Context) MappingSpecAuth_context_extensionsOutput
}

type MappingSpecAuth_context_extensionsArgs struct {
}

func (MappingSpecAuth_context_extensionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAuth_context_extensions)(nil)).Elem()
}

func (i MappingSpecAuth_context_extensionsArgs) ToMappingSpecAuth_context_extensionsOutput() MappingSpecAuth_context_extensionsOutput {
	return i.ToMappingSpecAuth_context_extensionsOutputWithContext(context.Background())
}

func (i MappingSpecAuth_context_extensionsArgs) ToMappingSpecAuth_context_extensionsOutputWithContext(ctx context.Context) MappingSpecAuth_context_extensionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecAuth_context_extensionsOutput)
}

type MappingSpecAuth_context_extensionsOutput struct{ *pulumi.OutputState }

func (MappingSpecAuth_context_extensionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecAuth_context_extensions)(nil)).Elem()
}

func (o MappingSpecAuth_context_extensionsOutput) ToMappingSpecAuth_context_extensionsOutput() MappingSpecAuth_context_extensionsOutput {
	return o
}

func (o MappingSpecAuth_context_extensionsOutput) ToMappingSpecAuth_context_extensionsOutputWithContext(ctx context.Context) MappingSpecAuth_context_extensionsOutput {
	return o
}

type MappingSpecCircuit_breakers struct {
	Max_connections      *int    `pulumi:"max_connections"`
	Max_pending_requests *int    `pulumi:"max_pending_requests"`
	Max_requests         *int    `pulumi:"max_requests"`
	Max_retries          *int    `pulumi:"max_retries"`
	Priority             *string `pulumi:"priority"`
}

// MappingSpecCircuit_breakersInput is an input type that accepts MappingSpecCircuit_breakersArgs and MappingSpecCircuit_breakersOutput values.
// You can construct a concrete instance of `MappingSpecCircuit_breakersInput` via:
//
//          MappingSpecCircuit_breakersArgs{...}
type MappingSpecCircuit_breakersInput interface {
	pulumi.Input

	ToMappingSpecCircuit_breakersOutput() MappingSpecCircuit_breakersOutput
	ToMappingSpecCircuit_breakersOutputWithContext(context.Context) MappingSpecCircuit_breakersOutput
}

type MappingSpecCircuit_breakersArgs struct {
	Max_connections      pulumi.IntPtrInput    `pulumi:"max_connections"`
	Max_pending_requests pulumi.IntPtrInput    `pulumi:"max_pending_requests"`
	Max_requests         pulumi.IntPtrInput    `pulumi:"max_requests"`
	Max_retries          pulumi.IntPtrInput    `pulumi:"max_retries"`
	Priority             pulumi.StringPtrInput `pulumi:"priority"`
}

func (MappingSpecCircuit_breakersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecCircuit_breakers)(nil)).Elem()
}

func (i MappingSpecCircuit_breakersArgs) ToMappingSpecCircuit_breakersOutput() MappingSpecCircuit_breakersOutput {
	return i.ToMappingSpecCircuit_breakersOutputWithContext(context.Background())
}

func (i MappingSpecCircuit_breakersArgs) ToMappingSpecCircuit_breakersOutputWithContext(ctx context.Context) MappingSpecCircuit_breakersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecCircuit_breakersOutput)
}

// MappingSpecCircuit_breakersArrayInput is an input type that accepts MappingSpecCircuit_breakersArray and MappingSpecCircuit_breakersArrayOutput values.
// You can construct a concrete instance of `MappingSpecCircuit_breakersArrayInput` via:
//
//          MappingSpecCircuit_breakersArray{ MappingSpecCircuit_breakersArgs{...} }
type MappingSpecCircuit_breakersArrayInput interface {
	pulumi.Input

	ToMappingSpecCircuit_breakersArrayOutput() MappingSpecCircuit_breakersArrayOutput
	ToMappingSpecCircuit_breakersArrayOutputWithContext(context.Context) MappingSpecCircuit_breakersArrayOutput
}

type MappingSpecCircuit_breakersArray []MappingSpecCircuit_breakersInput

func (MappingSpecCircuit_breakersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MappingSpecCircuit_breakers)(nil)).Elem()
}

func (i MappingSpecCircuit_breakersArray) ToMappingSpecCircuit_breakersArrayOutput() MappingSpecCircuit_breakersArrayOutput {
	return i.ToMappingSpecCircuit_breakersArrayOutputWithContext(context.Background())
}

func (i MappingSpecCircuit_breakersArray) ToMappingSpecCircuit_breakersArrayOutputWithContext(ctx context.Context) MappingSpecCircuit_breakersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecCircuit_breakersArrayOutput)
}

type MappingSpecCircuit_breakersOutput struct{ *pulumi.OutputState }

func (MappingSpecCircuit_breakersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecCircuit_breakers)(nil)).Elem()
}

func (o MappingSpecCircuit_breakersOutput) ToMappingSpecCircuit_breakersOutput() MappingSpecCircuit_breakersOutput {
	return o
}

func (o MappingSpecCircuit_breakersOutput) ToMappingSpecCircuit_breakersOutputWithContext(ctx context.Context) MappingSpecCircuit_breakersOutput {
	return o
}

func (o MappingSpecCircuit_breakersOutput) Max_connections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecCircuit_breakers) *int { return v.Max_connections }).(pulumi.IntPtrOutput)
}

func (o MappingSpecCircuit_breakersOutput) Max_pending_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecCircuit_breakers) *int { return v.Max_pending_requests }).(pulumi.IntPtrOutput)
}

func (o MappingSpecCircuit_breakersOutput) Max_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecCircuit_breakers) *int { return v.Max_requests }).(pulumi.IntPtrOutput)
}

func (o MappingSpecCircuit_breakersOutput) Max_retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecCircuit_breakers) *int { return v.Max_retries }).(pulumi.IntPtrOutput)
}

func (o MappingSpecCircuit_breakersOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecCircuit_breakers) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

type MappingSpecCircuit_breakersArrayOutput struct{ *pulumi.OutputState }

func (MappingSpecCircuit_breakersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MappingSpecCircuit_breakers)(nil)).Elem()
}

func (o MappingSpecCircuit_breakersArrayOutput) ToMappingSpecCircuit_breakersArrayOutput() MappingSpecCircuit_breakersArrayOutput {
	return o
}

func (o MappingSpecCircuit_breakersArrayOutput) ToMappingSpecCircuit_breakersArrayOutputWithContext(ctx context.Context) MappingSpecCircuit_breakersArrayOutput {
	return o
}

func (o MappingSpecCircuit_breakersArrayOutput) Index(i pulumi.IntInput) MappingSpecCircuit_breakersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MappingSpecCircuit_breakers {
		return vs[0].([]MappingSpecCircuit_breakers)[vs[1].(int)]
	}).(MappingSpecCircuit_breakersOutput)
}

type MappingSpecCors struct {
	Credentials *bool `pulumi:"credentials"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Exposed_headers interface{} `pulumi:"exposed_headers"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Headers interface{} `pulumi:"headers"`
	Max_age *string     `pulumi:"max_age"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Methods interface{} `pulumi:"methods"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Origins interface{} `pulumi:"origins"`
}

// MappingSpecCorsInput is an input type that accepts MappingSpecCorsArgs and MappingSpecCorsOutput values.
// You can construct a concrete instance of `MappingSpecCorsInput` via:
//
//          MappingSpecCorsArgs{...}
type MappingSpecCorsInput interface {
	pulumi.Input

	ToMappingSpecCorsOutput() MappingSpecCorsOutput
	ToMappingSpecCorsOutputWithContext(context.Context) MappingSpecCorsOutput
}

type MappingSpecCorsArgs struct {
	Credentials pulumi.BoolPtrInput `pulumi:"credentials"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Exposed_headers pulumi.Input `pulumi:"exposed_headers"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Headers pulumi.Input          `pulumi:"headers"`
	Max_age pulumi.StringPtrInput `pulumi:"max_age"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Methods pulumi.Input `pulumi:"methods"`
	// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
	Origins pulumi.Input `pulumi:"origins"`
}

func (MappingSpecCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecCors)(nil)).Elem()
}

func (i MappingSpecCorsArgs) ToMappingSpecCorsOutput() MappingSpecCorsOutput {
	return i.ToMappingSpecCorsOutputWithContext(context.Background())
}

func (i MappingSpecCorsArgs) ToMappingSpecCorsOutputWithContext(ctx context.Context) MappingSpecCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecCorsOutput)
}

func (i MappingSpecCorsArgs) ToMappingSpecCorsPtrOutput() MappingSpecCorsPtrOutput {
	return i.ToMappingSpecCorsPtrOutputWithContext(context.Background())
}

func (i MappingSpecCorsArgs) ToMappingSpecCorsPtrOutputWithContext(ctx context.Context) MappingSpecCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecCorsOutput).ToMappingSpecCorsPtrOutputWithContext(ctx)
}

// MappingSpecCorsPtrInput is an input type that accepts MappingSpecCorsArgs, MappingSpecCorsPtr and MappingSpecCorsPtrOutput values.
// You can construct a concrete instance of `MappingSpecCorsPtrInput` via:
//
//          MappingSpecCorsArgs{...}
//
//  or:
//
//          nil
type MappingSpecCorsPtrInput interface {
	pulumi.Input

	ToMappingSpecCorsPtrOutput() MappingSpecCorsPtrOutput
	ToMappingSpecCorsPtrOutputWithContext(context.Context) MappingSpecCorsPtrOutput
}

type mappingSpecCorsPtrType MappingSpecCorsArgs

func MappingSpecCorsPtr(v *MappingSpecCorsArgs) MappingSpecCorsPtrInput {
	return (*mappingSpecCorsPtrType)(v)
}

func (*mappingSpecCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecCors)(nil)).Elem()
}

func (i *mappingSpecCorsPtrType) ToMappingSpecCorsPtrOutput() MappingSpecCorsPtrOutput {
	return i.ToMappingSpecCorsPtrOutputWithContext(context.Background())
}

func (i *mappingSpecCorsPtrType) ToMappingSpecCorsPtrOutputWithContext(ctx context.Context) MappingSpecCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecCorsPtrOutput)
}

type MappingSpecCorsOutput struct{ *pulumi.OutputState }

func (MappingSpecCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecCors)(nil)).Elem()
}

func (o MappingSpecCorsOutput) ToMappingSpecCorsOutput() MappingSpecCorsOutput {
	return o
}

func (o MappingSpecCorsOutput) ToMappingSpecCorsOutputWithContext(ctx context.Context) MappingSpecCorsOutput {
	return o
}

func (o MappingSpecCorsOutput) ToMappingSpecCorsPtrOutput() MappingSpecCorsPtrOutput {
	return o.ToMappingSpecCorsPtrOutputWithContext(context.Background())
}

func (o MappingSpecCorsOutput) ToMappingSpecCorsPtrOutputWithContext(ctx context.Context) MappingSpecCorsPtrOutput {
	return o.ApplyT(func(v MappingSpecCors) *MappingSpecCors {
		return &v
	}).(MappingSpecCorsPtrOutput)
}
func (o MappingSpecCorsOutput) Credentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpecCors) *bool { return v.Credentials }).(pulumi.BoolPtrOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsOutput) Exposed_headers() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpecCors) interface{} { return v.Exposed_headers }).(pulumi.AnyOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpecCors) interface{} { return v.Headers }).(pulumi.AnyOutput)
}

func (o MappingSpecCorsOutput) Max_age() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecCors) *string { return v.Max_age }).(pulumi.StringPtrOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsOutput) Methods() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpecCors) interface{} { return v.Methods }).(pulumi.AnyOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsOutput) Origins() pulumi.AnyOutput {
	return o.ApplyT(func(v MappingSpecCors) interface{} { return v.Origins }).(pulumi.AnyOutput)
}

type MappingSpecCorsPtrOutput struct{ *pulumi.OutputState }

func (MappingSpecCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecCors)(nil)).Elem()
}

func (o MappingSpecCorsPtrOutput) ToMappingSpecCorsPtrOutput() MappingSpecCorsPtrOutput {
	return o
}

func (o MappingSpecCorsPtrOutput) ToMappingSpecCorsPtrOutputWithContext(ctx context.Context) MappingSpecCorsPtrOutput {
	return o
}

func (o MappingSpecCorsPtrOutput) Elem() MappingSpecCorsOutput {
	return o.ApplyT(func(v *MappingSpecCors) MappingSpecCors { return *v }).(MappingSpecCorsOutput)
}

func (o MappingSpecCorsPtrOutput) Credentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpecCors) *bool {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(pulumi.BoolPtrOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsPtrOutput) Exposed_headers() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpecCors) interface{} {
		if v == nil {
			return nil
		}
		return v.Exposed_headers
	}).(pulumi.AnyOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsPtrOutput) Headers() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpecCors) interface{} {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.AnyOutput)
}

func (o MappingSpecCorsPtrOutput) Max_age() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecCors) *string {
		if v == nil {
			return nil
		}
		return v.Max_age
	}).(pulumi.StringPtrOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsPtrOutput) Methods() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpecCors) interface{} {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.AnyOutput)
}

// StringOrStringList is just what it says on the tin, but note that it will always marshal as a list of strings right now.
func (o MappingSpecCorsPtrOutput) Origins() pulumi.AnyOutput {
	return o.ApplyT(func(v *MappingSpecCors) interface{} {
		if v == nil {
			return nil
		}
		return v.Origins
	}).(pulumi.AnyOutput)
}

// DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)
type MappingSpecDocs struct {
	Display_name *string `pulumi:"display_name"`
	Ignored      *bool   `pulumi:"ignored"`
	Path         *string `pulumi:"path"`
	Url          *string `pulumi:"url"`
}

// MappingSpecDocsInput is an input type that accepts MappingSpecDocsArgs and MappingSpecDocsOutput values.
// You can construct a concrete instance of `MappingSpecDocsInput` via:
//
//          MappingSpecDocsArgs{...}
type MappingSpecDocsInput interface {
	pulumi.Input

	ToMappingSpecDocsOutput() MappingSpecDocsOutput
	ToMappingSpecDocsOutputWithContext(context.Context) MappingSpecDocsOutput
}

// DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)
type MappingSpecDocsArgs struct {
	Display_name pulumi.StringPtrInput `pulumi:"display_name"`
	Ignored      pulumi.BoolPtrInput   `pulumi:"ignored"`
	Path         pulumi.StringPtrInput `pulumi:"path"`
	Url          pulumi.StringPtrInput `pulumi:"url"`
}

func (MappingSpecDocsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecDocs)(nil)).Elem()
}

func (i MappingSpecDocsArgs) ToMappingSpecDocsOutput() MappingSpecDocsOutput {
	return i.ToMappingSpecDocsOutputWithContext(context.Background())
}

func (i MappingSpecDocsArgs) ToMappingSpecDocsOutputWithContext(ctx context.Context) MappingSpecDocsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecDocsOutput)
}

func (i MappingSpecDocsArgs) ToMappingSpecDocsPtrOutput() MappingSpecDocsPtrOutput {
	return i.ToMappingSpecDocsPtrOutputWithContext(context.Background())
}

func (i MappingSpecDocsArgs) ToMappingSpecDocsPtrOutputWithContext(ctx context.Context) MappingSpecDocsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecDocsOutput).ToMappingSpecDocsPtrOutputWithContext(ctx)
}

// MappingSpecDocsPtrInput is an input type that accepts MappingSpecDocsArgs, MappingSpecDocsPtr and MappingSpecDocsPtrOutput values.
// You can construct a concrete instance of `MappingSpecDocsPtrInput` via:
//
//          MappingSpecDocsArgs{...}
//
//  or:
//
//          nil
type MappingSpecDocsPtrInput interface {
	pulumi.Input

	ToMappingSpecDocsPtrOutput() MappingSpecDocsPtrOutput
	ToMappingSpecDocsPtrOutputWithContext(context.Context) MappingSpecDocsPtrOutput
}

type mappingSpecDocsPtrType MappingSpecDocsArgs

func MappingSpecDocsPtr(v *MappingSpecDocsArgs) MappingSpecDocsPtrInput {
	return (*mappingSpecDocsPtrType)(v)
}

func (*mappingSpecDocsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecDocs)(nil)).Elem()
}

func (i *mappingSpecDocsPtrType) ToMappingSpecDocsPtrOutput() MappingSpecDocsPtrOutput {
	return i.ToMappingSpecDocsPtrOutputWithContext(context.Background())
}

func (i *mappingSpecDocsPtrType) ToMappingSpecDocsPtrOutputWithContext(ctx context.Context) MappingSpecDocsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecDocsPtrOutput)
}

// DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)
type MappingSpecDocsOutput struct{ *pulumi.OutputState }

func (MappingSpecDocsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecDocs)(nil)).Elem()
}

func (o MappingSpecDocsOutput) ToMappingSpecDocsOutput() MappingSpecDocsOutput {
	return o
}

func (o MappingSpecDocsOutput) ToMappingSpecDocsOutputWithContext(ctx context.Context) MappingSpecDocsOutput {
	return o
}

func (o MappingSpecDocsOutput) ToMappingSpecDocsPtrOutput() MappingSpecDocsPtrOutput {
	return o.ToMappingSpecDocsPtrOutputWithContext(context.Background())
}

func (o MappingSpecDocsOutput) ToMappingSpecDocsPtrOutputWithContext(ctx context.Context) MappingSpecDocsPtrOutput {
	return o.ApplyT(func(v MappingSpecDocs) *MappingSpecDocs {
		return &v
	}).(MappingSpecDocsPtrOutput)
}
func (o MappingSpecDocsOutput) Display_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecDocs) *string { return v.Display_name }).(pulumi.StringPtrOutput)
}

func (o MappingSpecDocsOutput) Ignored() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpecDocs) *bool { return v.Ignored }).(pulumi.BoolPtrOutput)
}

func (o MappingSpecDocsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecDocs) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o MappingSpecDocsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecDocs) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type MappingSpecDocsPtrOutput struct{ *pulumi.OutputState }

func (MappingSpecDocsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecDocs)(nil)).Elem()
}

func (o MappingSpecDocsPtrOutput) ToMappingSpecDocsPtrOutput() MappingSpecDocsPtrOutput {
	return o
}

func (o MappingSpecDocsPtrOutput) ToMappingSpecDocsPtrOutputWithContext(ctx context.Context) MappingSpecDocsPtrOutput {
	return o
}

func (o MappingSpecDocsPtrOutput) Elem() MappingSpecDocsOutput {
	return o.ApplyT(func(v *MappingSpecDocs) MappingSpecDocs { return *v }).(MappingSpecDocsOutput)
}

func (o MappingSpecDocsPtrOutput) Display_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecDocs) *string {
		if v == nil {
			return nil
		}
		return v.Display_name
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecDocsPtrOutput) Ignored() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpecDocs) *bool {
		if v == nil {
			return nil
		}
		return v.Ignored
	}).(pulumi.BoolPtrOutput)
}

func (o MappingSpecDocsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecDocs) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecDocsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecDocs) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type MappingSpecEnvoy_override struct {
}

// MappingSpecEnvoy_overrideInput is an input type that accepts MappingSpecEnvoy_overrideArgs and MappingSpecEnvoy_overrideOutput values.
// You can construct a concrete instance of `MappingSpecEnvoy_overrideInput` via:
//
//          MappingSpecEnvoy_overrideArgs{...}
type MappingSpecEnvoy_overrideInput interface {
	pulumi.Input

	ToMappingSpecEnvoy_overrideOutput() MappingSpecEnvoy_overrideOutput
	ToMappingSpecEnvoy_overrideOutputWithContext(context.Context) MappingSpecEnvoy_overrideOutput
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type MappingSpecEnvoy_overrideArgs struct {
}

func (MappingSpecEnvoy_overrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecEnvoy_override)(nil)).Elem()
}

func (i MappingSpecEnvoy_overrideArgs) ToMappingSpecEnvoy_overrideOutput() MappingSpecEnvoy_overrideOutput {
	return i.ToMappingSpecEnvoy_overrideOutputWithContext(context.Background())
}

func (i MappingSpecEnvoy_overrideArgs) ToMappingSpecEnvoy_overrideOutputWithContext(ctx context.Context) MappingSpecEnvoy_overrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecEnvoy_overrideOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type MappingSpecEnvoy_overrideOutput struct{ *pulumi.OutputState }

func (MappingSpecEnvoy_overrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecEnvoy_override)(nil)).Elem()
}

func (o MappingSpecEnvoy_overrideOutput) ToMappingSpecEnvoy_overrideOutput() MappingSpecEnvoy_overrideOutput {
	return o
}

func (o MappingSpecEnvoy_overrideOutput) ToMappingSpecEnvoy_overrideOutputWithContext(ctx context.Context) MappingSpecEnvoy_overrideOutput {
	return o
}

// A response rewrite for an HTTP error response
type MappingSpecError_response_overrides struct {
	// The new response body
	Body MappingSpecError_response_overridesBody `pulumi:"body"`
	// The status code to match on -- not a pointer because it's required.
	On_status_code int `pulumi:"on_status_code"`
}

// MappingSpecError_response_overridesInput is an input type that accepts MappingSpecError_response_overridesArgs and MappingSpecError_response_overridesOutput values.
// You can construct a concrete instance of `MappingSpecError_response_overridesInput` via:
//
//          MappingSpecError_response_overridesArgs{...}
type MappingSpecError_response_overridesInput interface {
	pulumi.Input

	ToMappingSpecError_response_overridesOutput() MappingSpecError_response_overridesOutput
	ToMappingSpecError_response_overridesOutputWithContext(context.Context) MappingSpecError_response_overridesOutput
}

// A response rewrite for an HTTP error response
type MappingSpecError_response_overridesArgs struct {
	// The new response body
	Body MappingSpecError_response_overridesBodyInput `pulumi:"body"`
	// The status code to match on -- not a pointer because it's required.
	On_status_code pulumi.IntInput `pulumi:"on_status_code"`
}

func (MappingSpecError_response_overridesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overrides)(nil)).Elem()
}

func (i MappingSpecError_response_overridesArgs) ToMappingSpecError_response_overridesOutput() MappingSpecError_response_overridesOutput {
	return i.ToMappingSpecError_response_overridesOutputWithContext(context.Background())
}

func (i MappingSpecError_response_overridesArgs) ToMappingSpecError_response_overridesOutputWithContext(ctx context.Context) MappingSpecError_response_overridesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecError_response_overridesOutput)
}

// MappingSpecError_response_overridesArrayInput is an input type that accepts MappingSpecError_response_overridesArray and MappingSpecError_response_overridesArrayOutput values.
// You can construct a concrete instance of `MappingSpecError_response_overridesArrayInput` via:
//
//          MappingSpecError_response_overridesArray{ MappingSpecError_response_overridesArgs{...} }
type MappingSpecError_response_overridesArrayInput interface {
	pulumi.Input

	ToMappingSpecError_response_overridesArrayOutput() MappingSpecError_response_overridesArrayOutput
	ToMappingSpecError_response_overridesArrayOutputWithContext(context.Context) MappingSpecError_response_overridesArrayOutput
}

type MappingSpecError_response_overridesArray []MappingSpecError_response_overridesInput

func (MappingSpecError_response_overridesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MappingSpecError_response_overrides)(nil)).Elem()
}

func (i MappingSpecError_response_overridesArray) ToMappingSpecError_response_overridesArrayOutput() MappingSpecError_response_overridesArrayOutput {
	return i.ToMappingSpecError_response_overridesArrayOutputWithContext(context.Background())
}

func (i MappingSpecError_response_overridesArray) ToMappingSpecError_response_overridesArrayOutputWithContext(ctx context.Context) MappingSpecError_response_overridesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecError_response_overridesArrayOutput)
}

// A response rewrite for an HTTP error response
type MappingSpecError_response_overridesOutput struct{ *pulumi.OutputState }

func (MappingSpecError_response_overridesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overrides)(nil)).Elem()
}

func (o MappingSpecError_response_overridesOutput) ToMappingSpecError_response_overridesOutput() MappingSpecError_response_overridesOutput {
	return o
}

func (o MappingSpecError_response_overridesOutput) ToMappingSpecError_response_overridesOutputWithContext(ctx context.Context) MappingSpecError_response_overridesOutput {
	return o
}

// The new response body
func (o MappingSpecError_response_overridesOutput) Body() MappingSpecError_response_overridesBodyOutput {
	return o.ApplyT(func(v MappingSpecError_response_overrides) MappingSpecError_response_overridesBody { return v.Body }).(MappingSpecError_response_overridesBodyOutput)
}

// The status code to match on -- not a pointer because it's required.
func (o MappingSpecError_response_overridesOutput) On_status_code() pulumi.IntOutput {
	return o.ApplyT(func(v MappingSpecError_response_overrides) int { return v.On_status_code }).(pulumi.IntOutput)
}

type MappingSpecError_response_overridesArrayOutput struct{ *pulumi.OutputState }

func (MappingSpecError_response_overridesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MappingSpecError_response_overrides)(nil)).Elem()
}

func (o MappingSpecError_response_overridesArrayOutput) ToMappingSpecError_response_overridesArrayOutput() MappingSpecError_response_overridesArrayOutput {
	return o
}

func (o MappingSpecError_response_overridesArrayOutput) ToMappingSpecError_response_overridesArrayOutputWithContext(ctx context.Context) MappingSpecError_response_overridesArrayOutput {
	return o
}

func (o MappingSpecError_response_overridesArrayOutput) Index(i pulumi.IntInput) MappingSpecError_response_overridesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MappingSpecError_response_overrides {
		return vs[0].([]MappingSpecError_response_overrides)[vs[1].(int)]
	}).(MappingSpecError_response_overridesOutput)
}

// The new response body
type MappingSpecError_response_overridesBody struct {
	// The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.
	Content_type *string `pulumi:"content_type"`
	// A JSON response with content-type: application/json. The values can contain format text like in text_format.
	Json_format map[string]string `pulumi:"json_format"`
	// A format string representing a text response body. Content-Type can be set using the `content_type` field below.
	Text_format *string `pulumi:"text_format"`
	// A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.
	Text_format_source *MappingSpecError_response_overridesBodyText_format_source `pulumi:"text_format_source"`
}

// MappingSpecError_response_overridesBodyInput is an input type that accepts MappingSpecError_response_overridesBodyArgs and MappingSpecError_response_overridesBodyOutput values.
// You can construct a concrete instance of `MappingSpecError_response_overridesBodyInput` via:
//
//          MappingSpecError_response_overridesBodyArgs{...}
type MappingSpecError_response_overridesBodyInput interface {
	pulumi.Input

	ToMappingSpecError_response_overridesBodyOutput() MappingSpecError_response_overridesBodyOutput
	ToMappingSpecError_response_overridesBodyOutputWithContext(context.Context) MappingSpecError_response_overridesBodyOutput
}

// The new response body
type MappingSpecError_response_overridesBodyArgs struct {
	// The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.
	Content_type pulumi.StringPtrInput `pulumi:"content_type"`
	// A JSON response with content-type: application/json. The values can contain format text like in text_format.
	Json_format pulumi.StringMapInput `pulumi:"json_format"`
	// A format string representing a text response body. Content-Type can be set using the `content_type` field below.
	Text_format pulumi.StringPtrInput `pulumi:"text_format"`
	// A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.
	Text_format_source MappingSpecError_response_overridesBodyText_format_sourcePtrInput `pulumi:"text_format_source"`
}

func (MappingSpecError_response_overridesBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overridesBody)(nil)).Elem()
}

func (i MappingSpecError_response_overridesBodyArgs) ToMappingSpecError_response_overridesBodyOutput() MappingSpecError_response_overridesBodyOutput {
	return i.ToMappingSpecError_response_overridesBodyOutputWithContext(context.Background())
}

func (i MappingSpecError_response_overridesBodyArgs) ToMappingSpecError_response_overridesBodyOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecError_response_overridesBodyOutput)
}

// The new response body
type MappingSpecError_response_overridesBodyOutput struct{ *pulumi.OutputState }

func (MappingSpecError_response_overridesBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overridesBody)(nil)).Elem()
}

func (o MappingSpecError_response_overridesBodyOutput) ToMappingSpecError_response_overridesBodyOutput() MappingSpecError_response_overridesBodyOutput {
	return o
}

func (o MappingSpecError_response_overridesBodyOutput) ToMappingSpecError_response_overridesBodyOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyOutput {
	return o
}

// The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.
func (o MappingSpecError_response_overridesBodyOutput) Content_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecError_response_overridesBody) *string { return v.Content_type }).(pulumi.StringPtrOutput)
}

// A JSON response with content-type: application/json. The values can contain format text like in text_format.
func (o MappingSpecError_response_overridesBodyOutput) Json_format() pulumi.StringMapOutput {
	return o.ApplyT(func(v MappingSpecError_response_overridesBody) map[string]string { return v.Json_format }).(pulumi.StringMapOutput)
}

// A format string representing a text response body. Content-Type can be set using the `content_type` field below.
func (o MappingSpecError_response_overridesBodyOutput) Text_format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecError_response_overridesBody) *string { return v.Text_format }).(pulumi.StringPtrOutput)
}

// A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.
func (o MappingSpecError_response_overridesBodyOutput) Text_format_source() MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return o.ApplyT(func(v MappingSpecError_response_overridesBody) *MappingSpecError_response_overridesBodyText_format_source {
		return v.Text_format_source
	}).(MappingSpecError_response_overridesBodyText_format_sourcePtrOutput)
}

// A JSON response with content-type: application/json. The values can contain format text like in text_format.
type MappingSpecError_response_overridesBodyJson_format struct {
}

// MappingSpecError_response_overridesBodyJson_formatInput is an input type that accepts MappingSpecError_response_overridesBodyJson_formatArgs and MappingSpecError_response_overridesBodyJson_formatOutput values.
// You can construct a concrete instance of `MappingSpecError_response_overridesBodyJson_formatInput` via:
//
//          MappingSpecError_response_overridesBodyJson_formatArgs{...}
type MappingSpecError_response_overridesBodyJson_formatInput interface {
	pulumi.Input

	ToMappingSpecError_response_overridesBodyJson_formatOutput() MappingSpecError_response_overridesBodyJson_formatOutput
	ToMappingSpecError_response_overridesBodyJson_formatOutputWithContext(context.Context) MappingSpecError_response_overridesBodyJson_formatOutput
}

// A JSON response with content-type: application/json. The values can contain format text like in text_format.
type MappingSpecError_response_overridesBodyJson_formatArgs struct {
}

func (MappingSpecError_response_overridesBodyJson_formatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overridesBodyJson_format)(nil)).Elem()
}

func (i MappingSpecError_response_overridesBodyJson_formatArgs) ToMappingSpecError_response_overridesBodyJson_formatOutput() MappingSpecError_response_overridesBodyJson_formatOutput {
	return i.ToMappingSpecError_response_overridesBodyJson_formatOutputWithContext(context.Background())
}

func (i MappingSpecError_response_overridesBodyJson_formatArgs) ToMappingSpecError_response_overridesBodyJson_formatOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyJson_formatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecError_response_overridesBodyJson_formatOutput)
}

// A JSON response with content-type: application/json. The values can contain format text like in text_format.
type MappingSpecError_response_overridesBodyJson_formatOutput struct{ *pulumi.OutputState }

func (MappingSpecError_response_overridesBodyJson_formatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overridesBodyJson_format)(nil)).Elem()
}

func (o MappingSpecError_response_overridesBodyJson_formatOutput) ToMappingSpecError_response_overridesBodyJson_formatOutput() MappingSpecError_response_overridesBodyJson_formatOutput {
	return o
}

func (o MappingSpecError_response_overridesBodyJson_formatOutput) ToMappingSpecError_response_overridesBodyJson_formatOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyJson_formatOutput {
	return o
}

// A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.
type MappingSpecError_response_overridesBodyText_format_source struct {
	// The name of a file on the Ambassador pod that contains a format text string.
	Filename *string `pulumi:"filename"`
}

// MappingSpecError_response_overridesBodyText_format_sourceInput is an input type that accepts MappingSpecError_response_overridesBodyText_format_sourceArgs and MappingSpecError_response_overridesBodyText_format_sourceOutput values.
// You can construct a concrete instance of `MappingSpecError_response_overridesBodyText_format_sourceInput` via:
//
//          MappingSpecError_response_overridesBodyText_format_sourceArgs{...}
type MappingSpecError_response_overridesBodyText_format_sourceInput interface {
	pulumi.Input

	ToMappingSpecError_response_overridesBodyText_format_sourceOutput() MappingSpecError_response_overridesBodyText_format_sourceOutput
	ToMappingSpecError_response_overridesBodyText_format_sourceOutputWithContext(context.Context) MappingSpecError_response_overridesBodyText_format_sourceOutput
}

// A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.
type MappingSpecError_response_overridesBodyText_format_sourceArgs struct {
	// The name of a file on the Ambassador pod that contains a format text string.
	Filename pulumi.StringPtrInput `pulumi:"filename"`
}

func (MappingSpecError_response_overridesBodyText_format_sourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overridesBodyText_format_source)(nil)).Elem()
}

func (i MappingSpecError_response_overridesBodyText_format_sourceArgs) ToMappingSpecError_response_overridesBodyText_format_sourceOutput() MappingSpecError_response_overridesBodyText_format_sourceOutput {
	return i.ToMappingSpecError_response_overridesBodyText_format_sourceOutputWithContext(context.Background())
}

func (i MappingSpecError_response_overridesBodyText_format_sourceArgs) ToMappingSpecError_response_overridesBodyText_format_sourceOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyText_format_sourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecError_response_overridesBodyText_format_sourceOutput)
}

func (i MappingSpecError_response_overridesBodyText_format_sourceArgs) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutput() MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return i.ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(context.Background())
}

func (i MappingSpecError_response_overridesBodyText_format_sourceArgs) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecError_response_overridesBodyText_format_sourceOutput).ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(ctx)
}

// MappingSpecError_response_overridesBodyText_format_sourcePtrInput is an input type that accepts MappingSpecError_response_overridesBodyText_format_sourceArgs, MappingSpecError_response_overridesBodyText_format_sourcePtr and MappingSpecError_response_overridesBodyText_format_sourcePtrOutput values.
// You can construct a concrete instance of `MappingSpecError_response_overridesBodyText_format_sourcePtrInput` via:
//
//          MappingSpecError_response_overridesBodyText_format_sourceArgs{...}
//
//  or:
//
//          nil
type MappingSpecError_response_overridesBodyText_format_sourcePtrInput interface {
	pulumi.Input

	ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutput() MappingSpecError_response_overridesBodyText_format_sourcePtrOutput
	ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(context.Context) MappingSpecError_response_overridesBodyText_format_sourcePtrOutput
}

type mappingSpecError_response_overridesBodyText_format_sourcePtrType MappingSpecError_response_overridesBodyText_format_sourceArgs

func MappingSpecError_response_overridesBodyText_format_sourcePtr(v *MappingSpecError_response_overridesBodyText_format_sourceArgs) MappingSpecError_response_overridesBodyText_format_sourcePtrInput {
	return (*mappingSpecError_response_overridesBodyText_format_sourcePtrType)(v)
}

func (*mappingSpecError_response_overridesBodyText_format_sourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecError_response_overridesBodyText_format_source)(nil)).Elem()
}

func (i *mappingSpecError_response_overridesBodyText_format_sourcePtrType) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutput() MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return i.ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(context.Background())
}

func (i *mappingSpecError_response_overridesBodyText_format_sourcePtrType) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecError_response_overridesBodyText_format_sourcePtrOutput)
}

// A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.
type MappingSpecError_response_overridesBodyText_format_sourceOutput struct{ *pulumi.OutputState }

func (MappingSpecError_response_overridesBodyText_format_sourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecError_response_overridesBodyText_format_source)(nil)).Elem()
}

func (o MappingSpecError_response_overridesBodyText_format_sourceOutput) ToMappingSpecError_response_overridesBodyText_format_sourceOutput() MappingSpecError_response_overridesBodyText_format_sourceOutput {
	return o
}

func (o MappingSpecError_response_overridesBodyText_format_sourceOutput) ToMappingSpecError_response_overridesBodyText_format_sourceOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyText_format_sourceOutput {
	return o
}

func (o MappingSpecError_response_overridesBodyText_format_sourceOutput) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutput() MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return o.ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(context.Background())
}

func (o MappingSpecError_response_overridesBodyText_format_sourceOutput) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return o.ApplyT(func(v MappingSpecError_response_overridesBodyText_format_source) *MappingSpecError_response_overridesBodyText_format_source {
		return &v
	}).(MappingSpecError_response_overridesBodyText_format_sourcePtrOutput)
}

// The name of a file on the Ambassador pod that contains a format text string.
func (o MappingSpecError_response_overridesBodyText_format_sourceOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecError_response_overridesBodyText_format_source) *string { return v.Filename }).(pulumi.StringPtrOutput)
}

type MappingSpecError_response_overridesBodyText_format_sourcePtrOutput struct{ *pulumi.OutputState }

func (MappingSpecError_response_overridesBodyText_format_sourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecError_response_overridesBodyText_format_source)(nil)).Elem()
}

func (o MappingSpecError_response_overridesBodyText_format_sourcePtrOutput) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutput() MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return o
}

func (o MappingSpecError_response_overridesBodyText_format_sourcePtrOutput) ToMappingSpecError_response_overridesBodyText_format_sourcePtrOutputWithContext(ctx context.Context) MappingSpecError_response_overridesBodyText_format_sourcePtrOutput {
	return o
}

func (o MappingSpecError_response_overridesBodyText_format_sourcePtrOutput) Elem() MappingSpecError_response_overridesBodyText_format_sourceOutput {
	return o.ApplyT(func(v *MappingSpecError_response_overridesBodyText_format_source) MappingSpecError_response_overridesBodyText_format_source {
		return *v
	}).(MappingSpecError_response_overridesBodyText_format_sourceOutput)
}

// The name of a file on the Ambassador pod that contains a format text string.
func (o MappingSpecError_response_overridesBodyText_format_sourcePtrOutput) Filename() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecError_response_overridesBodyText_format_source) *string {
		if v == nil {
			return nil
		}
		return v.Filename
	}).(pulumi.StringPtrOutput)
}

type MappingSpecHeaders struct {
}

// MappingSpecHeadersInput is an input type that accepts MappingSpecHeadersArgs and MappingSpecHeadersOutput values.
// You can construct a concrete instance of `MappingSpecHeadersInput` via:
//
//          MappingSpecHeadersArgs{...}
type MappingSpecHeadersInput interface {
	pulumi.Input

	ToMappingSpecHeadersOutput() MappingSpecHeadersOutput
	ToMappingSpecHeadersOutputWithContext(context.Context) MappingSpecHeadersOutput
}

type MappingSpecHeadersArgs struct {
}

func (MappingSpecHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecHeaders)(nil)).Elem()
}

func (i MappingSpecHeadersArgs) ToMappingSpecHeadersOutput() MappingSpecHeadersOutput {
	return i.ToMappingSpecHeadersOutputWithContext(context.Background())
}

func (i MappingSpecHeadersArgs) ToMappingSpecHeadersOutputWithContext(ctx context.Context) MappingSpecHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecHeadersOutput)
}

type MappingSpecHeadersOutput struct{ *pulumi.OutputState }

func (MappingSpecHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecHeaders)(nil)).Elem()
}

func (o MappingSpecHeadersOutput) ToMappingSpecHeadersOutput() MappingSpecHeadersOutput {
	return o
}

func (o MappingSpecHeadersOutput) ToMappingSpecHeadersOutputWithContext(ctx context.Context) MappingSpecHeadersOutput {
	return o
}

type MappingSpecKeepalive struct {
	Idle_time *int `pulumi:"idle_time"`
	Interval  *int `pulumi:"interval"`
	Probes    *int `pulumi:"probes"`
}

// MappingSpecKeepaliveInput is an input type that accepts MappingSpecKeepaliveArgs and MappingSpecKeepaliveOutput values.
// You can construct a concrete instance of `MappingSpecKeepaliveInput` via:
//
//          MappingSpecKeepaliveArgs{...}
type MappingSpecKeepaliveInput interface {
	pulumi.Input

	ToMappingSpecKeepaliveOutput() MappingSpecKeepaliveOutput
	ToMappingSpecKeepaliveOutputWithContext(context.Context) MappingSpecKeepaliveOutput
}

type MappingSpecKeepaliveArgs struct {
	Idle_time pulumi.IntPtrInput `pulumi:"idle_time"`
	Interval  pulumi.IntPtrInput `pulumi:"interval"`
	Probes    pulumi.IntPtrInput `pulumi:"probes"`
}

func (MappingSpecKeepaliveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecKeepalive)(nil)).Elem()
}

func (i MappingSpecKeepaliveArgs) ToMappingSpecKeepaliveOutput() MappingSpecKeepaliveOutput {
	return i.ToMappingSpecKeepaliveOutputWithContext(context.Background())
}

func (i MappingSpecKeepaliveArgs) ToMappingSpecKeepaliveOutputWithContext(ctx context.Context) MappingSpecKeepaliveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecKeepaliveOutput)
}

func (i MappingSpecKeepaliveArgs) ToMappingSpecKeepalivePtrOutput() MappingSpecKeepalivePtrOutput {
	return i.ToMappingSpecKeepalivePtrOutputWithContext(context.Background())
}

func (i MappingSpecKeepaliveArgs) ToMappingSpecKeepalivePtrOutputWithContext(ctx context.Context) MappingSpecKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecKeepaliveOutput).ToMappingSpecKeepalivePtrOutputWithContext(ctx)
}

// MappingSpecKeepalivePtrInput is an input type that accepts MappingSpecKeepaliveArgs, MappingSpecKeepalivePtr and MappingSpecKeepalivePtrOutput values.
// You can construct a concrete instance of `MappingSpecKeepalivePtrInput` via:
//
//          MappingSpecKeepaliveArgs{...}
//
//  or:
//
//          nil
type MappingSpecKeepalivePtrInput interface {
	pulumi.Input

	ToMappingSpecKeepalivePtrOutput() MappingSpecKeepalivePtrOutput
	ToMappingSpecKeepalivePtrOutputWithContext(context.Context) MappingSpecKeepalivePtrOutput
}

type mappingSpecKeepalivePtrType MappingSpecKeepaliveArgs

func MappingSpecKeepalivePtr(v *MappingSpecKeepaliveArgs) MappingSpecKeepalivePtrInput {
	return (*mappingSpecKeepalivePtrType)(v)
}

func (*mappingSpecKeepalivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecKeepalive)(nil)).Elem()
}

func (i *mappingSpecKeepalivePtrType) ToMappingSpecKeepalivePtrOutput() MappingSpecKeepalivePtrOutput {
	return i.ToMappingSpecKeepalivePtrOutputWithContext(context.Background())
}

func (i *mappingSpecKeepalivePtrType) ToMappingSpecKeepalivePtrOutputWithContext(ctx context.Context) MappingSpecKeepalivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecKeepalivePtrOutput)
}

type MappingSpecKeepaliveOutput struct{ *pulumi.OutputState }

func (MappingSpecKeepaliveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecKeepalive)(nil)).Elem()
}

func (o MappingSpecKeepaliveOutput) ToMappingSpecKeepaliveOutput() MappingSpecKeepaliveOutput {
	return o
}

func (o MappingSpecKeepaliveOutput) ToMappingSpecKeepaliveOutputWithContext(ctx context.Context) MappingSpecKeepaliveOutput {
	return o
}

func (o MappingSpecKeepaliveOutput) ToMappingSpecKeepalivePtrOutput() MappingSpecKeepalivePtrOutput {
	return o.ToMappingSpecKeepalivePtrOutputWithContext(context.Background())
}

func (o MappingSpecKeepaliveOutput) ToMappingSpecKeepalivePtrOutputWithContext(ctx context.Context) MappingSpecKeepalivePtrOutput {
	return o.ApplyT(func(v MappingSpecKeepalive) *MappingSpecKeepalive {
		return &v
	}).(MappingSpecKeepalivePtrOutput)
}
func (o MappingSpecKeepaliveOutput) Idle_time() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecKeepalive) *int { return v.Idle_time }).(pulumi.IntPtrOutput)
}

func (o MappingSpecKeepaliveOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecKeepalive) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o MappingSpecKeepaliveOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecKeepalive) *int { return v.Probes }).(pulumi.IntPtrOutput)
}

type MappingSpecKeepalivePtrOutput struct{ *pulumi.OutputState }

func (MappingSpecKeepalivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecKeepalive)(nil)).Elem()
}

func (o MappingSpecKeepalivePtrOutput) ToMappingSpecKeepalivePtrOutput() MappingSpecKeepalivePtrOutput {
	return o
}

func (o MappingSpecKeepalivePtrOutput) ToMappingSpecKeepalivePtrOutputWithContext(ctx context.Context) MappingSpecKeepalivePtrOutput {
	return o
}

func (o MappingSpecKeepalivePtrOutput) Elem() MappingSpecKeepaliveOutput {
	return o.ApplyT(func(v *MappingSpecKeepalive) MappingSpecKeepalive { return *v }).(MappingSpecKeepaliveOutput)
}

func (o MappingSpecKeepalivePtrOutput) Idle_time() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpecKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Idle_time
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecKeepalivePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpecKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecKeepalivePtrOutput) Probes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpecKeepalive) *int {
		if v == nil {
			return nil
		}
		return v.Probes
	}).(pulumi.IntPtrOutput)
}

// A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.
type MappingSpecLabels struct {
}

// MappingSpecLabelsInput is an input type that accepts MappingSpecLabelsArgs and MappingSpecLabelsOutput values.
// You can construct a concrete instance of `MappingSpecLabelsInput` via:
//
//          MappingSpecLabelsArgs{...}
type MappingSpecLabelsInput interface {
	pulumi.Input

	ToMappingSpecLabelsOutput() MappingSpecLabelsOutput
	ToMappingSpecLabelsOutputWithContext(context.Context) MappingSpecLabelsOutput
}

// A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.
type MappingSpecLabelsArgs struct {
}

func (MappingSpecLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecLabels)(nil)).Elem()
}

func (i MappingSpecLabelsArgs) ToMappingSpecLabelsOutput() MappingSpecLabelsOutput {
	return i.ToMappingSpecLabelsOutputWithContext(context.Background())
}

func (i MappingSpecLabelsArgs) ToMappingSpecLabelsOutputWithContext(ctx context.Context) MappingSpecLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecLabelsOutput)
}

// A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.
type MappingSpecLabelsOutput struct{ *pulumi.OutputState }

func (MappingSpecLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecLabels)(nil)).Elem()
}

func (o MappingSpecLabelsOutput) ToMappingSpecLabelsOutput() MappingSpecLabelsOutput {
	return o
}

func (o MappingSpecLabelsOutput) ToMappingSpecLabelsOutputWithContext(ctx context.Context) MappingSpecLabelsOutput {
	return o
}

type MappingSpecLoad_balancer struct {
	Cookie    *MappingSpecLoad_balancerCookie `pulumi:"cookie"`
	Header    *string                         `pulumi:"header"`
	Policy    string                          `pulumi:"policy"`
	Source_ip *bool                           `pulumi:"source_ip"`
}

// MappingSpecLoad_balancerInput is an input type that accepts MappingSpecLoad_balancerArgs and MappingSpecLoad_balancerOutput values.
// You can construct a concrete instance of `MappingSpecLoad_balancerInput` via:
//
//          MappingSpecLoad_balancerArgs{...}
type MappingSpecLoad_balancerInput interface {
	pulumi.Input

	ToMappingSpecLoad_balancerOutput() MappingSpecLoad_balancerOutput
	ToMappingSpecLoad_balancerOutputWithContext(context.Context) MappingSpecLoad_balancerOutput
}

type MappingSpecLoad_balancerArgs struct {
	Cookie    MappingSpecLoad_balancerCookiePtrInput `pulumi:"cookie"`
	Header    pulumi.StringPtrInput                  `pulumi:"header"`
	Policy    pulumi.StringInput                     `pulumi:"policy"`
	Source_ip pulumi.BoolPtrInput                    `pulumi:"source_ip"`
}

func (MappingSpecLoad_balancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecLoad_balancer)(nil)).Elem()
}

func (i MappingSpecLoad_balancerArgs) ToMappingSpecLoad_balancerOutput() MappingSpecLoad_balancerOutput {
	return i.ToMappingSpecLoad_balancerOutputWithContext(context.Background())
}

func (i MappingSpecLoad_balancerArgs) ToMappingSpecLoad_balancerOutputWithContext(ctx context.Context) MappingSpecLoad_balancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecLoad_balancerOutput)
}

func (i MappingSpecLoad_balancerArgs) ToMappingSpecLoad_balancerPtrOutput() MappingSpecLoad_balancerPtrOutput {
	return i.ToMappingSpecLoad_balancerPtrOutputWithContext(context.Background())
}

func (i MappingSpecLoad_balancerArgs) ToMappingSpecLoad_balancerPtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecLoad_balancerOutput).ToMappingSpecLoad_balancerPtrOutputWithContext(ctx)
}

// MappingSpecLoad_balancerPtrInput is an input type that accepts MappingSpecLoad_balancerArgs, MappingSpecLoad_balancerPtr and MappingSpecLoad_balancerPtrOutput values.
// You can construct a concrete instance of `MappingSpecLoad_balancerPtrInput` via:
//
//          MappingSpecLoad_balancerArgs{...}
//
//  or:
//
//          nil
type MappingSpecLoad_balancerPtrInput interface {
	pulumi.Input

	ToMappingSpecLoad_balancerPtrOutput() MappingSpecLoad_balancerPtrOutput
	ToMappingSpecLoad_balancerPtrOutputWithContext(context.Context) MappingSpecLoad_balancerPtrOutput
}

type mappingSpecLoad_balancerPtrType MappingSpecLoad_balancerArgs

func MappingSpecLoad_balancerPtr(v *MappingSpecLoad_balancerArgs) MappingSpecLoad_balancerPtrInput {
	return (*mappingSpecLoad_balancerPtrType)(v)
}

func (*mappingSpecLoad_balancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecLoad_balancer)(nil)).Elem()
}

func (i *mappingSpecLoad_balancerPtrType) ToMappingSpecLoad_balancerPtrOutput() MappingSpecLoad_balancerPtrOutput {
	return i.ToMappingSpecLoad_balancerPtrOutputWithContext(context.Background())
}

func (i *mappingSpecLoad_balancerPtrType) ToMappingSpecLoad_balancerPtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecLoad_balancerPtrOutput)
}

type MappingSpecLoad_balancerOutput struct{ *pulumi.OutputState }

func (MappingSpecLoad_balancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecLoad_balancer)(nil)).Elem()
}

func (o MappingSpecLoad_balancerOutput) ToMappingSpecLoad_balancerOutput() MappingSpecLoad_balancerOutput {
	return o
}

func (o MappingSpecLoad_balancerOutput) ToMappingSpecLoad_balancerOutputWithContext(ctx context.Context) MappingSpecLoad_balancerOutput {
	return o
}

func (o MappingSpecLoad_balancerOutput) ToMappingSpecLoad_balancerPtrOutput() MappingSpecLoad_balancerPtrOutput {
	return o.ToMappingSpecLoad_balancerPtrOutputWithContext(context.Background())
}

func (o MappingSpecLoad_balancerOutput) ToMappingSpecLoad_balancerPtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerPtrOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancer) *MappingSpecLoad_balancer {
		return &v
	}).(MappingSpecLoad_balancerPtrOutput)
}
func (o MappingSpecLoad_balancerOutput) Cookie() MappingSpecLoad_balancerCookiePtrOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancer) *MappingSpecLoad_balancerCookie { return v.Cookie }).(MappingSpecLoad_balancerCookiePtrOutput)
}

func (o MappingSpecLoad_balancerOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancer) *string { return v.Header }).(pulumi.StringPtrOutput)
}

func (o MappingSpecLoad_balancerOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancer) string { return v.Policy }).(pulumi.StringOutput)
}

func (o MappingSpecLoad_balancerOutput) Source_ip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancer) *bool { return v.Source_ip }).(pulumi.BoolPtrOutput)
}

type MappingSpecLoad_balancerPtrOutput struct{ *pulumi.OutputState }

func (MappingSpecLoad_balancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecLoad_balancer)(nil)).Elem()
}

func (o MappingSpecLoad_balancerPtrOutput) ToMappingSpecLoad_balancerPtrOutput() MappingSpecLoad_balancerPtrOutput {
	return o
}

func (o MappingSpecLoad_balancerPtrOutput) ToMappingSpecLoad_balancerPtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerPtrOutput {
	return o
}

func (o MappingSpecLoad_balancerPtrOutput) Elem() MappingSpecLoad_balancerOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancer) MappingSpecLoad_balancer { return *v }).(MappingSpecLoad_balancerOutput)
}

func (o MappingSpecLoad_balancerPtrOutput) Cookie() MappingSpecLoad_balancerCookiePtrOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancer) *MappingSpecLoad_balancerCookie {
		if v == nil {
			return nil
		}
		return v.Cookie
	}).(MappingSpecLoad_balancerCookiePtrOutput)
}

func (o MappingSpecLoad_balancerPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancer) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecLoad_balancerPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancer) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecLoad_balancerPtrOutput) Source_ip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancer) *bool {
		if v == nil {
			return nil
		}
		return v.Source_ip
	}).(pulumi.BoolPtrOutput)
}

type MappingSpecLoad_balancerCookie struct {
	Name string  `pulumi:"name"`
	Path *string `pulumi:"path"`
	Ttl  *string `pulumi:"ttl"`
}

// MappingSpecLoad_balancerCookieInput is an input type that accepts MappingSpecLoad_balancerCookieArgs and MappingSpecLoad_balancerCookieOutput values.
// You can construct a concrete instance of `MappingSpecLoad_balancerCookieInput` via:
//
//          MappingSpecLoad_balancerCookieArgs{...}
type MappingSpecLoad_balancerCookieInput interface {
	pulumi.Input

	ToMappingSpecLoad_balancerCookieOutput() MappingSpecLoad_balancerCookieOutput
	ToMappingSpecLoad_balancerCookieOutputWithContext(context.Context) MappingSpecLoad_balancerCookieOutput
}

type MappingSpecLoad_balancerCookieArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	Path pulumi.StringPtrInput `pulumi:"path"`
	Ttl  pulumi.StringPtrInput `pulumi:"ttl"`
}

func (MappingSpecLoad_balancerCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecLoad_balancerCookie)(nil)).Elem()
}

func (i MappingSpecLoad_balancerCookieArgs) ToMappingSpecLoad_balancerCookieOutput() MappingSpecLoad_balancerCookieOutput {
	return i.ToMappingSpecLoad_balancerCookieOutputWithContext(context.Background())
}

func (i MappingSpecLoad_balancerCookieArgs) ToMappingSpecLoad_balancerCookieOutputWithContext(ctx context.Context) MappingSpecLoad_balancerCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecLoad_balancerCookieOutput)
}

func (i MappingSpecLoad_balancerCookieArgs) ToMappingSpecLoad_balancerCookiePtrOutput() MappingSpecLoad_balancerCookiePtrOutput {
	return i.ToMappingSpecLoad_balancerCookiePtrOutputWithContext(context.Background())
}

func (i MappingSpecLoad_balancerCookieArgs) ToMappingSpecLoad_balancerCookiePtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecLoad_balancerCookieOutput).ToMappingSpecLoad_balancerCookiePtrOutputWithContext(ctx)
}

// MappingSpecLoad_balancerCookiePtrInput is an input type that accepts MappingSpecLoad_balancerCookieArgs, MappingSpecLoad_balancerCookiePtr and MappingSpecLoad_balancerCookiePtrOutput values.
// You can construct a concrete instance of `MappingSpecLoad_balancerCookiePtrInput` via:
//
//          MappingSpecLoad_balancerCookieArgs{...}
//
//  or:
//
//          nil
type MappingSpecLoad_balancerCookiePtrInput interface {
	pulumi.Input

	ToMappingSpecLoad_balancerCookiePtrOutput() MappingSpecLoad_balancerCookiePtrOutput
	ToMappingSpecLoad_balancerCookiePtrOutputWithContext(context.Context) MappingSpecLoad_balancerCookiePtrOutput
}

type mappingSpecLoad_balancerCookiePtrType MappingSpecLoad_balancerCookieArgs

func MappingSpecLoad_balancerCookiePtr(v *MappingSpecLoad_balancerCookieArgs) MappingSpecLoad_balancerCookiePtrInput {
	return (*mappingSpecLoad_balancerCookiePtrType)(v)
}

func (*mappingSpecLoad_balancerCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecLoad_balancerCookie)(nil)).Elem()
}

func (i *mappingSpecLoad_balancerCookiePtrType) ToMappingSpecLoad_balancerCookiePtrOutput() MappingSpecLoad_balancerCookiePtrOutput {
	return i.ToMappingSpecLoad_balancerCookiePtrOutputWithContext(context.Background())
}

func (i *mappingSpecLoad_balancerCookiePtrType) ToMappingSpecLoad_balancerCookiePtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecLoad_balancerCookiePtrOutput)
}

type MappingSpecLoad_balancerCookieOutput struct{ *pulumi.OutputState }

func (MappingSpecLoad_balancerCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecLoad_balancerCookie)(nil)).Elem()
}

func (o MappingSpecLoad_balancerCookieOutput) ToMappingSpecLoad_balancerCookieOutput() MappingSpecLoad_balancerCookieOutput {
	return o
}

func (o MappingSpecLoad_balancerCookieOutput) ToMappingSpecLoad_balancerCookieOutputWithContext(ctx context.Context) MappingSpecLoad_balancerCookieOutput {
	return o
}

func (o MappingSpecLoad_balancerCookieOutput) ToMappingSpecLoad_balancerCookiePtrOutput() MappingSpecLoad_balancerCookiePtrOutput {
	return o.ToMappingSpecLoad_balancerCookiePtrOutputWithContext(context.Background())
}

func (o MappingSpecLoad_balancerCookieOutput) ToMappingSpecLoad_balancerCookiePtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerCookiePtrOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancerCookie) *MappingSpecLoad_balancerCookie {
		return &v
	}).(MappingSpecLoad_balancerCookiePtrOutput)
}
func (o MappingSpecLoad_balancerCookieOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancerCookie) string { return v.Name }).(pulumi.StringOutput)
}

func (o MappingSpecLoad_balancerCookieOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancerCookie) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o MappingSpecLoad_balancerCookieOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecLoad_balancerCookie) *string { return v.Ttl }).(pulumi.StringPtrOutput)
}

type MappingSpecLoad_balancerCookiePtrOutput struct{ *pulumi.OutputState }

func (MappingSpecLoad_balancerCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecLoad_balancerCookie)(nil)).Elem()
}

func (o MappingSpecLoad_balancerCookiePtrOutput) ToMappingSpecLoad_balancerCookiePtrOutput() MappingSpecLoad_balancerCookiePtrOutput {
	return o
}

func (o MappingSpecLoad_balancerCookiePtrOutput) ToMappingSpecLoad_balancerCookiePtrOutputWithContext(ctx context.Context) MappingSpecLoad_balancerCookiePtrOutput {
	return o
}

func (o MappingSpecLoad_balancerCookiePtrOutput) Elem() MappingSpecLoad_balancerCookieOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancerCookie) MappingSpecLoad_balancerCookie { return *v }).(MappingSpecLoad_balancerCookieOutput)
}

func (o MappingSpecLoad_balancerCookiePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancerCookie) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecLoad_balancerCookiePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancerCookie) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecLoad_balancerCookiePtrOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecLoad_balancerCookie) *string {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.StringPtrOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type MappingSpecModules struct {
}

// MappingSpecModulesInput is an input type that accepts MappingSpecModulesArgs and MappingSpecModulesOutput values.
// You can construct a concrete instance of `MappingSpecModulesInput` via:
//
//          MappingSpecModulesArgs{...}
type MappingSpecModulesInput interface {
	pulumi.Input

	ToMappingSpecModulesOutput() MappingSpecModulesOutput
	ToMappingSpecModulesOutputWithContext(context.Context) MappingSpecModulesOutput
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type MappingSpecModulesArgs struct {
}

func (MappingSpecModulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecModules)(nil)).Elem()
}

func (i MappingSpecModulesArgs) ToMappingSpecModulesOutput() MappingSpecModulesOutput {
	return i.ToMappingSpecModulesOutputWithContext(context.Background())
}

func (i MappingSpecModulesArgs) ToMappingSpecModulesOutputWithContext(ctx context.Context) MappingSpecModulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecModulesOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type MappingSpecModulesOutput struct{ *pulumi.OutputState }

func (MappingSpecModulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecModules)(nil)).Elem()
}

func (o MappingSpecModulesOutput) ToMappingSpecModulesOutput() MappingSpecModulesOutput {
	return o
}

func (o MappingSpecModulesOutput) ToMappingSpecModulesOutputWithContext(ctx context.Context) MappingSpecModulesOutput {
	return o
}

type MappingSpecQuery_parameters struct {
}

// MappingSpecQuery_parametersInput is an input type that accepts MappingSpecQuery_parametersArgs and MappingSpecQuery_parametersOutput values.
// You can construct a concrete instance of `MappingSpecQuery_parametersInput` via:
//
//          MappingSpecQuery_parametersArgs{...}
type MappingSpecQuery_parametersInput interface {
	pulumi.Input

	ToMappingSpecQuery_parametersOutput() MappingSpecQuery_parametersOutput
	ToMappingSpecQuery_parametersOutputWithContext(context.Context) MappingSpecQuery_parametersOutput
}

type MappingSpecQuery_parametersArgs struct {
}

func (MappingSpecQuery_parametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecQuery_parameters)(nil)).Elem()
}

func (i MappingSpecQuery_parametersArgs) ToMappingSpecQuery_parametersOutput() MappingSpecQuery_parametersOutput {
	return i.ToMappingSpecQuery_parametersOutputWithContext(context.Background())
}

func (i MappingSpecQuery_parametersArgs) ToMappingSpecQuery_parametersOutputWithContext(ctx context.Context) MappingSpecQuery_parametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecQuery_parametersOutput)
}

type MappingSpecQuery_parametersOutput struct{ *pulumi.OutputState }

func (MappingSpecQuery_parametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecQuery_parameters)(nil)).Elem()
}

func (o MappingSpecQuery_parametersOutput) ToMappingSpecQuery_parametersOutput() MappingSpecQuery_parametersOutput {
	return o
}

func (o MappingSpecQuery_parametersOutput) ToMappingSpecQuery_parametersOutputWithContext(ctx context.Context) MappingSpecQuery_parametersOutput {
	return o
}

type MappingSpecRegex_headers struct {
}

// MappingSpecRegex_headersInput is an input type that accepts MappingSpecRegex_headersArgs and MappingSpecRegex_headersOutput values.
// You can construct a concrete instance of `MappingSpecRegex_headersInput` via:
//
//          MappingSpecRegex_headersArgs{...}
type MappingSpecRegex_headersInput interface {
	pulumi.Input

	ToMappingSpecRegex_headersOutput() MappingSpecRegex_headersOutput
	ToMappingSpecRegex_headersOutputWithContext(context.Context) MappingSpecRegex_headersOutput
}

type MappingSpecRegex_headersArgs struct {
}

func (MappingSpecRegex_headersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_headers)(nil)).Elem()
}

func (i MappingSpecRegex_headersArgs) ToMappingSpecRegex_headersOutput() MappingSpecRegex_headersOutput {
	return i.ToMappingSpecRegex_headersOutputWithContext(context.Background())
}

func (i MappingSpecRegex_headersArgs) ToMappingSpecRegex_headersOutputWithContext(ctx context.Context) MappingSpecRegex_headersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecRegex_headersOutput)
}

type MappingSpecRegex_headersOutput struct{ *pulumi.OutputState }

func (MappingSpecRegex_headersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_headers)(nil)).Elem()
}

func (o MappingSpecRegex_headersOutput) ToMappingSpecRegex_headersOutput() MappingSpecRegex_headersOutput {
	return o
}

func (o MappingSpecRegex_headersOutput) ToMappingSpecRegex_headersOutputWithContext(ctx context.Context) MappingSpecRegex_headersOutput {
	return o
}

type MappingSpecRegex_query_parameters struct {
}

// MappingSpecRegex_query_parametersInput is an input type that accepts MappingSpecRegex_query_parametersArgs and MappingSpecRegex_query_parametersOutput values.
// You can construct a concrete instance of `MappingSpecRegex_query_parametersInput` via:
//
//          MappingSpecRegex_query_parametersArgs{...}
type MappingSpecRegex_query_parametersInput interface {
	pulumi.Input

	ToMappingSpecRegex_query_parametersOutput() MappingSpecRegex_query_parametersOutput
	ToMappingSpecRegex_query_parametersOutputWithContext(context.Context) MappingSpecRegex_query_parametersOutput
}

type MappingSpecRegex_query_parametersArgs struct {
}

func (MappingSpecRegex_query_parametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_query_parameters)(nil)).Elem()
}

func (i MappingSpecRegex_query_parametersArgs) ToMappingSpecRegex_query_parametersOutput() MappingSpecRegex_query_parametersOutput {
	return i.ToMappingSpecRegex_query_parametersOutputWithContext(context.Background())
}

func (i MappingSpecRegex_query_parametersArgs) ToMappingSpecRegex_query_parametersOutputWithContext(ctx context.Context) MappingSpecRegex_query_parametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecRegex_query_parametersOutput)
}

type MappingSpecRegex_query_parametersOutput struct{ *pulumi.OutputState }

func (MappingSpecRegex_query_parametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_query_parameters)(nil)).Elem()
}

func (o MappingSpecRegex_query_parametersOutput) ToMappingSpecRegex_query_parametersOutput() MappingSpecRegex_query_parametersOutput {
	return o
}

func (o MappingSpecRegex_query_parametersOutput) ToMappingSpecRegex_query_parametersOutputWithContext(ctx context.Context) MappingSpecRegex_query_parametersOutput {
	return o
}

// Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
type MappingSpecRegex_redirect struct {
}

// MappingSpecRegex_redirectInput is an input type that accepts MappingSpecRegex_redirectArgs and MappingSpecRegex_redirectOutput values.
// You can construct a concrete instance of `MappingSpecRegex_redirectInput` via:
//
//          MappingSpecRegex_redirectArgs{...}
type MappingSpecRegex_redirectInput interface {
	pulumi.Input

	ToMappingSpecRegex_redirectOutput() MappingSpecRegex_redirectOutput
	ToMappingSpecRegex_redirectOutputWithContext(context.Context) MappingSpecRegex_redirectOutput
}

// Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
type MappingSpecRegex_redirectArgs struct {
}

func (MappingSpecRegex_redirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_redirect)(nil)).Elem()
}

func (i MappingSpecRegex_redirectArgs) ToMappingSpecRegex_redirectOutput() MappingSpecRegex_redirectOutput {
	return i.ToMappingSpecRegex_redirectOutputWithContext(context.Background())
}

func (i MappingSpecRegex_redirectArgs) ToMappingSpecRegex_redirectOutputWithContext(ctx context.Context) MappingSpecRegex_redirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecRegex_redirectOutput)
}

// Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.
type MappingSpecRegex_redirectOutput struct{ *pulumi.OutputState }

func (MappingSpecRegex_redirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_redirect)(nil)).Elem()
}

func (o MappingSpecRegex_redirectOutput) ToMappingSpecRegex_redirectOutput() MappingSpecRegex_redirectOutput {
	return o
}

func (o MappingSpecRegex_redirectOutput) ToMappingSpecRegex_redirectOutputWithContext(ctx context.Context) MappingSpecRegex_redirectOutput {
	return o
}

type MappingSpecRegex_rewrite struct {
}

// MappingSpecRegex_rewriteInput is an input type that accepts MappingSpecRegex_rewriteArgs and MappingSpecRegex_rewriteOutput values.
// You can construct a concrete instance of `MappingSpecRegex_rewriteInput` via:
//
//          MappingSpecRegex_rewriteArgs{...}
type MappingSpecRegex_rewriteInput interface {
	pulumi.Input

	ToMappingSpecRegex_rewriteOutput() MappingSpecRegex_rewriteOutput
	ToMappingSpecRegex_rewriteOutputWithContext(context.Context) MappingSpecRegex_rewriteOutput
}

type MappingSpecRegex_rewriteArgs struct {
}

func (MappingSpecRegex_rewriteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_rewrite)(nil)).Elem()
}

func (i MappingSpecRegex_rewriteArgs) ToMappingSpecRegex_rewriteOutput() MappingSpecRegex_rewriteOutput {
	return i.ToMappingSpecRegex_rewriteOutputWithContext(context.Background())
}

func (i MappingSpecRegex_rewriteArgs) ToMappingSpecRegex_rewriteOutputWithContext(ctx context.Context) MappingSpecRegex_rewriteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecRegex_rewriteOutput)
}

type MappingSpecRegex_rewriteOutput struct{ *pulumi.OutputState }

func (MappingSpecRegex_rewriteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRegex_rewrite)(nil)).Elem()
}

func (o MappingSpecRegex_rewriteOutput) ToMappingSpecRegex_rewriteOutput() MappingSpecRegex_rewriteOutput {
	return o
}

func (o MappingSpecRegex_rewriteOutput) ToMappingSpecRegex_rewriteOutputWithContext(ctx context.Context) MappingSpecRegex_rewriteOutput {
	return o
}

type MappingSpecRetry_policy struct {
	Num_retries     *int    `pulumi:"num_retries"`
	Per_try_timeout *string `pulumi:"per_try_timeout"`
	Retry_on        *string `pulumi:"retry_on"`
}

// MappingSpecRetry_policyInput is an input type that accepts MappingSpecRetry_policyArgs and MappingSpecRetry_policyOutput values.
// You can construct a concrete instance of `MappingSpecRetry_policyInput` via:
//
//          MappingSpecRetry_policyArgs{...}
type MappingSpecRetry_policyInput interface {
	pulumi.Input

	ToMappingSpecRetry_policyOutput() MappingSpecRetry_policyOutput
	ToMappingSpecRetry_policyOutputWithContext(context.Context) MappingSpecRetry_policyOutput
}

type MappingSpecRetry_policyArgs struct {
	Num_retries     pulumi.IntPtrInput    `pulumi:"num_retries"`
	Per_try_timeout pulumi.StringPtrInput `pulumi:"per_try_timeout"`
	Retry_on        pulumi.StringPtrInput `pulumi:"retry_on"`
}

func (MappingSpecRetry_policyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRetry_policy)(nil)).Elem()
}

func (i MappingSpecRetry_policyArgs) ToMappingSpecRetry_policyOutput() MappingSpecRetry_policyOutput {
	return i.ToMappingSpecRetry_policyOutputWithContext(context.Background())
}

func (i MappingSpecRetry_policyArgs) ToMappingSpecRetry_policyOutputWithContext(ctx context.Context) MappingSpecRetry_policyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecRetry_policyOutput)
}

func (i MappingSpecRetry_policyArgs) ToMappingSpecRetry_policyPtrOutput() MappingSpecRetry_policyPtrOutput {
	return i.ToMappingSpecRetry_policyPtrOutputWithContext(context.Background())
}

func (i MappingSpecRetry_policyArgs) ToMappingSpecRetry_policyPtrOutputWithContext(ctx context.Context) MappingSpecRetry_policyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecRetry_policyOutput).ToMappingSpecRetry_policyPtrOutputWithContext(ctx)
}

// MappingSpecRetry_policyPtrInput is an input type that accepts MappingSpecRetry_policyArgs, MappingSpecRetry_policyPtr and MappingSpecRetry_policyPtrOutput values.
// You can construct a concrete instance of `MappingSpecRetry_policyPtrInput` via:
//
//          MappingSpecRetry_policyArgs{...}
//
//  or:
//
//          nil
type MappingSpecRetry_policyPtrInput interface {
	pulumi.Input

	ToMappingSpecRetry_policyPtrOutput() MappingSpecRetry_policyPtrOutput
	ToMappingSpecRetry_policyPtrOutputWithContext(context.Context) MappingSpecRetry_policyPtrOutput
}

type mappingSpecRetry_policyPtrType MappingSpecRetry_policyArgs

func MappingSpecRetry_policyPtr(v *MappingSpecRetry_policyArgs) MappingSpecRetry_policyPtrInput {
	return (*mappingSpecRetry_policyPtrType)(v)
}

func (*mappingSpecRetry_policyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecRetry_policy)(nil)).Elem()
}

func (i *mappingSpecRetry_policyPtrType) ToMappingSpecRetry_policyPtrOutput() MappingSpecRetry_policyPtrOutput {
	return i.ToMappingSpecRetry_policyPtrOutputWithContext(context.Background())
}

func (i *mappingSpecRetry_policyPtrType) ToMappingSpecRetry_policyPtrOutputWithContext(ctx context.Context) MappingSpecRetry_policyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingSpecRetry_policyPtrOutput)
}

type MappingSpecRetry_policyOutput struct{ *pulumi.OutputState }

func (MappingSpecRetry_policyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingSpecRetry_policy)(nil)).Elem()
}

func (o MappingSpecRetry_policyOutput) ToMappingSpecRetry_policyOutput() MappingSpecRetry_policyOutput {
	return o
}

func (o MappingSpecRetry_policyOutput) ToMappingSpecRetry_policyOutputWithContext(ctx context.Context) MappingSpecRetry_policyOutput {
	return o
}

func (o MappingSpecRetry_policyOutput) ToMappingSpecRetry_policyPtrOutput() MappingSpecRetry_policyPtrOutput {
	return o.ToMappingSpecRetry_policyPtrOutputWithContext(context.Background())
}

func (o MappingSpecRetry_policyOutput) ToMappingSpecRetry_policyPtrOutputWithContext(ctx context.Context) MappingSpecRetry_policyPtrOutput {
	return o.ApplyT(func(v MappingSpecRetry_policy) *MappingSpecRetry_policy {
		return &v
	}).(MappingSpecRetry_policyPtrOutput)
}
func (o MappingSpecRetry_policyOutput) Num_retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MappingSpecRetry_policy) *int { return v.Num_retries }).(pulumi.IntPtrOutput)
}

func (o MappingSpecRetry_policyOutput) Per_try_timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecRetry_policy) *string { return v.Per_try_timeout }).(pulumi.StringPtrOutput)
}

func (o MappingSpecRetry_policyOutput) Retry_on() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingSpecRetry_policy) *string { return v.Retry_on }).(pulumi.StringPtrOutput)
}

type MappingSpecRetry_policyPtrOutput struct{ *pulumi.OutputState }

func (MappingSpecRetry_policyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingSpecRetry_policy)(nil)).Elem()
}

func (o MappingSpecRetry_policyPtrOutput) ToMappingSpecRetry_policyPtrOutput() MappingSpecRetry_policyPtrOutput {
	return o
}

func (o MappingSpecRetry_policyPtrOutput) ToMappingSpecRetry_policyPtrOutputWithContext(ctx context.Context) MappingSpecRetry_policyPtrOutput {
	return o
}

func (o MappingSpecRetry_policyPtrOutput) Elem() MappingSpecRetry_policyOutput {
	return o.ApplyT(func(v *MappingSpecRetry_policy) MappingSpecRetry_policy { return *v }).(MappingSpecRetry_policyOutput)
}

func (o MappingSpecRetry_policyPtrOutput) Num_retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MappingSpecRetry_policy) *int {
		if v == nil {
			return nil
		}
		return v.Num_retries
	}).(pulumi.IntPtrOutput)
}

func (o MappingSpecRetry_policyPtrOutput) Per_try_timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecRetry_policy) *string {
		if v == nil {
			return nil
		}
		return v.Per_try_timeout
	}).(pulumi.StringPtrOutput)
}

func (o MappingSpecRetry_policyPtrOutput) Retry_on() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingSpecRetry_policy) *string {
		if v == nil {
			return nil
		}
		return v.Retry_on
	}).(pulumi.StringPtrOutput)
}

// MappingStatus defines the observed state of Mapping
type MappingStatus struct {
	Reason *string `pulumi:"reason"`
	State  *string `pulumi:"state"`
}

// MappingStatusInput is an input type that accepts MappingStatusArgs and MappingStatusOutput values.
// You can construct a concrete instance of `MappingStatusInput` via:
//
//          MappingStatusArgs{...}
type MappingStatusInput interface {
	pulumi.Input

	ToMappingStatusOutput() MappingStatusOutput
	ToMappingStatusOutputWithContext(context.Context) MappingStatusOutput
}

// MappingStatus defines the observed state of Mapping
type MappingStatusArgs struct {
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	State  pulumi.StringPtrInput `pulumi:"state"`
}

func (MappingStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingStatus)(nil)).Elem()
}

func (i MappingStatusArgs) ToMappingStatusOutput() MappingStatusOutput {
	return i.ToMappingStatusOutputWithContext(context.Background())
}

func (i MappingStatusArgs) ToMappingStatusOutputWithContext(ctx context.Context) MappingStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingStatusOutput)
}

func (i MappingStatusArgs) ToMappingStatusPtrOutput() MappingStatusPtrOutput {
	return i.ToMappingStatusPtrOutputWithContext(context.Background())
}

func (i MappingStatusArgs) ToMappingStatusPtrOutputWithContext(ctx context.Context) MappingStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingStatusOutput).ToMappingStatusPtrOutputWithContext(ctx)
}

// MappingStatusPtrInput is an input type that accepts MappingStatusArgs, MappingStatusPtr and MappingStatusPtrOutput values.
// You can construct a concrete instance of `MappingStatusPtrInput` via:
//
//          MappingStatusArgs{...}
//
//  or:
//
//          nil
type MappingStatusPtrInput interface {
	pulumi.Input

	ToMappingStatusPtrOutput() MappingStatusPtrOutput
	ToMappingStatusPtrOutputWithContext(context.Context) MappingStatusPtrOutput
}

type mappingStatusPtrType MappingStatusArgs

func MappingStatusPtr(v *MappingStatusArgs) MappingStatusPtrInput {
	return (*mappingStatusPtrType)(v)
}

func (*mappingStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingStatus)(nil)).Elem()
}

func (i *mappingStatusPtrType) ToMappingStatusPtrOutput() MappingStatusPtrOutput {
	return i.ToMappingStatusPtrOutputWithContext(context.Background())
}

func (i *mappingStatusPtrType) ToMappingStatusPtrOutputWithContext(ctx context.Context) MappingStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingStatusPtrOutput)
}

// MappingStatus defines the observed state of Mapping
type MappingStatusOutput struct{ *pulumi.OutputState }

func (MappingStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingStatus)(nil)).Elem()
}

func (o MappingStatusOutput) ToMappingStatusOutput() MappingStatusOutput {
	return o
}

func (o MappingStatusOutput) ToMappingStatusOutputWithContext(ctx context.Context) MappingStatusOutput {
	return o
}

func (o MappingStatusOutput) ToMappingStatusPtrOutput() MappingStatusPtrOutput {
	return o.ToMappingStatusPtrOutputWithContext(context.Background())
}

func (o MappingStatusOutput) ToMappingStatusPtrOutputWithContext(ctx context.Context) MappingStatusPtrOutput {
	return o.ApplyT(func(v MappingStatus) *MappingStatus {
		return &v
	}).(MappingStatusPtrOutput)
}
func (o MappingStatusOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingStatus) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o MappingStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MappingStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type MappingStatusPtrOutput struct{ *pulumi.OutputState }

func (MappingStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingStatus)(nil)).Elem()
}

func (o MappingStatusPtrOutput) ToMappingStatusPtrOutput() MappingStatusPtrOutput {
	return o
}

func (o MappingStatusPtrOutput) ToMappingStatusPtrOutputWithContext(ctx context.Context) MappingStatusPtrOutput {
	return o
}

func (o MappingStatusPtrOutput) Elem() MappingStatusOutput {
	return o.ApplyT(func(v *MappingStatus) MappingStatus { return *v }).(MappingStatusOutput)
}

func (o MappingStatusPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingStatus) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

func (o MappingStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are "ambassador" or "tls".
//  https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated
type ModuleType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	Spec       *ModuleSpec        `pulumi:"spec"`
}

// ModuleTypeInput is an input type that accepts ModuleTypeArgs and ModuleTypeOutput values.
// You can construct a concrete instance of `ModuleTypeInput` via:
//
//          ModuleTypeArgs{...}
type ModuleTypeInput interface {
	pulumi.Input

	ToModuleTypeOutput() ModuleTypeOutput
	ToModuleTypeOutputWithContext(context.Context) ModuleTypeOutput
}

// A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are "ambassador" or "tls".
//  https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated
type ModuleTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec       ModuleSpecPtrInput        `pulumi:"spec"`
}

func (ModuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleType)(nil)).Elem()
}

func (i ModuleTypeArgs) ToModuleTypeOutput() ModuleTypeOutput {
	return i.ToModuleTypeOutputWithContext(context.Background())
}

func (i ModuleTypeArgs) ToModuleTypeOutputWithContext(ctx context.Context) ModuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleTypeOutput)
}

// A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are "ambassador" or "tls".
//  https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated
type ModuleTypeOutput struct{ *pulumi.OutputState }

func (ModuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleType)(nil)).Elem()
}

func (o ModuleTypeOutput) ToModuleTypeOutput() ModuleTypeOutput {
	return o
}

func (o ModuleTypeOutput) ToModuleTypeOutputWithContext(ctx context.Context) ModuleTypeOutput {
	return o
}

func (o ModuleTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModuleType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ModuleTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ModuleType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ModuleTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v ModuleType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o ModuleTypeOutput) Spec() ModuleSpecPtrOutput {
	return o.ApplyT(func(v ModuleType) *ModuleSpec { return v.Spec }).(ModuleSpecPtrOutput)
}

type ModuleMetadata struct {
}

// ModuleMetadataInput is an input type that accepts ModuleMetadataArgs and ModuleMetadataOutput values.
// You can construct a concrete instance of `ModuleMetadataInput` via:
//
//          ModuleMetadataArgs{...}
type ModuleMetadataInput interface {
	pulumi.Input

	ToModuleMetadataOutput() ModuleMetadataOutput
	ToModuleMetadataOutputWithContext(context.Context) ModuleMetadataOutput
}

type ModuleMetadataArgs struct {
}

func (ModuleMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleMetadata)(nil)).Elem()
}

func (i ModuleMetadataArgs) ToModuleMetadataOutput() ModuleMetadataOutput {
	return i.ToModuleMetadataOutputWithContext(context.Background())
}

func (i ModuleMetadataArgs) ToModuleMetadataOutputWithContext(ctx context.Context) ModuleMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleMetadataOutput)
}

type ModuleMetadataOutput struct{ *pulumi.OutputState }

func (ModuleMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleMetadata)(nil)).Elem()
}

func (o ModuleMetadataOutput) ToModuleMetadataOutput() ModuleMetadataOutput {
	return o
}

func (o ModuleMetadataOutput) ToModuleMetadataOutputWithContext(ctx context.Context) ModuleMetadataOutput {
	return o
}

type ModuleSpec struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id interface{} `pulumi:"ambassador_id"`
	// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
	Config map[string]interface{} `pulumi:"config"`
}

// ModuleSpecInput is an input type that accepts ModuleSpecArgs and ModuleSpecOutput values.
// You can construct a concrete instance of `ModuleSpecInput` via:
//
//          ModuleSpecArgs{...}
type ModuleSpecInput interface {
	pulumi.Input

	ToModuleSpecOutput() ModuleSpecOutput
	ToModuleSpecOutputWithContext(context.Context) ModuleSpecOutput
}

type ModuleSpecArgs struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id pulumi.Input `pulumi:"ambassador_id"`
	// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
	Config pulumi.MapInput `pulumi:"config"`
}

func (ModuleSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleSpec)(nil)).Elem()
}

func (i ModuleSpecArgs) ToModuleSpecOutput() ModuleSpecOutput {
	return i.ToModuleSpecOutputWithContext(context.Background())
}

func (i ModuleSpecArgs) ToModuleSpecOutputWithContext(ctx context.Context) ModuleSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleSpecOutput)
}

func (i ModuleSpecArgs) ToModuleSpecPtrOutput() ModuleSpecPtrOutput {
	return i.ToModuleSpecPtrOutputWithContext(context.Background())
}

func (i ModuleSpecArgs) ToModuleSpecPtrOutputWithContext(ctx context.Context) ModuleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleSpecOutput).ToModuleSpecPtrOutputWithContext(ctx)
}

// ModuleSpecPtrInput is an input type that accepts ModuleSpecArgs, ModuleSpecPtr and ModuleSpecPtrOutput values.
// You can construct a concrete instance of `ModuleSpecPtrInput` via:
//
//          ModuleSpecArgs{...}
//
//  or:
//
//          nil
type ModuleSpecPtrInput interface {
	pulumi.Input

	ToModuleSpecPtrOutput() ModuleSpecPtrOutput
	ToModuleSpecPtrOutputWithContext(context.Context) ModuleSpecPtrOutput
}

type moduleSpecPtrType ModuleSpecArgs

func ModuleSpecPtr(v *ModuleSpecArgs) ModuleSpecPtrInput {
	return (*moduleSpecPtrType)(v)
}

func (*moduleSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ModuleSpec)(nil)).Elem()
}

func (i *moduleSpecPtrType) ToModuleSpecPtrOutput() ModuleSpecPtrOutput {
	return i.ToModuleSpecPtrOutputWithContext(context.Background())
}

func (i *moduleSpecPtrType) ToModuleSpecPtrOutputWithContext(ctx context.Context) ModuleSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleSpecPtrOutput)
}

type ModuleSpecOutput struct{ *pulumi.OutputState }

func (ModuleSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleSpec)(nil)).Elem()
}

func (o ModuleSpecOutput) ToModuleSpecOutput() ModuleSpecOutput {
	return o
}

func (o ModuleSpecOutput) ToModuleSpecOutputWithContext(ctx context.Context) ModuleSpecOutput {
	return o
}

func (o ModuleSpecOutput) ToModuleSpecPtrOutput() ModuleSpecPtrOutput {
	return o.ToModuleSpecPtrOutputWithContext(context.Background())
}

func (o ModuleSpecOutput) ToModuleSpecPtrOutputWithContext(ctx context.Context) ModuleSpecPtrOutput {
	return o.ApplyT(func(v ModuleSpec) *ModuleSpec {
		return &v
	}).(ModuleSpecPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o ModuleSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v ModuleSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
func (o ModuleSpecOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v ModuleSpec) map[string]interface{} { return v.Config }).(pulumi.MapOutput)
}

type ModuleSpecPtrOutput struct{ *pulumi.OutputState }

func (ModuleSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ModuleSpec)(nil)).Elem()
}

func (o ModuleSpecPtrOutput) ToModuleSpecPtrOutput() ModuleSpecPtrOutput {
	return o
}

func (o ModuleSpecPtrOutput) ToModuleSpecPtrOutputWithContext(ctx context.Context) ModuleSpecPtrOutput {
	return o
}

func (o ModuleSpecPtrOutput) Elem() ModuleSpecOutput {
	return o.ApplyT(func(v *ModuleSpec) ModuleSpec { return *v }).(ModuleSpecOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o ModuleSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *ModuleSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
func (o ModuleSpecPtrOutput) Config() pulumi.MapOutput {
	return o.ApplyT(func(v *ModuleSpec) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Config
	}).(pulumi.MapOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type ModuleSpecConfig struct {
}

// ModuleSpecConfigInput is an input type that accepts ModuleSpecConfigArgs and ModuleSpecConfigOutput values.
// You can construct a concrete instance of `ModuleSpecConfigInput` via:
//
//          ModuleSpecConfigArgs{...}
type ModuleSpecConfigInput interface {
	pulumi.Input

	ToModuleSpecConfigOutput() ModuleSpecConfigOutput
	ToModuleSpecConfigOutputWithContext(context.Context) ModuleSpecConfigOutput
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type ModuleSpecConfigArgs struct {
}

func (ModuleSpecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleSpecConfig)(nil)).Elem()
}

func (i ModuleSpecConfigArgs) ToModuleSpecConfigOutput() ModuleSpecConfigOutput {
	return i.ToModuleSpecConfigOutputWithContext(context.Background())
}

func (i ModuleSpecConfigArgs) ToModuleSpecConfigOutputWithContext(ctx context.Context) ModuleSpecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ModuleSpecConfigOutput)
}

// UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.
type ModuleSpecConfigOutput struct{ *pulumi.OutputState }

func (ModuleSpecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ModuleSpecConfig)(nil)).Elem()
}

func (o ModuleSpecConfigOutput) ToModuleSpecConfigOutput() ModuleSpecConfigOutput {
	return o
}

func (o ModuleSpecConfigOutput) ToModuleSpecConfigOutputWithContext(ctx context.Context) ModuleSpecConfigOutput {
	return o
}

// RateLimitService is the Schema for the ratelimitservices API
type RateLimitServiceType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// RateLimitServiceSpec defines the desired state of RateLimitService
	Spec *RateLimitServiceSpec `pulumi:"spec"`
}

// RateLimitServiceTypeInput is an input type that accepts RateLimitServiceTypeArgs and RateLimitServiceTypeOutput values.
// You can construct a concrete instance of `RateLimitServiceTypeInput` via:
//
//          RateLimitServiceTypeArgs{...}
type RateLimitServiceTypeInput interface {
	pulumi.Input

	ToRateLimitServiceTypeOutput() RateLimitServiceTypeOutput
	ToRateLimitServiceTypeOutputWithContext(context.Context) RateLimitServiceTypeOutput
}

// RateLimitService is the Schema for the ratelimitservices API
type RateLimitServiceTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// RateLimitServiceSpec defines the desired state of RateLimitService
	Spec RateLimitServiceSpecPtrInput `pulumi:"spec"`
}

func (RateLimitServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitServiceType)(nil)).Elem()
}

func (i RateLimitServiceTypeArgs) ToRateLimitServiceTypeOutput() RateLimitServiceTypeOutput {
	return i.ToRateLimitServiceTypeOutputWithContext(context.Background())
}

func (i RateLimitServiceTypeArgs) ToRateLimitServiceTypeOutputWithContext(ctx context.Context) RateLimitServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitServiceTypeOutput)
}

// RateLimitService is the Schema for the ratelimitservices API
type RateLimitServiceTypeOutput struct{ *pulumi.OutputState }

func (RateLimitServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitServiceType)(nil)).Elem()
}

func (o RateLimitServiceTypeOutput) ToRateLimitServiceTypeOutput() RateLimitServiceTypeOutput {
	return o
}

func (o RateLimitServiceTypeOutput) ToRateLimitServiceTypeOutputWithContext(ctx context.Context) RateLimitServiceTypeOutput {
	return o
}

func (o RateLimitServiceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitServiceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o RateLimitServiceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitServiceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o RateLimitServiceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v RateLimitServiceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// RateLimitServiceSpec defines the desired state of RateLimitService
func (o RateLimitServiceTypeOutput) Spec() RateLimitServiceSpecPtrOutput {
	return o.ApplyT(func(v RateLimitServiceType) *RateLimitServiceSpec { return v.Spec }).(RateLimitServiceSpecPtrOutput)
}

type RateLimitServiceMetadata struct {
}

// RateLimitServiceMetadataInput is an input type that accepts RateLimitServiceMetadataArgs and RateLimitServiceMetadataOutput values.
// You can construct a concrete instance of `RateLimitServiceMetadataInput` via:
//
//          RateLimitServiceMetadataArgs{...}
type RateLimitServiceMetadataInput interface {
	pulumi.Input

	ToRateLimitServiceMetadataOutput() RateLimitServiceMetadataOutput
	ToRateLimitServiceMetadataOutputWithContext(context.Context) RateLimitServiceMetadataOutput
}

type RateLimitServiceMetadataArgs struct {
}

func (RateLimitServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitServiceMetadata)(nil)).Elem()
}

func (i RateLimitServiceMetadataArgs) ToRateLimitServiceMetadataOutput() RateLimitServiceMetadataOutput {
	return i.ToRateLimitServiceMetadataOutputWithContext(context.Background())
}

func (i RateLimitServiceMetadataArgs) ToRateLimitServiceMetadataOutputWithContext(ctx context.Context) RateLimitServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitServiceMetadataOutput)
}

type RateLimitServiceMetadataOutput struct{ *pulumi.OutputState }

func (RateLimitServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitServiceMetadata)(nil)).Elem()
}

func (o RateLimitServiceMetadataOutput) ToRateLimitServiceMetadataOutput() RateLimitServiceMetadataOutput {
	return o
}

func (o RateLimitServiceMetadataOutput) ToRateLimitServiceMetadataOutputWithContext(ctx context.Context) RateLimitServiceMetadataOutput {
	return o
}

// RateLimitServiceSpec defines the desired state of RateLimitService
type RateLimitServiceSpec struct {
	// Common to all Ambassador objects.
	Ambassador_id    interface{} `pulumi:"ambassador_id"`
	Domain           *string     `pulumi:"domain"`
	Protocol_version *string     `pulumi:"protocol_version"`
	Service          string      `pulumi:"service"`
	Timeout_ms       *int        `pulumi:"timeout_ms"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls interface{} `pulumi:"tls"`
}

// RateLimitServiceSpecInput is an input type that accepts RateLimitServiceSpecArgs and RateLimitServiceSpecOutput values.
// You can construct a concrete instance of `RateLimitServiceSpecInput` via:
//
//          RateLimitServiceSpecArgs{...}
type RateLimitServiceSpecInput interface {
	pulumi.Input

	ToRateLimitServiceSpecOutput() RateLimitServiceSpecOutput
	ToRateLimitServiceSpecOutputWithContext(context.Context) RateLimitServiceSpecOutput
}

// RateLimitServiceSpec defines the desired state of RateLimitService
type RateLimitServiceSpecArgs struct {
	// Common to all Ambassador objects.
	Ambassador_id    pulumi.Input          `pulumi:"ambassador_id"`
	Domain           pulumi.StringPtrInput `pulumi:"domain"`
	Protocol_version pulumi.StringPtrInput `pulumi:"protocol_version"`
	Service          pulumi.StringInput    `pulumi:"service"`
	Timeout_ms       pulumi.IntPtrInput    `pulumi:"timeout_ms"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls pulumi.Input `pulumi:"tls"`
}

func (RateLimitServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitServiceSpec)(nil)).Elem()
}

func (i RateLimitServiceSpecArgs) ToRateLimitServiceSpecOutput() RateLimitServiceSpecOutput {
	return i.ToRateLimitServiceSpecOutputWithContext(context.Background())
}

func (i RateLimitServiceSpecArgs) ToRateLimitServiceSpecOutputWithContext(ctx context.Context) RateLimitServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitServiceSpecOutput)
}

func (i RateLimitServiceSpecArgs) ToRateLimitServiceSpecPtrOutput() RateLimitServiceSpecPtrOutput {
	return i.ToRateLimitServiceSpecPtrOutputWithContext(context.Background())
}

func (i RateLimitServiceSpecArgs) ToRateLimitServiceSpecPtrOutputWithContext(ctx context.Context) RateLimitServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitServiceSpecOutput).ToRateLimitServiceSpecPtrOutputWithContext(ctx)
}

// RateLimitServiceSpecPtrInput is an input type that accepts RateLimitServiceSpecArgs, RateLimitServiceSpecPtr and RateLimitServiceSpecPtrOutput values.
// You can construct a concrete instance of `RateLimitServiceSpecPtrInput` via:
//
//          RateLimitServiceSpecArgs{...}
//
//  or:
//
//          nil
type RateLimitServiceSpecPtrInput interface {
	pulumi.Input

	ToRateLimitServiceSpecPtrOutput() RateLimitServiceSpecPtrOutput
	ToRateLimitServiceSpecPtrOutputWithContext(context.Context) RateLimitServiceSpecPtrOutput
}

type rateLimitServiceSpecPtrType RateLimitServiceSpecArgs

func RateLimitServiceSpecPtr(v *RateLimitServiceSpecArgs) RateLimitServiceSpecPtrInput {
	return (*rateLimitServiceSpecPtrType)(v)
}

func (*rateLimitServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitServiceSpec)(nil)).Elem()
}

func (i *rateLimitServiceSpecPtrType) ToRateLimitServiceSpecPtrOutput() RateLimitServiceSpecPtrOutput {
	return i.ToRateLimitServiceSpecPtrOutputWithContext(context.Background())
}

func (i *rateLimitServiceSpecPtrType) ToRateLimitServiceSpecPtrOutputWithContext(ctx context.Context) RateLimitServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RateLimitServiceSpecPtrOutput)
}

// RateLimitServiceSpec defines the desired state of RateLimitService
type RateLimitServiceSpecOutput struct{ *pulumi.OutputState }

func (RateLimitServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RateLimitServiceSpec)(nil)).Elem()
}

func (o RateLimitServiceSpecOutput) ToRateLimitServiceSpecOutput() RateLimitServiceSpecOutput {
	return o
}

func (o RateLimitServiceSpecOutput) ToRateLimitServiceSpecOutputWithContext(ctx context.Context) RateLimitServiceSpecOutput {
	return o
}

func (o RateLimitServiceSpecOutput) ToRateLimitServiceSpecPtrOutput() RateLimitServiceSpecPtrOutput {
	return o.ToRateLimitServiceSpecPtrOutputWithContext(context.Background())
}

func (o RateLimitServiceSpecOutput) ToRateLimitServiceSpecPtrOutputWithContext(ctx context.Context) RateLimitServiceSpecPtrOutput {
	return o.ApplyT(func(v RateLimitServiceSpec) *RateLimitServiceSpec {
		return &v
	}).(RateLimitServiceSpecPtrOutput)
}

// Common to all Ambassador objects.
func (o RateLimitServiceSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v RateLimitServiceSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o RateLimitServiceSpecOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitServiceSpec) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o RateLimitServiceSpecOutput) Protocol_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RateLimitServiceSpec) *string { return v.Protocol_version }).(pulumi.StringPtrOutput)
}

func (o RateLimitServiceSpecOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v RateLimitServiceSpec) string { return v.Service }).(pulumi.StringOutput)
}

func (o RateLimitServiceSpecOutput) Timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RateLimitServiceSpec) *int { return v.Timeout_ms }).(pulumi.IntPtrOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o RateLimitServiceSpecOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v RateLimitServiceSpec) interface{} { return v.Tls }).(pulumi.AnyOutput)
}

type RateLimitServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (RateLimitServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RateLimitServiceSpec)(nil)).Elem()
}

func (o RateLimitServiceSpecPtrOutput) ToRateLimitServiceSpecPtrOutput() RateLimitServiceSpecPtrOutput {
	return o
}

func (o RateLimitServiceSpecPtrOutput) ToRateLimitServiceSpecPtrOutputWithContext(ctx context.Context) RateLimitServiceSpecPtrOutput {
	return o
}

func (o RateLimitServiceSpecPtrOutput) Elem() RateLimitServiceSpecOutput {
	return o.ApplyT(func(v *RateLimitServiceSpec) RateLimitServiceSpec { return *v }).(RateLimitServiceSpecOutput)
}

// Common to all Ambassador objects.
func (o RateLimitServiceSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *RateLimitServiceSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o RateLimitServiceSpecPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitServiceSpecPtrOutput) Protocol_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitServiceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Protocol_version
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitServiceSpecPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RateLimitServiceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

func (o RateLimitServiceSpecPtrOutput) Timeout_ms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RateLimitServiceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Timeout_ms
	}).(pulumi.IntPtrOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o RateLimitServiceSpecPtrOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v *RateLimitServiceSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(pulumi.AnyOutput)
}

// TCPMapping is the Schema for the tcpmappings API
type TCPMappingType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TCPMappingSpec defines the desired state of TCPMapping
	Spec *TCPMappingSpec `pulumi:"spec"`
}

// TCPMappingTypeInput is an input type that accepts TCPMappingTypeArgs and TCPMappingTypeOutput values.
// You can construct a concrete instance of `TCPMappingTypeInput` via:
//
//          TCPMappingTypeArgs{...}
type TCPMappingTypeInput interface {
	pulumi.Input

	ToTCPMappingTypeOutput() TCPMappingTypeOutput
	ToTCPMappingTypeOutputWithContext(context.Context) TCPMappingTypeOutput
}

// TCPMapping is the Schema for the tcpmappings API
type TCPMappingTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// TCPMappingSpec defines the desired state of TCPMapping
	Spec TCPMappingSpecPtrInput `pulumi:"spec"`
}

func (TCPMappingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingType)(nil)).Elem()
}

func (i TCPMappingTypeArgs) ToTCPMappingTypeOutput() TCPMappingTypeOutput {
	return i.ToTCPMappingTypeOutputWithContext(context.Background())
}

func (i TCPMappingTypeArgs) ToTCPMappingTypeOutputWithContext(ctx context.Context) TCPMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPMappingTypeOutput)
}

// TCPMapping is the Schema for the tcpmappings API
type TCPMappingTypeOutput struct{ *pulumi.OutputState }

func (TCPMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingType)(nil)).Elem()
}

func (o TCPMappingTypeOutput) ToTCPMappingTypeOutput() TCPMappingTypeOutput {
	return o
}

func (o TCPMappingTypeOutput) ToTCPMappingTypeOutputWithContext(ctx context.Context) TCPMappingTypeOutput {
	return o
}

func (o TCPMappingTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TCPMappingTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TCPMappingTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v TCPMappingType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// TCPMappingSpec defines the desired state of TCPMapping
func (o TCPMappingTypeOutput) Spec() TCPMappingSpecPtrOutput {
	return o.ApplyT(func(v TCPMappingType) *TCPMappingSpec { return v.Spec }).(TCPMappingSpecPtrOutput)
}

type TCPMappingMetadata struct {
}

// TCPMappingMetadataInput is an input type that accepts TCPMappingMetadataArgs and TCPMappingMetadataOutput values.
// You can construct a concrete instance of `TCPMappingMetadataInput` via:
//
//          TCPMappingMetadataArgs{...}
type TCPMappingMetadataInput interface {
	pulumi.Input

	ToTCPMappingMetadataOutput() TCPMappingMetadataOutput
	ToTCPMappingMetadataOutputWithContext(context.Context) TCPMappingMetadataOutput
}

type TCPMappingMetadataArgs struct {
}

func (TCPMappingMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingMetadata)(nil)).Elem()
}

func (i TCPMappingMetadataArgs) ToTCPMappingMetadataOutput() TCPMappingMetadataOutput {
	return i.ToTCPMappingMetadataOutputWithContext(context.Background())
}

func (i TCPMappingMetadataArgs) ToTCPMappingMetadataOutputWithContext(ctx context.Context) TCPMappingMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPMappingMetadataOutput)
}

type TCPMappingMetadataOutput struct{ *pulumi.OutputState }

func (TCPMappingMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingMetadata)(nil)).Elem()
}

func (o TCPMappingMetadataOutput) ToTCPMappingMetadataOutput() TCPMappingMetadataOutput {
	return o
}

func (o TCPMappingMetadataOutput) ToTCPMappingMetadataOutputWithContext(ctx context.Context) TCPMappingMetadataOutput {
	return o
}

// TCPMappingSpec defines the desired state of TCPMapping
type TCPMappingSpec struct {
	Address *string `pulumi:"address"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id    interface{}                      `pulumi:"ambassador_id"`
	Circuit_breakers []TCPMappingSpecCircuit_breakers `pulumi:"circuit_breakers"`
	Cluster_tag      *string                          `pulumi:"cluster_tag"`
	Enable_ipv4      *bool                            `pulumi:"enable_ipv4"`
	Enable_ipv6      *bool                            `pulumi:"enable_ipv6"`
	Host             *string                          `pulumi:"host"`
	// FIXME(lukeshu): Surely this should be an 'int'?
	Idle_timeout_ms *string `pulumi:"idle_timeout_ms"`
	// Port isn't a pointer because it's required.
	Port     int     `pulumi:"port"`
	Resolver *string `pulumi:"resolver"`
	Service  string  `pulumi:"service"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls    interface{} `pulumi:"tls"`
	Weight *int        `pulumi:"weight"`
}

// TCPMappingSpecInput is an input type that accepts TCPMappingSpecArgs and TCPMappingSpecOutput values.
// You can construct a concrete instance of `TCPMappingSpecInput` via:
//
//          TCPMappingSpecArgs{...}
type TCPMappingSpecInput interface {
	pulumi.Input

	ToTCPMappingSpecOutput() TCPMappingSpecOutput
	ToTCPMappingSpecOutputWithContext(context.Context) TCPMappingSpecOutput
}

// TCPMappingSpec defines the desired state of TCPMapping
type TCPMappingSpecArgs struct {
	Address pulumi.StringPtrInput `pulumi:"address"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id    pulumi.Input                             `pulumi:"ambassador_id"`
	Circuit_breakers TCPMappingSpecCircuit_breakersArrayInput `pulumi:"circuit_breakers"`
	Cluster_tag      pulumi.StringPtrInput                    `pulumi:"cluster_tag"`
	Enable_ipv4      pulumi.BoolPtrInput                      `pulumi:"enable_ipv4"`
	Enable_ipv6      pulumi.BoolPtrInput                      `pulumi:"enable_ipv6"`
	Host             pulumi.StringPtrInput                    `pulumi:"host"`
	// FIXME(lukeshu): Surely this should be an 'int'?
	Idle_timeout_ms pulumi.StringPtrInput `pulumi:"idle_timeout_ms"`
	// Port isn't a pointer because it's required.
	Port     pulumi.IntInput       `pulumi:"port"`
	Resolver pulumi.StringPtrInput `pulumi:"resolver"`
	Service  pulumi.StringInput    `pulumi:"service"`
	// BoolOrString is a type that can hold a Boolean or a string.
	Tls    pulumi.Input       `pulumi:"tls"`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (TCPMappingSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingSpec)(nil)).Elem()
}

func (i TCPMappingSpecArgs) ToTCPMappingSpecOutput() TCPMappingSpecOutput {
	return i.ToTCPMappingSpecOutputWithContext(context.Background())
}

func (i TCPMappingSpecArgs) ToTCPMappingSpecOutputWithContext(ctx context.Context) TCPMappingSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPMappingSpecOutput)
}

func (i TCPMappingSpecArgs) ToTCPMappingSpecPtrOutput() TCPMappingSpecPtrOutput {
	return i.ToTCPMappingSpecPtrOutputWithContext(context.Background())
}

func (i TCPMappingSpecArgs) ToTCPMappingSpecPtrOutputWithContext(ctx context.Context) TCPMappingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPMappingSpecOutput).ToTCPMappingSpecPtrOutputWithContext(ctx)
}

// TCPMappingSpecPtrInput is an input type that accepts TCPMappingSpecArgs, TCPMappingSpecPtr and TCPMappingSpecPtrOutput values.
// You can construct a concrete instance of `TCPMappingSpecPtrInput` via:
//
//          TCPMappingSpecArgs{...}
//
//  or:
//
//          nil
type TCPMappingSpecPtrInput interface {
	pulumi.Input

	ToTCPMappingSpecPtrOutput() TCPMappingSpecPtrOutput
	ToTCPMappingSpecPtrOutputWithContext(context.Context) TCPMappingSpecPtrOutput
}

type tcpmappingSpecPtrType TCPMappingSpecArgs

func TCPMappingSpecPtr(v *TCPMappingSpecArgs) TCPMappingSpecPtrInput {
	return (*tcpmappingSpecPtrType)(v)
}

func (*tcpmappingSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPMappingSpec)(nil)).Elem()
}

func (i *tcpmappingSpecPtrType) ToTCPMappingSpecPtrOutput() TCPMappingSpecPtrOutput {
	return i.ToTCPMappingSpecPtrOutputWithContext(context.Background())
}

func (i *tcpmappingSpecPtrType) ToTCPMappingSpecPtrOutputWithContext(ctx context.Context) TCPMappingSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPMappingSpecPtrOutput)
}

// TCPMappingSpec defines the desired state of TCPMapping
type TCPMappingSpecOutput struct{ *pulumi.OutputState }

func (TCPMappingSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingSpec)(nil)).Elem()
}

func (o TCPMappingSpecOutput) ToTCPMappingSpecOutput() TCPMappingSpecOutput {
	return o
}

func (o TCPMappingSpecOutput) ToTCPMappingSpecOutputWithContext(ctx context.Context) TCPMappingSpecOutput {
	return o
}

func (o TCPMappingSpecOutput) ToTCPMappingSpecPtrOutput() TCPMappingSpecPtrOutput {
	return o.ToTCPMappingSpecPtrOutputWithContext(context.Background())
}

func (o TCPMappingSpecOutput) ToTCPMappingSpecPtrOutputWithContext(ctx context.Context) TCPMappingSpecPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *TCPMappingSpec {
		return &v
	}).(TCPMappingSpecPtrOutput)
}
func (o TCPMappingSpecOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o TCPMappingSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v TCPMappingSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o TCPMappingSpecOutput) Circuit_breakers() TCPMappingSpecCircuit_breakersArrayOutput {
	return o.ApplyT(func(v TCPMappingSpec) []TCPMappingSpecCircuit_breakers { return v.Circuit_breakers }).(TCPMappingSpecCircuit_breakersArrayOutput)
}

func (o TCPMappingSpecOutput) Cluster_tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *string { return v.Cluster_tag }).(pulumi.StringPtrOutput)
}

func (o TCPMappingSpecOutput) Enable_ipv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *bool { return v.Enable_ipv4 }).(pulumi.BoolPtrOutput)
}

func (o TCPMappingSpecOutput) Enable_ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *bool { return v.Enable_ipv6 }).(pulumi.BoolPtrOutput)
}

func (o TCPMappingSpecOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// FIXME(lukeshu): Surely this should be an 'int'?
func (o TCPMappingSpecOutput) Idle_timeout_ms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *string { return v.Idle_timeout_ms }).(pulumi.StringPtrOutput)
}

// Port isn't a pointer because it's required.
func (o TCPMappingSpecOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v TCPMappingSpec) int { return v.Port }).(pulumi.IntOutput)
}

func (o TCPMappingSpecOutput) Resolver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *string { return v.Resolver }).(pulumi.StringPtrOutput)
}

func (o TCPMappingSpecOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v TCPMappingSpec) string { return v.Service }).(pulumi.StringOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o TCPMappingSpecOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v TCPMappingSpec) interface{} { return v.Tls }).(pulumi.AnyOutput)
}

func (o TCPMappingSpecOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TCPMappingSpec) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type TCPMappingSpecPtrOutput struct{ *pulumi.OutputState }

func (TCPMappingSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TCPMappingSpec)(nil)).Elem()
}

func (o TCPMappingSpecPtrOutput) ToTCPMappingSpecPtrOutput() TCPMappingSpecPtrOutput {
	return o
}

func (o TCPMappingSpecPtrOutput) ToTCPMappingSpecPtrOutputWithContext(ctx context.Context) TCPMappingSpecPtrOutput {
	return o
}

func (o TCPMappingSpecPtrOutput) Elem() TCPMappingSpecOutput {
	return o.ApplyT(func(v *TCPMappingSpec) TCPMappingSpec { return *v }).(TCPMappingSpecOutput)
}

func (o TCPMappingSpecPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o TCPMappingSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *TCPMappingSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o TCPMappingSpecPtrOutput) Circuit_breakers() TCPMappingSpecCircuit_breakersArrayOutput {
	return o.ApplyT(func(v *TCPMappingSpec) []TCPMappingSpecCircuit_breakers {
		if v == nil {
			return nil
		}
		return v.Circuit_breakers
	}).(TCPMappingSpecCircuit_breakersArrayOutput)
}

func (o TCPMappingSpecPtrOutput) Cluster_tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Cluster_tag
	}).(pulumi.StringPtrOutput)
}

func (o TCPMappingSpecPtrOutput) Enable_ipv4() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Enable_ipv4
	}).(pulumi.BoolPtrOutput)
}

func (o TCPMappingSpecPtrOutput) Enable_ipv6() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Enable_ipv6
	}).(pulumi.BoolPtrOutput)
}

func (o TCPMappingSpecPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// FIXME(lukeshu): Surely this should be an 'int'?
func (o TCPMappingSpecPtrOutput) Idle_timeout_ms() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Idle_timeout_ms
	}).(pulumi.StringPtrOutput)
}

// Port isn't a pointer because it's required.
func (o TCPMappingSpecPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

func (o TCPMappingSpecPtrOutput) Resolver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *string {
		if v == nil {
			return nil
		}
		return v.Resolver
	}).(pulumi.StringPtrOutput)
}

func (o TCPMappingSpecPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

// BoolOrString is a type that can hold a Boolean or a string.
func (o TCPMappingSpecPtrOutput) Tls() pulumi.AnyOutput {
	return o.ApplyT(func(v *TCPMappingSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(pulumi.AnyOutput)
}

func (o TCPMappingSpecPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TCPMappingSpec) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type TCPMappingSpecCircuit_breakers struct {
	Max_connections      *int    `pulumi:"max_connections"`
	Max_pending_requests *int    `pulumi:"max_pending_requests"`
	Max_requests         *int    `pulumi:"max_requests"`
	Max_retries          *int    `pulumi:"max_retries"`
	Priority             *string `pulumi:"priority"`
}

// TCPMappingSpecCircuit_breakersInput is an input type that accepts TCPMappingSpecCircuit_breakersArgs and TCPMappingSpecCircuit_breakersOutput values.
// You can construct a concrete instance of `TCPMappingSpecCircuit_breakersInput` via:
//
//          TCPMappingSpecCircuit_breakersArgs{...}
type TCPMappingSpecCircuit_breakersInput interface {
	pulumi.Input

	ToTCPMappingSpecCircuit_breakersOutput() TCPMappingSpecCircuit_breakersOutput
	ToTCPMappingSpecCircuit_breakersOutputWithContext(context.Context) TCPMappingSpecCircuit_breakersOutput
}

type TCPMappingSpecCircuit_breakersArgs struct {
	Max_connections      pulumi.IntPtrInput    `pulumi:"max_connections"`
	Max_pending_requests pulumi.IntPtrInput    `pulumi:"max_pending_requests"`
	Max_requests         pulumi.IntPtrInput    `pulumi:"max_requests"`
	Max_retries          pulumi.IntPtrInput    `pulumi:"max_retries"`
	Priority             pulumi.StringPtrInput `pulumi:"priority"`
}

func (TCPMappingSpecCircuit_breakersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingSpecCircuit_breakers)(nil)).Elem()
}

func (i TCPMappingSpecCircuit_breakersArgs) ToTCPMappingSpecCircuit_breakersOutput() TCPMappingSpecCircuit_breakersOutput {
	return i.ToTCPMappingSpecCircuit_breakersOutputWithContext(context.Background())
}

func (i TCPMappingSpecCircuit_breakersArgs) ToTCPMappingSpecCircuit_breakersOutputWithContext(ctx context.Context) TCPMappingSpecCircuit_breakersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPMappingSpecCircuit_breakersOutput)
}

// TCPMappingSpecCircuit_breakersArrayInput is an input type that accepts TCPMappingSpecCircuit_breakersArray and TCPMappingSpecCircuit_breakersArrayOutput values.
// You can construct a concrete instance of `TCPMappingSpecCircuit_breakersArrayInput` via:
//
//          TCPMappingSpecCircuit_breakersArray{ TCPMappingSpecCircuit_breakersArgs{...} }
type TCPMappingSpecCircuit_breakersArrayInput interface {
	pulumi.Input

	ToTCPMappingSpecCircuit_breakersArrayOutput() TCPMappingSpecCircuit_breakersArrayOutput
	ToTCPMappingSpecCircuit_breakersArrayOutputWithContext(context.Context) TCPMappingSpecCircuit_breakersArrayOutput
}

type TCPMappingSpecCircuit_breakersArray []TCPMappingSpecCircuit_breakersInput

func (TCPMappingSpecCircuit_breakersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TCPMappingSpecCircuit_breakers)(nil)).Elem()
}

func (i TCPMappingSpecCircuit_breakersArray) ToTCPMappingSpecCircuit_breakersArrayOutput() TCPMappingSpecCircuit_breakersArrayOutput {
	return i.ToTCPMappingSpecCircuit_breakersArrayOutputWithContext(context.Background())
}

func (i TCPMappingSpecCircuit_breakersArray) ToTCPMappingSpecCircuit_breakersArrayOutputWithContext(ctx context.Context) TCPMappingSpecCircuit_breakersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TCPMappingSpecCircuit_breakersArrayOutput)
}

type TCPMappingSpecCircuit_breakersOutput struct{ *pulumi.OutputState }

func (TCPMappingSpecCircuit_breakersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TCPMappingSpecCircuit_breakers)(nil)).Elem()
}

func (o TCPMappingSpecCircuit_breakersOutput) ToTCPMappingSpecCircuit_breakersOutput() TCPMappingSpecCircuit_breakersOutput {
	return o
}

func (o TCPMappingSpecCircuit_breakersOutput) ToTCPMappingSpecCircuit_breakersOutputWithContext(ctx context.Context) TCPMappingSpecCircuit_breakersOutput {
	return o
}

func (o TCPMappingSpecCircuit_breakersOutput) Max_connections() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TCPMappingSpecCircuit_breakers) *int { return v.Max_connections }).(pulumi.IntPtrOutput)
}

func (o TCPMappingSpecCircuit_breakersOutput) Max_pending_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TCPMappingSpecCircuit_breakers) *int { return v.Max_pending_requests }).(pulumi.IntPtrOutput)
}

func (o TCPMappingSpecCircuit_breakersOutput) Max_requests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TCPMappingSpecCircuit_breakers) *int { return v.Max_requests }).(pulumi.IntPtrOutput)
}

func (o TCPMappingSpecCircuit_breakersOutput) Max_retries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TCPMappingSpecCircuit_breakers) *int { return v.Max_retries }).(pulumi.IntPtrOutput)
}

func (o TCPMappingSpecCircuit_breakersOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TCPMappingSpecCircuit_breakers) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

type TCPMappingSpecCircuit_breakersArrayOutput struct{ *pulumi.OutputState }

func (TCPMappingSpecCircuit_breakersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TCPMappingSpecCircuit_breakers)(nil)).Elem()
}

func (o TCPMappingSpecCircuit_breakersArrayOutput) ToTCPMappingSpecCircuit_breakersArrayOutput() TCPMappingSpecCircuit_breakersArrayOutput {
	return o
}

func (o TCPMappingSpecCircuit_breakersArrayOutput) ToTCPMappingSpecCircuit_breakersArrayOutputWithContext(ctx context.Context) TCPMappingSpecCircuit_breakersArrayOutput {
	return o
}

func (o TCPMappingSpecCircuit_breakersArrayOutput) Index(i pulumi.IntInput) TCPMappingSpecCircuit_breakersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TCPMappingSpecCircuit_breakers {
		return vs[0].([]TCPMappingSpecCircuit_breakers)[vs[1].(int)]
	}).(TCPMappingSpecCircuit_breakersOutput)
}

// TLSContext is the Schema for the tlscontexts API
type TLSContextType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TLSContextSpec defines the desired state of TLSContext
	Spec *TLSContextSpec `pulumi:"spec"`
}

// TLSContextTypeInput is an input type that accepts TLSContextTypeArgs and TLSContextTypeOutput values.
// You can construct a concrete instance of `TLSContextTypeInput` via:
//
//          TLSContextTypeArgs{...}
type TLSContextTypeInput interface {
	pulumi.Input

	ToTLSContextTypeOutput() TLSContextTypeOutput
	ToTLSContextTypeOutputWithContext(context.Context) TLSContextTypeOutput
}

// TLSContext is the Schema for the tlscontexts API
type TLSContextTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// TLSContextSpec defines the desired state of TLSContext
	Spec TLSContextSpecPtrInput `pulumi:"spec"`
}

func (TLSContextTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSContextType)(nil)).Elem()
}

func (i TLSContextTypeArgs) ToTLSContextTypeOutput() TLSContextTypeOutput {
	return i.ToTLSContextTypeOutputWithContext(context.Background())
}

func (i TLSContextTypeArgs) ToTLSContextTypeOutputWithContext(ctx context.Context) TLSContextTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSContextTypeOutput)
}

// TLSContext is the Schema for the tlscontexts API
type TLSContextTypeOutput struct{ *pulumi.OutputState }

func (TLSContextTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSContextType)(nil)).Elem()
}

func (o TLSContextTypeOutput) ToTLSContextTypeOutput() TLSContextTypeOutput {
	return o
}

func (o TLSContextTypeOutput) ToTLSContextTypeOutputWithContext(ctx context.Context) TLSContextTypeOutput {
	return o
}

func (o TLSContextTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TLSContextTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TLSContextTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v TLSContextType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// TLSContextSpec defines the desired state of TLSContext
func (o TLSContextTypeOutput) Spec() TLSContextSpecPtrOutput {
	return o.ApplyT(func(v TLSContextType) *TLSContextSpec { return v.Spec }).(TLSContextSpecPtrOutput)
}

type TLSContextMetadata struct {
}

// TLSContextMetadataInput is an input type that accepts TLSContextMetadataArgs and TLSContextMetadataOutput values.
// You can construct a concrete instance of `TLSContextMetadataInput` via:
//
//          TLSContextMetadataArgs{...}
type TLSContextMetadataInput interface {
	pulumi.Input

	ToTLSContextMetadataOutput() TLSContextMetadataOutput
	ToTLSContextMetadataOutputWithContext(context.Context) TLSContextMetadataOutput
}

type TLSContextMetadataArgs struct {
}

func (TLSContextMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSContextMetadata)(nil)).Elem()
}

func (i TLSContextMetadataArgs) ToTLSContextMetadataOutput() TLSContextMetadataOutput {
	return i.ToTLSContextMetadataOutputWithContext(context.Background())
}

func (i TLSContextMetadataArgs) ToTLSContextMetadataOutputWithContext(ctx context.Context) TLSContextMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSContextMetadataOutput)
}

type TLSContextMetadataOutput struct{ *pulumi.OutputState }

func (TLSContextMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSContextMetadata)(nil)).Elem()
}

func (o TLSContextMetadataOutput) ToTLSContextMetadataOutput() TLSContextMetadataOutput {
	return o
}

func (o TLSContextMetadataOutput) ToTLSContextMetadataOutputWithContext(ctx context.Context) TLSContextMetadataOutput {
	return o
}

// TLSContextSpec defines the desired state of TLSContext
type TLSContextSpec struct {
	Alpn_protocols *string `pulumi:"alpn_protocols"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id           interface{} `pulumi:"ambassador_id"`
	Ca_secret               *string     `pulumi:"ca_secret"`
	Cacert_chain_file       *string     `pulumi:"cacert_chain_file"`
	Cert_chain_file         *string     `pulumi:"cert_chain_file"`
	Cert_required           *bool       `pulumi:"cert_required"`
	Cipher_suites           []string    `pulumi:"cipher_suites"`
	Ecdh_curves             []string    `pulumi:"ecdh_curves"`
	Hosts                   []string    `pulumi:"hosts"`
	Max_tls_version         *string     `pulumi:"max_tls_version"`
	Min_tls_version         *string     `pulumi:"min_tls_version"`
	Private_key_file        *string     `pulumi:"private_key_file"`
	Redirect_cleartext_from *int        `pulumi:"redirect_cleartext_from"`
	Secret                  *string     `pulumi:"secret"`
	Secret_namespacing      *bool       `pulumi:"secret_namespacing"`
	Sni                     *string     `pulumi:"sni"`
}

// TLSContextSpecInput is an input type that accepts TLSContextSpecArgs and TLSContextSpecOutput values.
// You can construct a concrete instance of `TLSContextSpecInput` via:
//
//          TLSContextSpecArgs{...}
type TLSContextSpecInput interface {
	pulumi.Input

	ToTLSContextSpecOutput() TLSContextSpecOutput
	ToTLSContextSpecOutputWithContext(context.Context) TLSContextSpecOutput
}

// TLSContextSpec defines the desired state of TLSContext
type TLSContextSpecArgs struct {
	Alpn_protocols pulumi.StringPtrInput `pulumi:"alpn_protocols"`
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id           pulumi.Input            `pulumi:"ambassador_id"`
	Ca_secret               pulumi.StringPtrInput   `pulumi:"ca_secret"`
	Cacert_chain_file       pulumi.StringPtrInput   `pulumi:"cacert_chain_file"`
	Cert_chain_file         pulumi.StringPtrInput   `pulumi:"cert_chain_file"`
	Cert_required           pulumi.BoolPtrInput     `pulumi:"cert_required"`
	Cipher_suites           pulumi.StringArrayInput `pulumi:"cipher_suites"`
	Ecdh_curves             pulumi.StringArrayInput `pulumi:"ecdh_curves"`
	Hosts                   pulumi.StringArrayInput `pulumi:"hosts"`
	Max_tls_version         pulumi.StringPtrInput   `pulumi:"max_tls_version"`
	Min_tls_version         pulumi.StringPtrInput   `pulumi:"min_tls_version"`
	Private_key_file        pulumi.StringPtrInput   `pulumi:"private_key_file"`
	Redirect_cleartext_from pulumi.IntPtrInput      `pulumi:"redirect_cleartext_from"`
	Secret                  pulumi.StringPtrInput   `pulumi:"secret"`
	Secret_namespacing      pulumi.BoolPtrInput     `pulumi:"secret_namespacing"`
	Sni                     pulumi.StringPtrInput   `pulumi:"sni"`
}

func (TLSContextSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSContextSpec)(nil)).Elem()
}

func (i TLSContextSpecArgs) ToTLSContextSpecOutput() TLSContextSpecOutput {
	return i.ToTLSContextSpecOutputWithContext(context.Background())
}

func (i TLSContextSpecArgs) ToTLSContextSpecOutputWithContext(ctx context.Context) TLSContextSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSContextSpecOutput)
}

func (i TLSContextSpecArgs) ToTLSContextSpecPtrOutput() TLSContextSpecPtrOutput {
	return i.ToTLSContextSpecPtrOutputWithContext(context.Background())
}

func (i TLSContextSpecArgs) ToTLSContextSpecPtrOutputWithContext(ctx context.Context) TLSContextSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSContextSpecOutput).ToTLSContextSpecPtrOutputWithContext(ctx)
}

// TLSContextSpecPtrInput is an input type that accepts TLSContextSpecArgs, TLSContextSpecPtr and TLSContextSpecPtrOutput values.
// You can construct a concrete instance of `TLSContextSpecPtrInput` via:
//
//          TLSContextSpecArgs{...}
//
//  or:
//
//          nil
type TLSContextSpecPtrInput interface {
	pulumi.Input

	ToTLSContextSpecPtrOutput() TLSContextSpecPtrOutput
	ToTLSContextSpecPtrOutputWithContext(context.Context) TLSContextSpecPtrOutput
}

type tlscontextSpecPtrType TLSContextSpecArgs

func TLSContextSpecPtr(v *TLSContextSpecArgs) TLSContextSpecPtrInput {
	return (*tlscontextSpecPtrType)(v)
}

func (*tlscontextSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSContextSpec)(nil)).Elem()
}

func (i *tlscontextSpecPtrType) ToTLSContextSpecPtrOutput() TLSContextSpecPtrOutput {
	return i.ToTLSContextSpecPtrOutputWithContext(context.Background())
}

func (i *tlscontextSpecPtrType) ToTLSContextSpecPtrOutputWithContext(ctx context.Context) TLSContextSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TLSContextSpecPtrOutput)
}

// TLSContextSpec defines the desired state of TLSContext
type TLSContextSpecOutput struct{ *pulumi.OutputState }

func (TLSContextSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TLSContextSpec)(nil)).Elem()
}

func (o TLSContextSpecOutput) ToTLSContextSpecOutput() TLSContextSpecOutput {
	return o
}

func (o TLSContextSpecOutput) ToTLSContextSpecOutputWithContext(ctx context.Context) TLSContextSpecOutput {
	return o
}

func (o TLSContextSpecOutput) ToTLSContextSpecPtrOutput() TLSContextSpecPtrOutput {
	return o.ToTLSContextSpecPtrOutputWithContext(context.Background())
}

func (o TLSContextSpecOutput) ToTLSContextSpecPtrOutputWithContext(ctx context.Context) TLSContextSpecPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *TLSContextSpec {
		return &v
	}).(TLSContextSpecPtrOutput)
}
func (o TLSContextSpecOutput) Alpn_protocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Alpn_protocols }).(pulumi.StringPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o TLSContextSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v TLSContextSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o TLSContextSpecOutput) Ca_secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Ca_secret }).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecOutput) Cacert_chain_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Cacert_chain_file }).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecOutput) Cert_chain_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Cert_chain_file }).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecOutput) Cert_required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *bool { return v.Cert_required }).(pulumi.BoolPtrOutput)
}

func (o TLSContextSpecOutput) Cipher_suites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TLSContextSpec) []string { return v.Cipher_suites }).(pulumi.StringArrayOutput)
}

func (o TLSContextSpecOutput) Ecdh_curves() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TLSContextSpec) []string { return v.Ecdh_curves }).(pulumi.StringArrayOutput)
}

func (o TLSContextSpecOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TLSContextSpec) []string { return v.Hosts }).(pulumi.StringArrayOutput)
}

func (o TLSContextSpecOutput) Max_tls_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Max_tls_version }).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecOutput) Min_tls_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Min_tls_version }).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecOutput) Private_key_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Private_key_file }).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecOutput) Redirect_cleartext_from() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *int { return v.Redirect_cleartext_from }).(pulumi.IntPtrOutput)
}

func (o TLSContextSpecOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecOutput) Secret_namespacing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *bool { return v.Secret_namespacing }).(pulumi.BoolPtrOutput)
}

func (o TLSContextSpecOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TLSContextSpec) *string { return v.Sni }).(pulumi.StringPtrOutput)
}

type TLSContextSpecPtrOutput struct{ *pulumi.OutputState }

func (TLSContextSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TLSContextSpec)(nil)).Elem()
}

func (o TLSContextSpecPtrOutput) ToTLSContextSpecPtrOutput() TLSContextSpecPtrOutput {
	return o
}

func (o TLSContextSpecPtrOutput) ToTLSContextSpecPtrOutputWithContext(ctx context.Context) TLSContextSpecPtrOutput {
	return o
}

func (o TLSContextSpecPtrOutput) Elem() TLSContextSpecOutput {
	return o.ApplyT(func(v *TLSContextSpec) TLSContextSpec { return *v }).(TLSContextSpecOutput)
}

func (o TLSContextSpecPtrOutput) Alpn_protocols() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Alpn_protocols
	}).(pulumi.StringPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o TLSContextSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *TLSContextSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o TLSContextSpecPtrOutput) Ca_secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Ca_secret
	}).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecPtrOutput) Cacert_chain_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Cacert_chain_file
	}).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecPtrOutput) Cert_chain_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Cert_chain_file
	}).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecPtrOutput) Cert_required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Cert_required
	}).(pulumi.BoolPtrOutput)
}

func (o TLSContextSpecPtrOutput) Cipher_suites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TLSContextSpec) []string {
		if v == nil {
			return nil
		}
		return v.Cipher_suites
	}).(pulumi.StringArrayOutput)
}

func (o TLSContextSpecPtrOutput) Ecdh_curves() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TLSContextSpec) []string {
		if v == nil {
			return nil
		}
		return v.Ecdh_curves
	}).(pulumi.StringArrayOutput)
}

func (o TLSContextSpecPtrOutput) Hosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TLSContextSpec) []string {
		if v == nil {
			return nil
		}
		return v.Hosts
	}).(pulumi.StringArrayOutput)
}

func (o TLSContextSpecPtrOutput) Max_tls_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Max_tls_version
	}).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecPtrOutput) Min_tls_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Min_tls_version
	}).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecPtrOutput) Private_key_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Private_key_file
	}).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecPtrOutput) Redirect_cleartext_from() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *int {
		if v == nil {
			return nil
		}
		return v.Redirect_cleartext_from
	}).(pulumi.IntPtrOutput)
}

func (o TLSContextSpecPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

func (o TLSContextSpecPtrOutput) Secret_namespacing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Secret_namespacing
	}).(pulumi.BoolPtrOutput)
}

func (o TLSContextSpecPtrOutput) Sni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TLSContextSpec) *string {
		if v == nil {
			return nil
		}
		return v.Sni
	}).(pulumi.StringPtrOutput)
}

// TracingService is the Schema for the tracingservices API
type TracingServiceType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TracingServiceSpec defines the desired state of TracingService
	Spec *TracingServiceSpec `pulumi:"spec"`
}

// TracingServiceTypeInput is an input type that accepts TracingServiceTypeArgs and TracingServiceTypeOutput values.
// You can construct a concrete instance of `TracingServiceTypeInput` via:
//
//          TracingServiceTypeArgs{...}
type TracingServiceTypeInput interface {
	pulumi.Input

	ToTracingServiceTypeOutput() TracingServiceTypeOutput
	ToTracingServiceTypeOutputWithContext(context.Context) TracingServiceTypeOutput
}

// TracingService is the Schema for the tracingservices API
type TracingServiceTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// TracingServiceSpec defines the desired state of TracingService
	Spec TracingServiceSpecPtrInput `pulumi:"spec"`
}

func (TracingServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceType)(nil)).Elem()
}

func (i TracingServiceTypeArgs) ToTracingServiceTypeOutput() TracingServiceTypeOutput {
	return i.ToTracingServiceTypeOutputWithContext(context.Background())
}

func (i TracingServiceTypeArgs) ToTracingServiceTypeOutputWithContext(ctx context.Context) TracingServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceTypeOutput)
}

// TracingService is the Schema for the tracingservices API
type TracingServiceTypeOutput struct{ *pulumi.OutputState }

func (TracingServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceType)(nil)).Elem()
}

func (o TracingServiceTypeOutput) ToTracingServiceTypeOutput() TracingServiceTypeOutput {
	return o
}

func (o TracingServiceTypeOutput) ToTracingServiceTypeOutputWithContext(ctx context.Context) TracingServiceTypeOutput {
	return o
}

func (o TracingServiceTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TracingServiceTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TracingServiceTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v TracingServiceType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// TracingServiceSpec defines the desired state of TracingService
func (o TracingServiceTypeOutput) Spec() TracingServiceSpecPtrOutput {
	return o.ApplyT(func(v TracingServiceType) *TracingServiceSpec { return v.Spec }).(TracingServiceSpecPtrOutput)
}

type TracingServiceMetadata struct {
}

// TracingServiceMetadataInput is an input type that accepts TracingServiceMetadataArgs and TracingServiceMetadataOutput values.
// You can construct a concrete instance of `TracingServiceMetadataInput` via:
//
//          TracingServiceMetadataArgs{...}
type TracingServiceMetadataInput interface {
	pulumi.Input

	ToTracingServiceMetadataOutput() TracingServiceMetadataOutput
	ToTracingServiceMetadataOutputWithContext(context.Context) TracingServiceMetadataOutput
}

type TracingServiceMetadataArgs struct {
}

func (TracingServiceMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceMetadata)(nil)).Elem()
}

func (i TracingServiceMetadataArgs) ToTracingServiceMetadataOutput() TracingServiceMetadataOutput {
	return i.ToTracingServiceMetadataOutputWithContext(context.Background())
}

func (i TracingServiceMetadataArgs) ToTracingServiceMetadataOutputWithContext(ctx context.Context) TracingServiceMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceMetadataOutput)
}

type TracingServiceMetadataOutput struct{ *pulumi.OutputState }

func (TracingServiceMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceMetadata)(nil)).Elem()
}

func (o TracingServiceMetadataOutput) ToTracingServiceMetadataOutput() TracingServiceMetadataOutput {
	return o
}

func (o TracingServiceMetadataOutput) ToTracingServiceMetadataOutputWithContext(ctx context.Context) TracingServiceMetadataOutput {
	return o
}

// TracingServiceSpec defines the desired state of TracingService
type TracingServiceSpec struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id interface{}                 `pulumi:"ambassador_id"`
	Config        *TracingServiceSpecConfig   `pulumi:"config"`
	Driver        string                      `pulumi:"driver"`
	Sampling      *TracingServiceSpecSampling `pulumi:"sampling"`
	Service       string                      `pulumi:"service"`
	Tag_headers   []string                    `pulumi:"tag_headers"`
}

// TracingServiceSpecInput is an input type that accepts TracingServiceSpecArgs and TracingServiceSpecOutput values.
// You can construct a concrete instance of `TracingServiceSpecInput` via:
//
//          TracingServiceSpecArgs{...}
type TracingServiceSpecInput interface {
	pulumi.Input

	ToTracingServiceSpecOutput() TracingServiceSpecOutput
	ToTracingServiceSpecOutputWithContext(context.Context) TracingServiceSpecOutput
}

// TracingServiceSpec defines the desired state of TracingService
type TracingServiceSpecArgs struct {
	// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
	//     ambassador_id:    - "default"
	Ambassador_id pulumi.Input                       `pulumi:"ambassador_id"`
	Config        TracingServiceSpecConfigPtrInput   `pulumi:"config"`
	Driver        pulumi.StringInput                 `pulumi:"driver"`
	Sampling      TracingServiceSpecSamplingPtrInput `pulumi:"sampling"`
	Service       pulumi.StringInput                 `pulumi:"service"`
	Tag_headers   pulumi.StringArrayInput            `pulumi:"tag_headers"`
}

func (TracingServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceSpec)(nil)).Elem()
}

func (i TracingServiceSpecArgs) ToTracingServiceSpecOutput() TracingServiceSpecOutput {
	return i.ToTracingServiceSpecOutputWithContext(context.Background())
}

func (i TracingServiceSpecArgs) ToTracingServiceSpecOutputWithContext(ctx context.Context) TracingServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecOutput)
}

func (i TracingServiceSpecArgs) ToTracingServiceSpecPtrOutput() TracingServiceSpecPtrOutput {
	return i.ToTracingServiceSpecPtrOutputWithContext(context.Background())
}

func (i TracingServiceSpecArgs) ToTracingServiceSpecPtrOutputWithContext(ctx context.Context) TracingServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecOutput).ToTracingServiceSpecPtrOutputWithContext(ctx)
}

// TracingServiceSpecPtrInput is an input type that accepts TracingServiceSpecArgs, TracingServiceSpecPtr and TracingServiceSpecPtrOutput values.
// You can construct a concrete instance of `TracingServiceSpecPtrInput` via:
//
//          TracingServiceSpecArgs{...}
//
//  or:
//
//          nil
type TracingServiceSpecPtrInput interface {
	pulumi.Input

	ToTracingServiceSpecPtrOutput() TracingServiceSpecPtrOutput
	ToTracingServiceSpecPtrOutputWithContext(context.Context) TracingServiceSpecPtrOutput
}

type tracingServiceSpecPtrType TracingServiceSpecArgs

func TracingServiceSpecPtr(v *TracingServiceSpecArgs) TracingServiceSpecPtrInput {
	return (*tracingServiceSpecPtrType)(v)
}

func (*tracingServiceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingServiceSpec)(nil)).Elem()
}

func (i *tracingServiceSpecPtrType) ToTracingServiceSpecPtrOutput() TracingServiceSpecPtrOutput {
	return i.ToTracingServiceSpecPtrOutputWithContext(context.Background())
}

func (i *tracingServiceSpecPtrType) ToTracingServiceSpecPtrOutputWithContext(ctx context.Context) TracingServiceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecPtrOutput)
}

// TracingServiceSpec defines the desired state of TracingService
type TracingServiceSpecOutput struct{ *pulumi.OutputState }

func (TracingServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceSpec)(nil)).Elem()
}

func (o TracingServiceSpecOutput) ToTracingServiceSpecOutput() TracingServiceSpecOutput {
	return o
}

func (o TracingServiceSpecOutput) ToTracingServiceSpecOutputWithContext(ctx context.Context) TracingServiceSpecOutput {
	return o
}

func (o TracingServiceSpecOutput) ToTracingServiceSpecPtrOutput() TracingServiceSpecPtrOutput {
	return o.ToTracingServiceSpecPtrOutputWithContext(context.Background())
}

func (o TracingServiceSpecOutput) ToTracingServiceSpecPtrOutputWithContext(ctx context.Context) TracingServiceSpecPtrOutput {
	return o.ApplyT(func(v TracingServiceSpec) *TracingServiceSpec {
		return &v
	}).(TracingServiceSpecPtrOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o TracingServiceSpecOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v TracingServiceSpec) interface{} { return v.Ambassador_id }).(pulumi.AnyOutput)
}

func (o TracingServiceSpecOutput) Config() TracingServiceSpecConfigPtrOutput {
	return o.ApplyT(func(v TracingServiceSpec) *TracingServiceSpecConfig { return v.Config }).(TracingServiceSpecConfigPtrOutput)
}

func (o TracingServiceSpecOutput) Driver() pulumi.StringOutput {
	return o.ApplyT(func(v TracingServiceSpec) string { return v.Driver }).(pulumi.StringOutput)
}

func (o TracingServiceSpecOutput) Sampling() TracingServiceSpecSamplingPtrOutput {
	return o.ApplyT(func(v TracingServiceSpec) *TracingServiceSpecSampling { return v.Sampling }).(TracingServiceSpecSamplingPtrOutput)
}

func (o TracingServiceSpecOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v TracingServiceSpec) string { return v.Service }).(pulumi.StringOutput)
}

func (o TracingServiceSpecOutput) Tag_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TracingServiceSpec) []string { return v.Tag_headers }).(pulumi.StringArrayOutput)
}

type TracingServiceSpecPtrOutput struct{ *pulumi.OutputState }

func (TracingServiceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingServiceSpec)(nil)).Elem()
}

func (o TracingServiceSpecPtrOutput) ToTracingServiceSpecPtrOutput() TracingServiceSpecPtrOutput {
	return o
}

func (o TracingServiceSpecPtrOutput) ToTracingServiceSpecPtrOutputWithContext(ctx context.Context) TracingServiceSpecPtrOutput {
	return o
}

func (o TracingServiceSpecPtrOutput) Elem() TracingServiceSpecOutput {
	return o.ApplyT(func(v *TracingServiceSpec) TracingServiceSpec { return *v }).(TracingServiceSpecOutput)
}

// AmbassadorID declares which Ambassador instances should pay attention to this resource.  May either be a string or a list of strings.  If no value is provided, the default is:
//     ambassador_id:    - "default"
func (o TracingServiceSpecPtrOutput) Ambassador_id() pulumi.AnyOutput {
	return o.ApplyT(func(v *TracingServiceSpec) interface{} {
		if v == nil {
			return nil
		}
		return v.Ambassador_id
	}).(pulumi.AnyOutput)
}

func (o TracingServiceSpecPtrOutput) Config() TracingServiceSpecConfigPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpec) *TracingServiceSpecConfig {
		if v == nil {
			return nil
		}
		return v.Config
	}).(TracingServiceSpecConfigPtrOutput)
}

func (o TracingServiceSpecPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Driver
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecPtrOutput) Sampling() TracingServiceSpecSamplingPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpec) *TracingServiceSpecSampling {
		if v == nil {
			return nil
		}
		return v.Sampling
	}).(TracingServiceSpecSamplingPtrOutput)
}

func (o TracingServiceSpecPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Service
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecPtrOutput) Tag_headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TracingServiceSpec) []string {
		if v == nil {
			return nil
		}
		return v.Tag_headers
	}).(pulumi.StringArrayOutput)
}

type TracingServiceSpecConfig struct {
	Access_token_file          *string `pulumi:"access_token_file"`
	Collector_cluster          *string `pulumi:"collector_cluster"`
	Collector_endpoint         *string `pulumi:"collector_endpoint"`
	Collector_endpoint_version *string `pulumi:"collector_endpoint_version"`
	Collector_hostname         *string `pulumi:"collector_hostname"`
	Service_name               *string `pulumi:"service_name"`
	Shared_span_context        *bool   `pulumi:"shared_span_context"`
	Trace_id_128bit            *bool   `pulumi:"trace_id_128bit"`
}

// TracingServiceSpecConfigInput is an input type that accepts TracingServiceSpecConfigArgs and TracingServiceSpecConfigOutput values.
// You can construct a concrete instance of `TracingServiceSpecConfigInput` via:
//
//          TracingServiceSpecConfigArgs{...}
type TracingServiceSpecConfigInput interface {
	pulumi.Input

	ToTracingServiceSpecConfigOutput() TracingServiceSpecConfigOutput
	ToTracingServiceSpecConfigOutputWithContext(context.Context) TracingServiceSpecConfigOutput
}

type TracingServiceSpecConfigArgs struct {
	Access_token_file          pulumi.StringPtrInput `pulumi:"access_token_file"`
	Collector_cluster          pulumi.StringPtrInput `pulumi:"collector_cluster"`
	Collector_endpoint         pulumi.StringPtrInput `pulumi:"collector_endpoint"`
	Collector_endpoint_version pulumi.StringPtrInput `pulumi:"collector_endpoint_version"`
	Collector_hostname         pulumi.StringPtrInput `pulumi:"collector_hostname"`
	Service_name               pulumi.StringPtrInput `pulumi:"service_name"`
	Shared_span_context        pulumi.BoolPtrInput   `pulumi:"shared_span_context"`
	Trace_id_128bit            pulumi.BoolPtrInput   `pulumi:"trace_id_128bit"`
}

func (TracingServiceSpecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceSpecConfig)(nil)).Elem()
}

func (i TracingServiceSpecConfigArgs) ToTracingServiceSpecConfigOutput() TracingServiceSpecConfigOutput {
	return i.ToTracingServiceSpecConfigOutputWithContext(context.Background())
}

func (i TracingServiceSpecConfigArgs) ToTracingServiceSpecConfigOutputWithContext(ctx context.Context) TracingServiceSpecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecConfigOutput)
}

func (i TracingServiceSpecConfigArgs) ToTracingServiceSpecConfigPtrOutput() TracingServiceSpecConfigPtrOutput {
	return i.ToTracingServiceSpecConfigPtrOutputWithContext(context.Background())
}

func (i TracingServiceSpecConfigArgs) ToTracingServiceSpecConfigPtrOutputWithContext(ctx context.Context) TracingServiceSpecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecConfigOutput).ToTracingServiceSpecConfigPtrOutputWithContext(ctx)
}

// TracingServiceSpecConfigPtrInput is an input type that accepts TracingServiceSpecConfigArgs, TracingServiceSpecConfigPtr and TracingServiceSpecConfigPtrOutput values.
// You can construct a concrete instance of `TracingServiceSpecConfigPtrInput` via:
//
//          TracingServiceSpecConfigArgs{...}
//
//  or:
//
//          nil
type TracingServiceSpecConfigPtrInput interface {
	pulumi.Input

	ToTracingServiceSpecConfigPtrOutput() TracingServiceSpecConfigPtrOutput
	ToTracingServiceSpecConfigPtrOutputWithContext(context.Context) TracingServiceSpecConfigPtrOutput
}

type tracingServiceSpecConfigPtrType TracingServiceSpecConfigArgs

func TracingServiceSpecConfigPtr(v *TracingServiceSpecConfigArgs) TracingServiceSpecConfigPtrInput {
	return (*tracingServiceSpecConfigPtrType)(v)
}

func (*tracingServiceSpecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingServiceSpecConfig)(nil)).Elem()
}

func (i *tracingServiceSpecConfigPtrType) ToTracingServiceSpecConfigPtrOutput() TracingServiceSpecConfigPtrOutput {
	return i.ToTracingServiceSpecConfigPtrOutputWithContext(context.Background())
}

func (i *tracingServiceSpecConfigPtrType) ToTracingServiceSpecConfigPtrOutputWithContext(ctx context.Context) TracingServiceSpecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecConfigPtrOutput)
}

type TracingServiceSpecConfigOutput struct{ *pulumi.OutputState }

func (TracingServiceSpecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceSpecConfig)(nil)).Elem()
}

func (o TracingServiceSpecConfigOutput) ToTracingServiceSpecConfigOutput() TracingServiceSpecConfigOutput {
	return o
}

func (o TracingServiceSpecConfigOutput) ToTracingServiceSpecConfigOutputWithContext(ctx context.Context) TracingServiceSpecConfigOutput {
	return o
}

func (o TracingServiceSpecConfigOutput) ToTracingServiceSpecConfigPtrOutput() TracingServiceSpecConfigPtrOutput {
	return o.ToTracingServiceSpecConfigPtrOutputWithContext(context.Background())
}

func (o TracingServiceSpecConfigOutput) ToTracingServiceSpecConfigPtrOutputWithContext(ctx context.Context) TracingServiceSpecConfigPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *TracingServiceSpecConfig {
		return &v
	}).(TracingServiceSpecConfigPtrOutput)
}
func (o TracingServiceSpecConfigOutput) Access_token_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *string { return v.Access_token_file }).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigOutput) Collector_cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *string { return v.Collector_cluster }).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigOutput) Collector_endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *string { return v.Collector_endpoint }).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigOutput) Collector_endpoint_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *string { return v.Collector_endpoint_version }).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigOutput) Collector_hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *string { return v.Collector_hostname }).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigOutput) Service_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *string { return v.Service_name }).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigOutput) Shared_span_context() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *bool { return v.Shared_span_context }).(pulumi.BoolPtrOutput)
}

func (o TracingServiceSpecConfigOutput) Trace_id_128bit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecConfig) *bool { return v.Trace_id_128bit }).(pulumi.BoolPtrOutput)
}

type TracingServiceSpecConfigPtrOutput struct{ *pulumi.OutputState }

func (TracingServiceSpecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingServiceSpecConfig)(nil)).Elem()
}

func (o TracingServiceSpecConfigPtrOutput) ToTracingServiceSpecConfigPtrOutput() TracingServiceSpecConfigPtrOutput {
	return o
}

func (o TracingServiceSpecConfigPtrOutput) ToTracingServiceSpecConfigPtrOutputWithContext(ctx context.Context) TracingServiceSpecConfigPtrOutput {
	return o
}

func (o TracingServiceSpecConfigPtrOutput) Elem() TracingServiceSpecConfigOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) TracingServiceSpecConfig { return *v }).(TracingServiceSpecConfigOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Access_token_file() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Access_token_file
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Collector_cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Collector_cluster
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Collector_endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Collector_endpoint
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Collector_endpoint_version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Collector_endpoint_version
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Collector_hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Collector_hostname
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Service_name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Service_name
	}).(pulumi.StringPtrOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Shared_span_context() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Shared_span_context
	}).(pulumi.BoolPtrOutput)
}

func (o TracingServiceSpecConfigPtrOutput) Trace_id_128bit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Trace_id_128bit
	}).(pulumi.BoolPtrOutput)
}

type TracingServiceSpecSampling struct {
	Client  *int `pulumi:"client"`
	Overall *int `pulumi:"overall"`
	Random  *int `pulumi:"random"`
}

// TracingServiceSpecSamplingInput is an input type that accepts TracingServiceSpecSamplingArgs and TracingServiceSpecSamplingOutput values.
// You can construct a concrete instance of `TracingServiceSpecSamplingInput` via:
//
//          TracingServiceSpecSamplingArgs{...}
type TracingServiceSpecSamplingInput interface {
	pulumi.Input

	ToTracingServiceSpecSamplingOutput() TracingServiceSpecSamplingOutput
	ToTracingServiceSpecSamplingOutputWithContext(context.Context) TracingServiceSpecSamplingOutput
}

type TracingServiceSpecSamplingArgs struct {
	Client  pulumi.IntPtrInput `pulumi:"client"`
	Overall pulumi.IntPtrInput `pulumi:"overall"`
	Random  pulumi.IntPtrInput `pulumi:"random"`
}

func (TracingServiceSpecSamplingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceSpecSampling)(nil)).Elem()
}

func (i TracingServiceSpecSamplingArgs) ToTracingServiceSpecSamplingOutput() TracingServiceSpecSamplingOutput {
	return i.ToTracingServiceSpecSamplingOutputWithContext(context.Background())
}

func (i TracingServiceSpecSamplingArgs) ToTracingServiceSpecSamplingOutputWithContext(ctx context.Context) TracingServiceSpecSamplingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecSamplingOutput)
}

func (i TracingServiceSpecSamplingArgs) ToTracingServiceSpecSamplingPtrOutput() TracingServiceSpecSamplingPtrOutput {
	return i.ToTracingServiceSpecSamplingPtrOutputWithContext(context.Background())
}

func (i TracingServiceSpecSamplingArgs) ToTracingServiceSpecSamplingPtrOutputWithContext(ctx context.Context) TracingServiceSpecSamplingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecSamplingOutput).ToTracingServiceSpecSamplingPtrOutputWithContext(ctx)
}

// TracingServiceSpecSamplingPtrInput is an input type that accepts TracingServiceSpecSamplingArgs, TracingServiceSpecSamplingPtr and TracingServiceSpecSamplingPtrOutput values.
// You can construct a concrete instance of `TracingServiceSpecSamplingPtrInput` via:
//
//          TracingServiceSpecSamplingArgs{...}
//
//  or:
//
//          nil
type TracingServiceSpecSamplingPtrInput interface {
	pulumi.Input

	ToTracingServiceSpecSamplingPtrOutput() TracingServiceSpecSamplingPtrOutput
	ToTracingServiceSpecSamplingPtrOutputWithContext(context.Context) TracingServiceSpecSamplingPtrOutput
}

type tracingServiceSpecSamplingPtrType TracingServiceSpecSamplingArgs

func TracingServiceSpecSamplingPtr(v *TracingServiceSpecSamplingArgs) TracingServiceSpecSamplingPtrInput {
	return (*tracingServiceSpecSamplingPtrType)(v)
}

func (*tracingServiceSpecSamplingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingServiceSpecSampling)(nil)).Elem()
}

func (i *tracingServiceSpecSamplingPtrType) ToTracingServiceSpecSamplingPtrOutput() TracingServiceSpecSamplingPtrOutput {
	return i.ToTracingServiceSpecSamplingPtrOutputWithContext(context.Background())
}

func (i *tracingServiceSpecSamplingPtrType) ToTracingServiceSpecSamplingPtrOutputWithContext(ctx context.Context) TracingServiceSpecSamplingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceSpecSamplingPtrOutput)
}

type TracingServiceSpecSamplingOutput struct{ *pulumi.OutputState }

func (TracingServiceSpecSamplingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingServiceSpecSampling)(nil)).Elem()
}

func (o TracingServiceSpecSamplingOutput) ToTracingServiceSpecSamplingOutput() TracingServiceSpecSamplingOutput {
	return o
}

func (o TracingServiceSpecSamplingOutput) ToTracingServiceSpecSamplingOutputWithContext(ctx context.Context) TracingServiceSpecSamplingOutput {
	return o
}

func (o TracingServiceSpecSamplingOutput) ToTracingServiceSpecSamplingPtrOutput() TracingServiceSpecSamplingPtrOutput {
	return o.ToTracingServiceSpecSamplingPtrOutputWithContext(context.Background())
}

func (o TracingServiceSpecSamplingOutput) ToTracingServiceSpecSamplingPtrOutputWithContext(ctx context.Context) TracingServiceSpecSamplingPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecSampling) *TracingServiceSpecSampling {
		return &v
	}).(TracingServiceSpecSamplingPtrOutput)
}
func (o TracingServiceSpecSamplingOutput) Client() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecSampling) *int { return v.Client }).(pulumi.IntPtrOutput)
}

func (o TracingServiceSpecSamplingOutput) Overall() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecSampling) *int { return v.Overall }).(pulumi.IntPtrOutput)
}

func (o TracingServiceSpecSamplingOutput) Random() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TracingServiceSpecSampling) *int { return v.Random }).(pulumi.IntPtrOutput)
}

type TracingServiceSpecSamplingPtrOutput struct{ *pulumi.OutputState }

func (TracingServiceSpecSamplingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TracingServiceSpecSampling)(nil)).Elem()
}

func (o TracingServiceSpecSamplingPtrOutput) ToTracingServiceSpecSamplingPtrOutput() TracingServiceSpecSamplingPtrOutput {
	return o
}

func (o TracingServiceSpecSamplingPtrOutput) ToTracingServiceSpecSamplingPtrOutputWithContext(ctx context.Context) TracingServiceSpecSamplingPtrOutput {
	return o
}

func (o TracingServiceSpecSamplingPtrOutput) Elem() TracingServiceSpecSamplingOutput {
	return o.ApplyT(func(v *TracingServiceSpecSampling) TracingServiceSpecSampling { return *v }).(TracingServiceSpecSamplingOutput)
}

func (o TracingServiceSpecSamplingPtrOutput) Client() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecSampling) *int {
		if v == nil {
			return nil
		}
		return v.Client
	}).(pulumi.IntPtrOutput)
}

func (o TracingServiceSpecSamplingPtrOutput) Overall() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecSampling) *int {
		if v == nil {
			return nil
		}
		return v.Overall
	}).(pulumi.IntPtrOutput)
}

func (o TracingServiceSpecSamplingPtrOutput) Random() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TracingServiceSpecSampling) *int {
		if v == nil {
			return nil
		}
		return v.Random
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthServiceTypeOutput{})
	pulumi.RegisterOutputType(AuthServiceMetadataOutput{})
	pulumi.RegisterOutputType(AuthServiceSpecOutput{})
	pulumi.RegisterOutputType(AuthServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(AuthServiceSpecAdd_auth_headersOutput{})
	pulumi.RegisterOutputType(AuthServiceSpecInclude_bodyOutput{})
	pulumi.RegisterOutputType(AuthServiceSpecInclude_bodyPtrOutput{})
	pulumi.RegisterOutputType(AuthServiceSpecStatus_on_errorOutput{})
	pulumi.RegisterOutputType(AuthServiceSpecStatus_on_errorPtrOutput{})
	pulumi.RegisterOutputType(ConsulResolverTypeOutput{})
	pulumi.RegisterOutputType(ConsulResolverMetadataOutput{})
	pulumi.RegisterOutputType(ConsulResolverSpecOutput{})
	pulumi.RegisterOutputType(ConsulResolverSpecPtrOutput{})
	pulumi.RegisterOutputType(KubernetesEndpointResolverTypeOutput{})
	pulumi.RegisterOutputType(KubernetesEndpointResolverMetadataOutput{})
	pulumi.RegisterOutputType(KubernetesEndpointResolverSpecOutput{})
	pulumi.RegisterOutputType(KubernetesEndpointResolverSpecPtrOutput{})
	pulumi.RegisterOutputType(KubernetesServiceResolverTypeOutput{})
	pulumi.RegisterOutputType(KubernetesServiceResolverMetadataOutput{})
	pulumi.RegisterOutputType(KubernetesServiceResolverSpecOutput{})
	pulumi.RegisterOutputType(KubernetesServiceResolverSpecPtrOutput{})
	pulumi.RegisterOutputType(LogServiceTypeOutput{})
	pulumi.RegisterOutputType(LogServiceMetadataOutput{})
	pulumi.RegisterOutputType(LogServiceSpecOutput{})
	pulumi.RegisterOutputType(LogServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(LogServiceSpecDriver_configOutput{})
	pulumi.RegisterOutputType(LogServiceSpecDriver_configPtrOutput{})
	pulumi.RegisterOutputType(LogServiceSpecDriver_configAdditional_log_headersOutput{})
	pulumi.RegisterOutputType(LogServiceSpecDriver_configAdditional_log_headersArrayOutput{})
	pulumi.RegisterOutputType(MappingTypeOutput{})
	pulumi.RegisterOutputType(MappingMetadataOutput{})
	pulumi.RegisterOutputType(MappingSpecOutput{})
	pulumi.RegisterOutputType(MappingSpecPtrOutput{})
	pulumi.RegisterOutputType(MappingSpecAdd_request_headersOutput{})
	pulumi.RegisterOutputType(MappingSpecAdd_request_headersOneOf2Output{})
	pulumi.RegisterOutputType(MappingSpecAdd_response_headersOutput{})
	pulumi.RegisterOutputType(MappingSpecAdd_response_headersOneOf2Output{})
	pulumi.RegisterOutputType(MappingSpecAuth_context_extensionsOutput{})
	pulumi.RegisterOutputType(MappingSpecCircuit_breakersOutput{})
	pulumi.RegisterOutputType(MappingSpecCircuit_breakersArrayOutput{})
	pulumi.RegisterOutputType(MappingSpecCorsOutput{})
	pulumi.RegisterOutputType(MappingSpecCorsPtrOutput{})
	pulumi.RegisterOutputType(MappingSpecDocsOutput{})
	pulumi.RegisterOutputType(MappingSpecDocsPtrOutput{})
	pulumi.RegisterOutputType(MappingSpecEnvoy_overrideOutput{})
	pulumi.RegisterOutputType(MappingSpecError_response_overridesOutput{})
	pulumi.RegisterOutputType(MappingSpecError_response_overridesArrayOutput{})
	pulumi.RegisterOutputType(MappingSpecError_response_overridesBodyOutput{})
	pulumi.RegisterOutputType(MappingSpecError_response_overridesBodyJson_formatOutput{})
	pulumi.RegisterOutputType(MappingSpecError_response_overridesBodyText_format_sourceOutput{})
	pulumi.RegisterOutputType(MappingSpecError_response_overridesBodyText_format_sourcePtrOutput{})
	pulumi.RegisterOutputType(MappingSpecHeadersOutput{})
	pulumi.RegisterOutputType(MappingSpecKeepaliveOutput{})
	pulumi.RegisterOutputType(MappingSpecKeepalivePtrOutput{})
	pulumi.RegisterOutputType(MappingSpecLabelsOutput{})
	pulumi.RegisterOutputType(MappingSpecLoad_balancerOutput{})
	pulumi.RegisterOutputType(MappingSpecLoad_balancerPtrOutput{})
	pulumi.RegisterOutputType(MappingSpecLoad_balancerCookieOutput{})
	pulumi.RegisterOutputType(MappingSpecLoad_balancerCookiePtrOutput{})
	pulumi.RegisterOutputType(MappingSpecModulesOutput{})
	pulumi.RegisterOutputType(MappingSpecQuery_parametersOutput{})
	pulumi.RegisterOutputType(MappingSpecRegex_headersOutput{})
	pulumi.RegisterOutputType(MappingSpecRegex_query_parametersOutput{})
	pulumi.RegisterOutputType(MappingSpecRegex_redirectOutput{})
	pulumi.RegisterOutputType(MappingSpecRegex_rewriteOutput{})
	pulumi.RegisterOutputType(MappingSpecRetry_policyOutput{})
	pulumi.RegisterOutputType(MappingSpecRetry_policyPtrOutput{})
	pulumi.RegisterOutputType(MappingStatusOutput{})
	pulumi.RegisterOutputType(MappingStatusPtrOutput{})
	pulumi.RegisterOutputType(ModuleTypeOutput{})
	pulumi.RegisterOutputType(ModuleMetadataOutput{})
	pulumi.RegisterOutputType(ModuleSpecOutput{})
	pulumi.RegisterOutputType(ModuleSpecPtrOutput{})
	pulumi.RegisterOutputType(ModuleSpecConfigOutput{})
	pulumi.RegisterOutputType(RateLimitServiceTypeOutput{})
	pulumi.RegisterOutputType(RateLimitServiceMetadataOutput{})
	pulumi.RegisterOutputType(RateLimitServiceSpecOutput{})
	pulumi.RegisterOutputType(RateLimitServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(TCPMappingTypeOutput{})
	pulumi.RegisterOutputType(TCPMappingMetadataOutput{})
	pulumi.RegisterOutputType(TCPMappingSpecOutput{})
	pulumi.RegisterOutputType(TCPMappingSpecPtrOutput{})
	pulumi.RegisterOutputType(TCPMappingSpecCircuit_breakersOutput{})
	pulumi.RegisterOutputType(TCPMappingSpecCircuit_breakersArrayOutput{})
	pulumi.RegisterOutputType(TLSContextTypeOutput{})
	pulumi.RegisterOutputType(TLSContextMetadataOutput{})
	pulumi.RegisterOutputType(TLSContextSpecOutput{})
	pulumi.RegisterOutputType(TLSContextSpecPtrOutput{})
	pulumi.RegisterOutputType(TracingServiceTypeOutput{})
	pulumi.RegisterOutputType(TracingServiceMetadataOutput{})
	pulumi.RegisterOutputType(TracingServiceSpecOutput{})
	pulumi.RegisterOutputType(TracingServiceSpecPtrOutput{})
	pulumi.RegisterOutputType(TracingServiceSpecConfigOutput{})
	pulumi.RegisterOutputType(TracingServiceSpecConfigPtrOutput{})
	pulumi.RegisterOutputType(TracingServiceSpecSamplingOutput{})
	pulumi.RegisterOutputType(TracingServiceSpecSamplingPtrOutput{})
}
