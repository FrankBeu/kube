// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TracingService is the Schema for the tracingservices API
type TracingService struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// TracingServiceSpec defines the desired state of TracingService
	Spec TracingServiceSpecPtrOutput `pulumi:"spec"`
}

// NewTracingService registers a new resource with the given unique name, arguments, and options.
func NewTracingService(ctx *pulumi.Context,
	name string, args *TracingServiceArgs, opts ...pulumi.ResourceOption) (*TracingService, error) {
	if args == nil {
		args = &TracingServiceArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("getambassador.io/v2")
	args.Kind = pulumi.StringPtr("TracingService")
	var resource TracingService
	err := ctx.RegisterResource("kubernetes:getambassador.io/v2:TracingService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTracingService gets an existing TracingService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTracingService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TracingServiceState, opts ...pulumi.ResourceOption) (*TracingService, error) {
	var resource TracingService
	err := ctx.ReadResource("kubernetes:getambassador.io/v2:TracingService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TracingService resources.
type tracingServiceState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TracingServiceSpec defines the desired state of TracingService
	Spec *TracingServiceSpec `pulumi:"spec"`
}

type TracingServiceState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// TracingServiceSpec defines the desired state of TracingService
	Spec TracingServiceSpecPtrInput
}

func (TracingServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*tracingServiceState)(nil)).Elem()
}

type tracingServiceArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TracingServiceSpec defines the desired state of TracingService
	Spec *TracingServiceSpec `pulumi:"spec"`
}

// The set of arguments for constructing a TracingService resource.
type TracingServiceArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// TracingServiceSpec defines the desired state of TracingService
	Spec TracingServiceSpecPtrInput
}

func (TracingServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tracingServiceArgs)(nil)).Elem()
}

type TracingServiceInput interface {
	pulumi.Input

	ToTracingServiceOutput() TracingServiceOutput
	ToTracingServiceOutputWithContext(ctx context.Context) TracingServiceOutput
}

func (*TracingService) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingService)(nil))
}

func (i *TracingService) ToTracingServiceOutput() TracingServiceOutput {
	return i.ToTracingServiceOutputWithContext(context.Background())
}

func (i *TracingService) ToTracingServiceOutputWithContext(ctx context.Context) TracingServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TracingServiceOutput)
}

type TracingServiceOutput struct {
	*pulumi.OutputState
}

func (TracingServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TracingService)(nil))
}

func (o TracingServiceOutput) ToTracingServiceOutput() TracingServiceOutput {
	return o
}

func (o TracingServiceOutput) ToTracingServiceOutputWithContext(ctx context.Context) TracingServiceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TracingServiceOutput{})
}
