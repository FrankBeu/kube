// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "kubernetes:getambassador.io/v2:AuthService":
		r = &AuthService{}
	case "kubernetes:getambassador.io/v2:ConsulResolver":
		r = &ConsulResolver{}
	case "kubernetes:getambassador.io/v2:DevPortal":
		r = &DevPortal{}
	case "kubernetes:getambassador.io/v2:Host":
		r = &Host{}
	case "kubernetes:getambassador.io/v2:KubernetesEndpointResolver":
		r = &KubernetesEndpointResolver{}
	case "kubernetes:getambassador.io/v2:KubernetesServiceResolver":
		r = &KubernetesServiceResolver{}
	case "kubernetes:getambassador.io/v2:LogService":
		r = &LogService{}
	case "kubernetes:getambassador.io/v2:Mapping":
		r = &Mapping{}
	case "kubernetes:getambassador.io/v2:Module":
		r = &Module{}
	case "kubernetes:getambassador.io/v2:RateLimitService":
		r = &RateLimitService{}
	case "kubernetes:getambassador.io/v2:TCPMapping":
		r = &TCPMapping{}
	case "kubernetes:getambassador.io/v2:TLSContext":
		r = &TLSContext{}
	case "kubernetes:getambassador.io/v2:TracingService":
		r = &TracingService{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := kubernetes.PkgVersion()
	if err != nil {
		fmt.Println("failed to determine package version. defaulting to v1: %v", err)
	}
	pulumi.RegisterResourceModule(
		"crds",
		"getambassador.io/v2",
		&module{version},
	)
}
