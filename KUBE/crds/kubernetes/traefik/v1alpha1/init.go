// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "kubernetes:traefik.containo.us/v1alpha1:IngressRoute":
		r = &IngressRoute{}
	case "kubernetes:traefik.containo.us/v1alpha1:IngressRouteTCP":
		r = &IngressRouteTCP{}
	case "kubernetes:traefik.containo.us/v1alpha1:IngressRouteUDP":
		r = &IngressRouteUDP{}
	case "kubernetes:traefik.containo.us/v1alpha1:Middleware":
		r = &Middleware{}
	case "kubernetes:traefik.containo.us/v1alpha1:MiddlewareTCP":
		r = &MiddlewareTCP{}
	case "kubernetes:traefik.containo.us/v1alpha1:ServersTransport":
		r = &ServersTransport{}
	case "kubernetes:traefik.containo.us/v1alpha1:TLSOption":
		r = &TLSOption{}
	case "kubernetes:traefik.containo.us/v1alpha1:TLSStore":
		r = &TLSStore{}
	case "kubernetes:traefik.containo.us/v1alpha1:TraefikService":
		r = &TraefikService{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := kubernetes.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"crds",
		"traefik.containo.us/v1alpha1",
		&module{version},
	)
}
