* SubDomainViaIngress
nginx acts as payload
password is password
** preparation
**** env
#+BEGIN_SRC shell :results none
cp ./development.go ../../../development/development.go
#+END_SRC
**** stack
#+BEGIN_SRC shell :results none
cp ./Pulumi.kube-dev.yaml ../../../../Pulumi.kube-dev.yaml
#+END_SRC
** login
#+BEGIN_SRC shell :results silent
  cd ../../../..
  task 0
#+END_SRC
** create cluster
#+BEGIN_SRC shell :results silent
  cd ../../../..
  task 1d
#+END_SRC
** create stack
#+BEGIN_SRC shell :results silent
PULUMI_CONFIG_PASSPHRASE=password pulumi stack init --secrets-provider=passphrase kube-dev
#+END_SRC
** deploy
#+BEGIN_SRC shell :results silent
PULUMI_CONFIG_PASSPHRASE=password pulumi up
#+END_SRC
** check
*** via ingress
**** w/ DNS pointing to cluster
#+BEGIN_SRC shell :results drawer
curl -kL https://$(PULUMI_CONFIG_PASSPHRASE=password pulumi stack output testIngressUrl)
#+END_SRC
**** w/o DNS pointing to cluster
#+BEGIN_SRC shell :results drawer
curl -kL https://$(PULUMI_CONFIG_PASSPHRASE=password pulumi stack output testIngressUrl) --connect-to $(PULUMI_CONFIG_PASSPHRASE=password pulumi stack output testIngressUrl):443:127.0.0.1:32443
#+END_SRC
*** can also be accessed via api
**** enable the proxy
#+BEGIN_EXAMPLE shell
kubectl proxy
#+END_EXAMPLE
**** navigate to 
http://127.0.0.1:8001/api/v1/namespaces/test/services/testingress/proxy/
** aux
*** set domainName
#+BEGIN_SRC shell :results silent
PULUMI_CONFIG_PASSPHRASE=password pulumi config set --secret --path domainSecret.domain "domain.test"
#+END_SRC
*** ca.{cert,key} can be inserted into config
{cert,key} has to be generated
#+BEGIN_SRC shell :results silent
cd ../../../..
PULUMI_CONFIG_PASSPHRASE=password pulumi config set --secret --path certManager.ca.crt "$(base64 ./env/auxiliary/examples/SubDomainViaIngress/ca.crt )"
PULUMI_CONFIG_PASSPHRASE=password pulumi config set --secret --path certManager.ca.key "$(base64 ./env/auxiliary/examples/SubDomainViaIngress/ca.key )"
#+END_SRC
*** read cert/key
#+BEGIN_SRC shell :results silent
PULUMI_CONFIG_PASSPHRASE=password pulumi config get --path certManager.ca.crt
#+END_SRC
#+BEGIN_SRC shell :results silent
PULUMI_CONFIG_PASSPHRASE=password pulumi config get --path certManager.ca.key
#+END_SRC
#+BEGIN_SRC shell :results silent
PULUMI_CONFIG_PASSPHRASE=password pulumi config get --path certManager.ca.crt | base64 -d | openssl x509 -text -noout
#+END_SRC 
#+BEGIN_SRC shell :results silent
PULUMI_CONFIG_PASSPHRASE=password pulumi config get --path certManager.ca.key | base64 -d
#+END_SRC 


